// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/api.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protocol {
class ReturnDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Return>
     _instance;
} _Return_default_instance_;
class BlockReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlockReference>
     _instance;
} _BlockReference_default_instance_;
class WitnessListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WitnessList>
     _instance;
} _WitnessList_default_instance_;
class AssetIssueListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AssetIssueList>
     _instance;
} _AssetIssueList_default_instance_;
class BlockListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlockList>
     _instance;
} _BlockList_default_instance_;
class TransactionListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TransactionList>
     _instance;
} _TransactionList_default_instance_;
class NodeListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NodeList>
     _instance;
} _NodeList_default_instance_;
class NodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Node>
     _instance;
} _Node_default_instance_;
class AddressDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Address>
     _instance;
} _Address_default_instance_;
class EmptyMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EmptyMessage>
     _instance;
} _EmptyMessage_default_instance_;
class NumberMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NumberMessage>
     _instance;
} _NumberMessage_default_instance_;
class BytesMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BytesMessage>
     _instance;
} _BytesMessage_default_instance_;
class TimeMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TimeMessage>
     _instance;
} _TimeMessage_default_instance_;
class BlockLimitDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlockLimit>
     _instance;
} _BlockLimit_default_instance_;
class TransactionLimitDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TransactionLimit>
     _instance;
} _TransactionLimit_default_instance_;
class AccountPaginatedDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AccountPaginated>
     _instance;
} _AccountPaginated_default_instance_;
class TimePaginatedMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TimePaginatedMessage>
     _instance;
} _TimePaginatedMessage_default_instance_;
class AccountNetMessage_AssetNetUsedEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AccountNetMessage::AccountNetMessage_AssetNetUsedEntry>
     _instance;
} _AccountNetMessage_AssetNetUsedEntry_default_instance_;
class AccountNetMessage_AssetNetLimitEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AccountNetMessage::AccountNetMessage_AssetNetLimitEntry>
     _instance;
} _AccountNetMessage_AssetNetLimitEntry_default_instance_;
class AccountNetMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AccountNetMessage>
     _instance;
} _AccountNetMessage_default_instance_;

namespace protobuf_api_2fapi_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[20];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Return, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Return, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Return, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Return, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockReference, block_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockReference, block_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WitnessList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WitnessList, witnesses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueList, assetissue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockList, block_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionList, transaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeList, nodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumberMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumberMessage, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BytesMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BytesMessage, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeMessage, begininmilliseconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeMessage, endinmilliseconds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockLimit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockLimit, startnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockLimit, endnum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionLimit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionLimit, transactionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionLimit, limitnum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountPaginated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountPaginated, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountPaginated, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountPaginated, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimePaginatedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimePaginatedMessage, timemessage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimePaginatedMessage, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimePaginatedMessage, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountNetMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountNetMessage, freenetused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountNetMessage, freenetlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountNetMessage, netused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountNetMessage, netlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountNetMessage, assetnetused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountNetMessage, assetnetlimit_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Return)},
  { 8, -1, sizeof(BlockReference)},
  { 15, -1, sizeof(WitnessList)},
  { 21, -1, sizeof(AssetIssueList)},
  { 27, -1, sizeof(BlockList)},
  { 33, -1, sizeof(TransactionList)},
  { 39, -1, sizeof(NodeList)},
  { 45, -1, sizeof(Node)},
  { 51, -1, sizeof(Address)},
  { 58, -1, sizeof(EmptyMessage)},
  { 63, -1, sizeof(NumberMessage)},
  { 69, -1, sizeof(BytesMessage)},
  { 75, -1, sizeof(TimeMessage)},
  { 82, -1, sizeof(BlockLimit)},
  { 89, -1, sizeof(TransactionLimit)},
  { 96, -1, sizeof(AccountPaginated)},
  { 104, -1, sizeof(TimePaginatedMessage)},
  { 112, -1, sizeof(AccountNetMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Return_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WitnessList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AssetIssueList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TransactionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NodeList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Address_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EmptyMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NumberMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BytesMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TimeMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockLimit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TransactionLimit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountPaginated_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TimePaginatedMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountNetMessage_AssetNetUsedEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountNetMessage_AssetNetLimitEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountNetMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api/api.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[17].reflection = AccountNetMessage::AccountNetMessage_AssetNetUsedEntry::CreateReflection(file_level_metadata[17].descriptor, _AccountNetMessage_AssetNetUsedEntry_default_instance_._instance.get_mutable());
file_level_metadata[18].reflection = AccountNetMessage::AccountNetMessage_AssetNetLimitEntry::CreateReflection(file_level_metadata[18].descriptor, _AccountNetMessage_AssetNetLimitEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protocol::protobuf_core_2fTron_2eproto::InitDefaults();
  ::protocol::protobuf_core_2fContract_2eproto::InitDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  _Return_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Return_default_instance_);_BlockReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlockReference_default_instance_);_WitnessList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WitnessList_default_instance_);_AssetIssueList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AssetIssueList_default_instance_);_BlockList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlockList_default_instance_);_TransactionList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TransactionList_default_instance_);_NodeList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NodeList_default_instance_);_Node_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Node_default_instance_);_Address_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Address_default_instance_);_EmptyMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EmptyMessage_default_instance_);_NumberMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NumberMessage_default_instance_);_BytesMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BytesMessage_default_instance_);_TimeMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TimeMessage_default_instance_);_BlockLimit_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlockLimit_default_instance_);_TransactionLimit_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TransactionLimit_default_instance_);_AccountPaginated_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AccountPaginated_default_instance_);_TimePaginatedMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TimePaginatedMessage_default_instance_);_AccountNetMessage_AssetNetUsedEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AccountNetMessage_AssetNetUsedEntry_default_instance_);_AccountNetMessage_AssetNetLimitEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AccountNetMessage_AssetNetLimitEntry_default_instance_);_AccountNetMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AccountNetMessage_default_instance_);_Node_default_instance_._instance.get_mutable()->address_ = const_cast< ::protocol::Address*>(
      ::protocol::Address::internal_default_instance());
  _AccountPaginated_default_instance_._instance.get_mutable()->account_ = const_cast< ::protocol::Account*>(
      ::protocol::Account::internal_default_instance());
  _TimePaginatedMessage_default_instance_._instance.get_mutable()->timemessage_ = const_cast< ::protocol::TimeMessage*>(
      ::protocol::TimeMessage::internal_default_instance());
  _AccountNetMessage_AssetNetUsedEntry_default_instance_._instance.get_mutable()->set_default_instance(_AccountNetMessage_AssetNetUsedEntry_default_instance_._instance.get_mutable());
  _AccountNetMessage_AssetNetUsedEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AccountNetMessage_AssetNetLimitEntry_default_instance_._instance.get_mutable()->set_default_instance(_AccountNetMessage_AssetNetLimitEntry_default_instance_._instance.get_mutable());
  _AccountNetMessage_AssetNetLimitEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rapi/api.proto\022\010protocol\032\017core/Tron.pro"
      "to\032\023core/Contract.proto\032\034google/api/anno"
      "tations.proto\"\334\002\n\006Return\022\016\n\006result\030\001 \001(\010"
      "\022,\n\004code\030\002 \001(\0162\036.protocol.Return.respons"
      "e_code\022\017\n\007message\030\003 \001(\014\"\202\002\n\rresponse_cod"
      "e\022\013\n\007SUCCESS\020\000\022\014\n\010SIGERROR\020\001\022\033\n\027CONTRACT"
      "_VALIDATE_ERROR\020\002\022\026\n\022CONTRACT_EXE_ERROR\020"
      "\003\022\022\n\016BANDWITH_ERROR\020\004\022\031\n\025DUP_TRANSACTION"
      "_ERROR\020\005\022\017\n\013TAPOS_ERROR\020\006\022\035\n\031TOO_BIG_TRA"
      "NSACTION_ERROR\020\007\022 \n\034TRANSACTION_EXPIRATI"
      "ON_ERROR\020\010\022\017\n\013SERVER_BUSY\020\t\022\017\n\013OTHER_ERR"
      "OR\020\024\"7\n\016BlockReference\022\021\n\tblock_num\030\001 \001("
      "\003\022\022\n\nblock_hash\030\002 \001(\014\"3\n\013WitnessList\022$\n\t"
      "witnesses\030\001 \003(\0132\021.protocol.Witness\"B\n\016As"
      "setIssueList\0220\n\nassetIssue\030\001 \003(\0132\034.proto"
      "col.AssetIssueContract\"+\n\tBlockList\022\036\n\005b"
      "lock\030\001 \003(\0132\017.protocol.Block\"=\n\017Transacti"
      "onList\022*\n\013transaction\030\001 \003(\0132\025.protocol.T"
      "ransaction\")\n\010NodeList\022\035\n\005nodes\030\001 \003(\0132\016."
      "protocol.Node\"*\n\004Node\022\"\n\007address\030\001 \001(\0132\021"
      ".protocol.Address\"%\n\007Address\022\014\n\004host\030\001 \001"
      "(\014\022\014\n\004port\030\002 \001(\005\"\016\n\014EmptyMessage\"\034\n\rNumb"
      "erMessage\022\013\n\003num\030\001 \001(\003\"\035\n\014BytesMessage\022\r"
      "\n\005value\030\001 \001(\014\"E\n\013TimeMessage\022\033\n\023beginInM"
      "illiseconds\030\001 \001(\003\022\031\n\021endInMilliseconds\030\002"
      " \001(\003\".\n\nBlockLimit\022\020\n\010startNum\030\001 \001(\003\022\016\n\006"
      "endNum\030\002 \001(\003\";\n\020TransactionLimit\022\025\n\rtran"
      "sactionId\030\001 \001(\014\022\020\n\010limitNum\030\002 \001(\003\"U\n\020Acc"
      "ountPaginated\022\"\n\007account\030\001 \001(\0132\021.protoco"
      "l.Account\022\016\n\006offset\030\002 \001(\003\022\r\n\005limit\030\003 \001(\003"
      "\"a\n\024TimePaginatedMessage\022*\n\013timeMessage\030"
      "\001 \001(\0132\025.protocol.TimeMessage\022\016\n\006offset\030\002"
      " \001(\003\022\r\n\005limit\030\003 \001(\003\"\330\002\n\021AccountNetMessag"
      "e\022\023\n\013freeNetUsed\030\001 \001(\003\022\024\n\014freeNetLimit\030\002"
      " \001(\003\022\017\n\007NetUsed\030\003 \001(\003\022\020\n\010NetLimit\030\004 \001(\003\022"
      "C\n\014assetNetUsed\030\005 \003(\0132-.protocol.Account"
      "NetMessage.AssetNetUsedEntry\022E\n\rassetNet"
      "Limit\030\006 \003(\0132..protocol.AccountNetMessage"
      ".AssetNetLimitEntry\0323\n\021AssetNetUsedEntry"
      "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\003:\0028\001\0324\n\022Asse"
      "tNetLimitEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\003:\0028\0012\257\036\n\006Wallet\022g\n\nGetAccount\022\021.protoc"
      "ol.Account\032\021.protocol.Account\"3\202\323\344\223\002-\"\022/"
      "wallet/getaccount:\001*Z\024\022\022/wallet/getaccou"
      "nt\022\211\001\n\021CreateTransaction\022\032.protocol.Tran"
      "sferContract\032\025.protocol.Transaction\"A\202\323\344"
      "\223\002;\"\031/wallet/createtransaction:\001*Z\033\022\031/wa"
      "llet/createtransaction\022\210\001\n\024BroadcastTran"
      "saction\022\025.protocol.Transaction\032\020.protoco"
      "l.Return\"G\202\323\344\223\002A\"\034/wallet/broadcasttrans"
      "action:\001*Z\036\022\034/wallet/broadcasttransactio"
      "n\022\202\001\n\rUpdateAccount\022\037.protocol.AccountUp"
      "dateContract\032\025.protocol.Transaction\"9\202\323\344"
      "\223\0023\"\025/wallet/updateaccount:\001*Z\027\022\025/wallet"
      "/updateaccount\022\217\001\n\022VoteWitnessAccount\022\035."
      "protocol.VoteWitnessContract\032\025.protocol."
      "Transaction\"C\202\323\344\223\002=\"\032/wallet/votewitness"
      "account:\001*Z\034\022\032/wallet/votewitnessaccount"
      "\022\210\001\n\020CreateAssetIssue\022\034.protocol.AssetIs"
      "sueContract\032\025.protocol.Transaction\"\?\202\323\344\223"
      "\0029\"\030/wallet/createassetissue:\001*Z\032\022\030/wall"
      "et/createassetissue\022\202\001\n\rUpdateWitness\022\037."
      "protocol.WitnessUpdateContract\032\025.protoco"
      "l.Transaction\"9\202\323\344\223\0023\"\025/wallet/updatewit"
      "ness:\001*Z\027\022\025/wallet/updatewitness\022\202\001\n\rCre"
      "ateWitness\022\037.protocol.WitnessCreateContr"
      "act\032\025.protocol.Transaction\"9\202\323\344\223\0023\"\025/wal"
      "let/createwitness:\001*Z\027\022\025/wallet/createwi"
      "tness\022\202\001\n\rTransferAsset\022\037.protocol.Trans"
      "ferAssetContract\032\025.protocol.Transaction\""
      "9\202\323\344\223\0023\"\025/wallet/transferasset:\001*Z\027\022\025/wa"
      "llet/transferasset\022\242\001\n\025ParticipateAssetI"
      "ssue\022\'.protocol.ParticipateAssetIssueCon"
      "tract\032\025.protocol.Transaction\"I\202\323\344\223\002C\"\035/w"
      "allet/participateassetissue:\001*Z\037\022\035/walle"
      "t/participateassetissue\022\202\001\n\rFreezeBalanc"
      "e\022\037.protocol.FreezeBalanceContract\032\025.pro"
      "tocol.Transaction\"9\202\323\344\223\0023\"\025/wallet/freez"
      "ebalance:\001*Z\027\022\025/wallet/freezebalance\022\212\001\n"
      "\017UnfreezeBalance\022!.protocol.UnfreezeBala"
      "nceContract\032\025.protocol.Transaction\"=\202\323\344\223"
      "\0027\"\027/wallet/unfreezebalance:\001*Z\031\022\027/walle"
      "t/unfreezebalance\022\202\001\n\rUnfreezeAsset\022\037.pr"
      "otocol.UnfreezeAssetContract\032\025.protocol."
      "Transaction\"9\202\323\344\223\0023\"\025/wallet/unfreezeass"
      "et:\001*Z\027\022\025/wallet/unfreezeasset\022\212\001\n\017Withd"
      "rawBalance\022!.protocol.WithdrawBalanceCon"
      "tract\032\025.protocol.Transaction\"=\202\323\344\223\0027\"\027/w"
      "allet/withdrawbalance:\001*Z\031\022\027/wallet/with"
      "drawbalance\022z\n\013UpdateAsset\022\035.protocol.Up"
      "dateAssetContract\032\025.protocol.Transaction"
      "\"5\202\323\344\223\002/\"\023/wallet/updateasset:\001*Z\025\022\023/wal"
      "let/updateasset\022j\n\tListNodes\022\026.protocol."
      "EmptyMessage\032\022.protocol.NodeList\"1\202\323\344\223\002+"
      "\"\021/wallet/listnodes:\001*Z\023\022\021/wallet/listno"
      "des\022\222\001\n\026GetAssetIssueByAccount\022\021.protoco"
      "l.Account\032\030.protocol.AssetIssueList\"K\202\323\344"
      "\223\002E\"\036/wallet/getassetissuebyaccount:\001*Z "
      "\022\036/wallet/getassetissuebyaccount\022z\n\rGetA"
      "ccountNet\022\021.protocol.Account\032\033.protocol."
      "AccountNetMessage\"9\202\323\344\223\0023\"\025/wallet/getac"
      "countnet:\001*Z\027\022\025/wallet/getaccountnet\022\222\001\n"
      "\023GetAssetIssueByName\022\026.protocol.BytesMes"
      "sage\032\034.protocol.AssetIssueContract\"E\202\323\344\223"
      "\002\?\"\033/wallet/getassetissuebyname:\001*Z\035\022\033/w"
      "allet/getassetissuebyname\022m\n\013GetNowBlock"
      "\022\026.protocol.EmptyMessage\032\017.protocol.Bloc"
      "k\"5\202\323\344\223\002/\"\023/wallet/getnowblock:\001*Z\025\022\023/wa"
      "llet/getnowblock\022t\n\rGetBlockByNum\022\027.prot"
      "ocol.NumberMessage\032\017.protocol.Block\"9\202\323\344"
      "\223\0023\"\025/wallet/getblockbynum:\001*Z\027\022\025/wallet"
      "/getblockbynum\022p\n\014GetBlockById\022\026.protoco"
      "l.BytesMessage\032\017.protocol.Block\"7\202\323\344\223\0021\""
      "\024/wallet/getblockbyid:\001*Z\026\022\024/wallet/getb"
      "lockbyid\022\207\001\n\023GetBlockByLimitNext\022\024.proto"
      "col.BlockLimit\032\023.protocol.BlockList\"E\202\323\344"
      "\223\002\?\"\033/wallet/getblockbylimitnext:\001*Z\035\022\033/"
      "wallet/getblockbylimitnext\022\212\001\n\023GetBlockB"
      "yLatestNum\022\027.protocol.NumberMessage\032\023.pr"
      "otocol.BlockList\"E\202\323\344\223\002\?\"\033/wallet/getblo"
      "ckbylatestnum:\001*Z\035\022\033/wallet/getblockbyla"
      "testnum\022\210\001\n\022GetTransactionById\022\026.protoco"
      "l.BytesMessage\032\025.protocol.Transaction\"C\202"
      "\323\344\223\002=\"\032/wallet/gettransactionbyid:\001*Z\034\022\032"
      "/wallet/gettransactionbyid\022y\n\rListWitnes"
      "ses\022\026.protocol.EmptyMessage\032\025.protocol.W"
      "itnessList\"9\202\323\344\223\0023\"\025/wallet/listwitnesse"
      "s:\001*Z\027\022\025/wallet/listwitnesses\022\210\001\n\021GetAss"
      "etIssueList\022\026.protocol.EmptyMessage\032\030.pr"
      "otocol.AssetIssueList\"A\202\323\344\223\002;\"\031/wallet/g"
      "etassetissuelist:\001*Z\033\022\031/wallet/getasseti"
      "ssuelist\022\204\001\n\020TotalTransaction\022\026.protocol"
      ".EmptyMessage\032\027.protocol.NumberMessage\"\?"
      "\202\323\344\223\0029\"\030/wallet/totaltransaction:\001*Z\032\022\030/"
      "wallet/totaltransaction\022\226\001\n\026GetNextMaint"
      "enanceTime\022\026.protocol.EmptyMessage\032\027.pro"
      "tocol.NumberMessage\"K\202\323\344\223\002E\"\036/wallet/get"
      "nextmaintenancetime:\001*Z \022\036/wallet/getnex"
      "tmaintenancetime2\357\013\n\016WalletSolidity\022w\n\nG"
      "etAccount\022\021.protocol.Account\032\021.protocol."
      "Account\"C\202\323\344\223\002=\"\032/walletsolidity/getacco"
      "unt:\001*Z\034\022\032/walletsolidity/getaccount\022\211\001\n"
      "\rListWitnesses\022\026.protocol.EmptyMessage\032\025"
      ".protocol.WitnessList\"I\202\323\344\223\002C\"\035/walletso"
      "lidity/listwitnesses:\001*Z\037\022\035/walletsolidi"
      "ty/listwitnesses\022\230\001\n\021GetAssetIssueList\022\026"
      ".protocol.EmptyMessage\032\030.protocol.AssetI"
      "ssueList\"Q\202\323\344\223\002K\"!/walletsolidity/getass"
      "etissuelist:\001*Z#\022!/walletsolidity/getass"
      "etissuelist\022\272\001\n\034GetAssetIssueListByTimes"
      "tamp\022\027.protocol.NumberMessage\032\030.protocol"
      ".AssetIssueList\"g\202\323\344\223\002a\",/walletsolidity"
      "/getassetissuelistbytimestamp:\001*Z.\022,/wal"
      "letsolidity/getassetissuelistbytimestamp"
      "\022\242\001\n\026GetAssetIssueByAccount\022\021.protocol.A"
      "ccount\032\030.protocol.AssetIssueList\"[\202\323\344\223\002U"
      "\"&/walletsolidity/getassetissuebyaccount"
      ":\001*Z(\022&/walletsolidity/getassetissuebyac"
      "count\022\242\001\n\023GetAssetIssueByName\022\026.protocol"
      ".BytesMessage\032\034.protocol.AssetIssueContr"
      "act\"U\202\323\344\223\002O\"#/walletsolidity/getassetiss"
      "uebyname:\001*Z%\022#/walletsolidity/getasseti"
      "ssuebyname\022}\n\013GetNowBlock\022\026.protocol.Emp"
      "tyMessage\032\017.protocol.Block\"E\202\323\344\223\002\?\"\033/wal"
      "letsolidity/getnowblock:\001*Z\035\022\033/walletsol"
      "idity/getnowblock\022\204\001\n\rGetBlockByNum\022\027.pr"
      "otocol.NumberMessage\032\017.protocol.Block\"I\202"
      "\323\344\223\002C\"\035/walletsolidity/getblockbynum:\001*Z"
      "\037\022\035/walletsolidity/getblockbynum\022\224\001\n\020Tot"
      "alTransaction\022\026.protocol.EmptyMessage\032\027."
      "protocol.NumberMessage\"O\202\323\344\223\002I\" /wallets"
      "olidity/totaltransaction:\001*Z\"\022 /walletso"
      "lidity/totaltransaction\022\230\001\n\022GetTransacti"
      "onById\022\026.protocol.BytesMessage\032\025.protoco"
      "l.Transaction\"S\202\323\344\223\002M\"\"/walletsolidity/g"
      "ettransactionbyid:\001*Z$\022\"/walletsolidity/"
      "gettransactionbyid2\343\010\n\017WalletExtension\022\276"
      "\001\n\032GetTransactionsByTimestamp\022\036.protocol"
      ".TimePaginatedMessage\032\031.protocol.Transac"
      "tionList\"e\202\323\344\223\002_\"+/walletextension/gettr"
      "ansactionsbytimestamp:\001*Z-\022+/walletexten"
      "sion/gettransactionsbytimestamp\022\302\001\n\037GetT"
      "ransactionsByTimestampCount\022\025.protocol.T"
      "imeMessage\032\027.protocol.NumberMessage\"o\202\323\344"
      "\223\002i\"0/walletextension/gettransactionsbyt"
      "imestampcount:\001*Z2\0220/walletextension/get"
      "transactionsbytimestampcount\022\261\001\n\027GetTran"
      "sactionsFromThis\022\032.protocol.AccountPagin"
      "ated\032\031.protocol.TransactionList\"_\202\323\344\223\002Y\""
      "(/walletextension/gettransactionsfromthi"
      "s:\001*Z*\022(/walletextension/gettransactions"
      "fromthis\022\253\001\n\025GetTransactionsToThis\022\032.pro"
      "tocol.AccountPaginated\032\031.protocol.Transa"
      "ctionList\"[\202\323\344\223\002U\"&/walletextension/gett"
      "ransactionstothis:\001*Z(\022&/walletextension"
      "/gettransactionstothis\022\265\001\n\034GetTransactio"
      "nsFromThisCount\022\021.protocol.Account\032\027.pro"
      "tocol.NumberMessage\"i\202\323\344\223\002c\"-/walletexte"
      "nsion/gettransactionsfromthiscount:\001*Z/\022"
      "-/walletextension/gettransactionsfromthi"
      "scount\022\257\001\n\032GetTransactionsToThisCount\022\021."
      "protocol.Account\032\027.protocol.NumberMessag"
      "e\"e\202\323\344\223\002_\"+/walletextension/gettransacti"
      "onstothiscount:\001*Z-\022+/walletextension/ge"
      "ttransactionstothiscount2\231\002\n\010Database\022G\n"
      "\021getBlockReference\022\026.protocol.EmptyMessa"
      "ge\032\030.protocol.BlockReference\"\000\022M\n\024GetDyn"
      "amicProperties\022\026.protocol.EmptyMessage\032\033"
      ".protocol.DynamicProperties\"\000\0228\n\013GetNowB"
      "lock\022\026.protocol.EmptyMessage\032\017.protocol."
      "Block\"\000\022;\n\rGetBlockByNum\022\027.protocol.Numb"
      "erMessage\032\017.protocol.Block\"\0002\t\n\007NetworkB"
      "A\n\014org.tron.apiB\007GrpcAPIZ(github.com/tro"
      "nprotocol/grpc-gateway/apib\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 8554);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/api.proto", &protobuf_RegisterTypes);
  ::protocol::protobuf_core_2fTron_2eproto::AddDescriptors();
  ::protocol::protobuf_core_2fContract_2eproto::AddDescriptors();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_api_2fapi_2eproto

const ::google::protobuf::EnumDescriptor* Return_response_code_descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_enum_descriptors[0];
}
bool Return_response_code_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 20:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Return_response_code Return::SUCCESS;
const Return_response_code Return::SIGERROR;
const Return_response_code Return::CONTRACT_VALIDATE_ERROR;
const Return_response_code Return::CONTRACT_EXE_ERROR;
const Return_response_code Return::BANDWITH_ERROR;
const Return_response_code Return::DUP_TRANSACTION_ERROR;
const Return_response_code Return::TAPOS_ERROR;
const Return_response_code Return::TOO_BIG_TRANSACTION_ERROR;
const Return_response_code Return::TRANSACTION_EXPIRATION_ERROR;
const Return_response_code Return::SERVER_BUSY;
const Return_response_code Return::OTHER_ERROR;
const Return_response_code Return::response_code_MIN;
const Return_response_code Return::response_code_MAX;
const int Return::response_code_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Return::kResultFieldNumber;
const int Return::kCodeFieldNumber;
const int Return::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Return::Return()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Return)
}
Return::Return(const Return& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&result_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:protocol.Return)
}

void Return::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&result_)) + sizeof(code_));
  _cached_size_ = 0;
}

Return::~Return() {
  // @@protoc_insertion_point(destructor:protocol.Return)
  SharedDtor();
}

void Return::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Return::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Return& Return::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Return* Return::New(::google::protobuf::Arena* arena) const {
  Return* n = new Return;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Return::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Return)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&result_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

bool Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Return)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.Return.response_code code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::protocol::Return_response_code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Return)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Return)
  return false;
#undef DO_
}

void Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Return)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // .protocol.Return.response_code code = 2;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Return)
}

::google::protobuf::uint8* Return::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Return)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // .protocol.Return.response_code code = 2;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Return)
  return target;
}

size_t Return::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Return)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  // .protocol.Return.response_code code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Return::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Return)
  GOOGLE_DCHECK_NE(&from, this);
  const Return* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Return>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Return)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Return)
    MergeFrom(*source);
  }
}

void Return::MergeFrom(const Return& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Return)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Return::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Return)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Return::CopyFrom(const Return& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Return)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Return::IsInitialized() const {
  return true;
}

void Return::Swap(Return* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Return::InternalSwap(Return* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(result_, other->result_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Return::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Return

// bool result = 1;
void Return::clear_result() {
  result_ = false;
}
bool Return::result() const {
  // @@protoc_insertion_point(field_get:protocol.Return.result)
  return result_;
}
void Return::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.Return.result)
}

// .protocol.Return.response_code code = 2;
void Return::clear_code() {
  code_ = 0;
}
::protocol::Return_response_code Return::code() const {
  // @@protoc_insertion_point(field_get:protocol.Return.code)
  return static_cast< ::protocol::Return_response_code >(code_);
}
void Return::set_code(::protocol::Return_response_code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:protocol.Return.code)
}

// bytes message = 3;
void Return::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Return::message() const {
  // @@protoc_insertion_point(field_get:protocol.Return.message)
  return message_.GetNoArena();
}
void Return::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Return.message)
}
#if LANG_CXX11
void Return::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Return.message)
}
#endif
void Return::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Return.message)
}
void Return::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Return.message)
}
::std::string* Return::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Return.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Return::release_message() {
  // @@protoc_insertion_point(field_release:protocol.Return.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Return::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:protocol.Return.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockReference::kBlockNumFieldNumber;
const int BlockReference::kBlockHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockReference::BlockReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BlockReference)
}
BlockReference::BlockReference(const BlockReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  block_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.block_hash().size() > 0) {
    block_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.block_hash_);
  }
  block_num_ = from.block_num_;
  // @@protoc_insertion_point(copy_constructor:protocol.BlockReference)
}

void BlockReference::SharedCtor() {
  block_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_num_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

BlockReference::~BlockReference() {
  // @@protoc_insertion_point(destructor:protocol.BlockReference)
  SharedDtor();
}

void BlockReference::SharedDtor() {
  block_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlockReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockReference::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockReference& BlockReference::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockReference* BlockReference::New(::google::protobuf::Arena* arena) const {
  BlockReference* n = new BlockReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockReference::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BlockReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_num_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool BlockReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BlockReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 block_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &block_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes block_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_block_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BlockReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BlockReference)
  return false;
#undef DO_
}

void BlockReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BlockReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 block_num = 1;
  if (this->block_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->block_num(), output);
  }

  // bytes block_hash = 2;
  if (this->block_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->block_hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BlockReference)
}

::google::protobuf::uint8* BlockReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BlockReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 block_num = 1;
  if (this->block_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->block_num(), target);
  }

  // bytes block_hash = 2;
  if (this->block_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->block_hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BlockReference)
  return target;
}

size_t BlockReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BlockReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes block_hash = 2;
  if (this->block_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->block_hash());
  }

  // int64 block_num = 1;
  if (this->block_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->block_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BlockReference)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BlockReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BlockReference)
    MergeFrom(*source);
  }
}

void BlockReference::MergeFrom(const BlockReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BlockReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.block_hash().size() > 0) {

    block_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.block_hash_);
  }
  if (from.block_num() != 0) {
    set_block_num(from.block_num());
  }
}

void BlockReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BlockReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockReference::CopyFrom(const BlockReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BlockReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockReference::IsInitialized() const {
  return true;
}

void BlockReference::Swap(BlockReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockReference::InternalSwap(BlockReference* other) {
  using std::swap;
  block_hash_.Swap(&other->block_hash_);
  swap(block_num_, other->block_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockReference::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockReference

// int64 block_num = 1;
void BlockReference::clear_block_num() {
  block_num_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BlockReference::block_num() const {
  // @@protoc_insertion_point(field_get:protocol.BlockReference.block_num)
  return block_num_;
}
void BlockReference::set_block_num(::google::protobuf::int64 value) {
  
  block_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.BlockReference.block_num)
}

// bytes block_hash = 2;
void BlockReference::clear_block_hash() {
  block_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockReference::block_hash() const {
  // @@protoc_insertion_point(field_get:protocol.BlockReference.block_hash)
  return block_hash_.GetNoArena();
}
void BlockReference::set_block_hash(const ::std::string& value) {
  
  block_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.BlockReference.block_hash)
}
#if LANG_CXX11
void BlockReference::set_block_hash(::std::string&& value) {
  
  block_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.BlockReference.block_hash)
}
#endif
void BlockReference::set_block_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  block_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.BlockReference.block_hash)
}
void BlockReference::set_block_hash(const void* value, size_t size) {
  
  block_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.BlockReference.block_hash)
}
::std::string* BlockReference::mutable_block_hash() {
  
  // @@protoc_insertion_point(field_mutable:protocol.BlockReference.block_hash)
  return block_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockReference::release_block_hash() {
  // @@protoc_insertion_point(field_release:protocol.BlockReference.block_hash)
  
  return block_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockReference::set_allocated_block_hash(::std::string* block_hash) {
  if (block_hash != NULL) {
    
  } else {
    
  }
  block_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), block_hash);
  // @@protoc_insertion_point(field_set_allocated:protocol.BlockReference.block_hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WitnessList::kWitnessesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WitnessList::WitnessList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.WitnessList)
}
WitnessList::WitnessList(const WitnessList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      witnesses_(from.witnesses_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.WitnessList)
}

void WitnessList::SharedCtor() {
  _cached_size_ = 0;
}

WitnessList::~WitnessList() {
  // @@protoc_insertion_point(destructor:protocol.WitnessList)
  SharedDtor();
}

void WitnessList::SharedDtor() {
}

void WitnessList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WitnessList::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WitnessList& WitnessList::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

WitnessList* WitnessList::New(::google::protobuf::Arena* arena) const {
  WitnessList* n = new WitnessList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WitnessList::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.WitnessList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  witnesses_.Clear();
  _internal_metadata_.Clear();
}

bool WitnessList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.WitnessList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.Witness witnesses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_witnesses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.WitnessList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.WitnessList)
  return false;
#undef DO_
}

void WitnessList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.WitnessList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Witness witnesses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->witnesses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->witnesses(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.WitnessList)
}

::google::protobuf::uint8* WitnessList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.WitnessList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Witness witnesses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->witnesses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->witnesses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.WitnessList)
  return target;
}

size_t WitnessList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.WitnessList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.Witness witnesses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->witnesses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->witnesses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WitnessList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.WitnessList)
  GOOGLE_DCHECK_NE(&from, this);
  const WitnessList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WitnessList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.WitnessList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.WitnessList)
    MergeFrom(*source);
  }
}

void WitnessList::MergeFrom(const WitnessList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.WitnessList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  witnesses_.MergeFrom(from.witnesses_);
}

void WitnessList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.WitnessList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WitnessList::CopyFrom(const WitnessList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.WitnessList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WitnessList::IsInitialized() const {
  return true;
}

void WitnessList::Swap(WitnessList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WitnessList::InternalSwap(WitnessList* other) {
  using std::swap;
  witnesses_.InternalSwap(&other->witnesses_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WitnessList::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WitnessList

// repeated .protocol.Witness witnesses = 1;
int WitnessList::witnesses_size() const {
  return witnesses_.size();
}
void WitnessList::clear_witnesses() {
  witnesses_.Clear();
}
const ::protocol::Witness& WitnessList::witnesses(int index) const {
  // @@protoc_insertion_point(field_get:protocol.WitnessList.witnesses)
  return witnesses_.Get(index);
}
::protocol::Witness* WitnessList::mutable_witnesses(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.WitnessList.witnesses)
  return witnesses_.Mutable(index);
}
::protocol::Witness* WitnessList::add_witnesses() {
  // @@protoc_insertion_point(field_add:protocol.WitnessList.witnesses)
  return witnesses_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Witness >*
WitnessList::mutable_witnesses() {
  // @@protoc_insertion_point(field_mutable_list:protocol.WitnessList.witnesses)
  return &witnesses_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Witness >&
WitnessList::witnesses() const {
  // @@protoc_insertion_point(field_list:protocol.WitnessList.witnesses)
  return witnesses_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetIssueList::kAssetIssueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetIssueList::AssetIssueList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.AssetIssueList)
}
AssetIssueList::AssetIssueList(const AssetIssueList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      assetissue_(from.assetissue_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.AssetIssueList)
}

void AssetIssueList::SharedCtor() {
  _cached_size_ = 0;
}

AssetIssueList::~AssetIssueList() {
  // @@protoc_insertion_point(destructor:protocol.AssetIssueList)
  SharedDtor();
}

void AssetIssueList::SharedDtor() {
}

void AssetIssueList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssetIssueList::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssetIssueList& AssetIssueList::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

AssetIssueList* AssetIssueList::New(::google::protobuf::Arena* arena) const {
  AssetIssueList* n = new AssetIssueList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssetIssueList::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.AssetIssueList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  assetissue_.Clear();
  _internal_metadata_.Clear();
}

bool AssetIssueList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.AssetIssueList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.AssetIssueContract assetIssue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_assetissue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.AssetIssueList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.AssetIssueList)
  return false;
#undef DO_
}

void AssetIssueList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.AssetIssueList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.AssetIssueContract assetIssue = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assetissue_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->assetissue(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.AssetIssueList)
}

::google::protobuf::uint8* AssetIssueList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.AssetIssueList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.AssetIssueContract assetIssue = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assetissue_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->assetissue(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.AssetIssueList)
  return target;
}

size_t AssetIssueList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.AssetIssueList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.AssetIssueContract assetIssue = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->assetissue_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->assetissue(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssetIssueList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.AssetIssueList)
  GOOGLE_DCHECK_NE(&from, this);
  const AssetIssueList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssetIssueList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.AssetIssueList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.AssetIssueList)
    MergeFrom(*source);
  }
}

void AssetIssueList::MergeFrom(const AssetIssueList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.AssetIssueList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  assetissue_.MergeFrom(from.assetissue_);
}

void AssetIssueList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.AssetIssueList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetIssueList::CopyFrom(const AssetIssueList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.AssetIssueList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetIssueList::IsInitialized() const {
  return true;
}

void AssetIssueList::Swap(AssetIssueList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetIssueList::InternalSwap(AssetIssueList* other) {
  using std::swap;
  assetissue_.InternalSwap(&other->assetissue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssetIssueList::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AssetIssueList

// repeated .protocol.AssetIssueContract assetIssue = 1;
int AssetIssueList::assetissue_size() const {
  return assetissue_.size();
}
void AssetIssueList::clear_assetissue() {
  assetissue_.Clear();
}
const ::protocol::AssetIssueContract& AssetIssueList::assetissue(int index) const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueList.assetIssue)
  return assetissue_.Get(index);
}
::protocol::AssetIssueContract* AssetIssueList::mutable_assetissue(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.AssetIssueList.assetIssue)
  return assetissue_.Mutable(index);
}
::protocol::AssetIssueContract* AssetIssueList::add_assetissue() {
  // @@protoc_insertion_point(field_add:protocol.AssetIssueList.assetIssue)
  return assetissue_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::AssetIssueContract >*
AssetIssueList::mutable_assetissue() {
  // @@protoc_insertion_point(field_mutable_list:protocol.AssetIssueList.assetIssue)
  return &assetissue_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::AssetIssueContract >&
AssetIssueList::assetissue() const {
  // @@protoc_insertion_point(field_list:protocol.AssetIssueList.assetIssue)
  return assetissue_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockList::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockList::BlockList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BlockList)
}
BlockList::BlockList(const BlockList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      block_(from.block_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.BlockList)
}

void BlockList::SharedCtor() {
  _cached_size_ = 0;
}

BlockList::~BlockList() {
  // @@protoc_insertion_point(destructor:protocol.BlockList)
  SharedDtor();
}

void BlockList::SharedDtor() {
}

void BlockList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockList::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockList& BlockList::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockList* BlockList::New(::google::protobuf::Arena* arena) const {
  BlockList* n = new BlockList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockList::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BlockList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_.Clear();
  _internal_metadata_.Clear();
}

bool BlockList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BlockList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.Block block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BlockList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BlockList)
  return false;
#undef DO_
}

void BlockList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BlockList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Block block = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->block(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BlockList)
}

::google::protobuf::uint8* BlockList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BlockList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Block block = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->block(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BlockList)
  return target;
}

size_t BlockList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BlockList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.Block block = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->block_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->block(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BlockList)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BlockList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BlockList)
    MergeFrom(*source);
  }
}

void BlockList::MergeFrom(const BlockList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BlockList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_.MergeFrom(from.block_);
}

void BlockList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BlockList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockList::CopyFrom(const BlockList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BlockList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockList::IsInitialized() const {
  return true;
}

void BlockList::Swap(BlockList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockList::InternalSwap(BlockList* other) {
  using std::swap;
  block_.InternalSwap(&other->block_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockList::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockList

// repeated .protocol.Block block = 1;
int BlockList::block_size() const {
  return block_.size();
}
void BlockList::clear_block() {
  block_.Clear();
}
const ::protocol::Block& BlockList::block(int index) const {
  // @@protoc_insertion_point(field_get:protocol.BlockList.block)
  return block_.Get(index);
}
::protocol::Block* BlockList::mutable_block(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.BlockList.block)
  return block_.Mutable(index);
}
::protocol::Block* BlockList::add_block() {
  // @@protoc_insertion_point(field_add:protocol.BlockList.block)
  return block_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Block >*
BlockList::mutable_block() {
  // @@protoc_insertion_point(field_mutable_list:protocol.BlockList.block)
  return &block_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Block >&
BlockList::block() const {
  // @@protoc_insertion_point(field_list:protocol.BlockList.block)
  return block_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionList::kTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionList::TransactionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.TransactionList)
}
TransactionList::TransactionList(const TransactionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transaction_(from.transaction_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.TransactionList)
}

void TransactionList::SharedCtor() {
  _cached_size_ = 0;
}

TransactionList::~TransactionList() {
  // @@protoc_insertion_point(destructor:protocol.TransactionList)
  SharedDtor();
}

void TransactionList::SharedDtor() {
}

void TransactionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransactionList::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionList& TransactionList::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

TransactionList* TransactionList::New(::google::protobuf::Arena* arena) const {
  TransactionList* n = new TransactionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransactionList::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.TransactionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_.Clear();
  _internal_metadata_.Clear();
}

bool TransactionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.TransactionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.Transaction transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.TransactionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.TransactionList)
  return false;
#undef DO_
}

void TransactionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.TransactionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Transaction transaction = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transaction_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->transaction(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.TransactionList)
}

::google::protobuf::uint8* TransactionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.TransactionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Transaction transaction = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transaction_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->transaction(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.TransactionList)
  return target;
}

size_t TransactionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.TransactionList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.Transaction transaction = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->transaction_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transaction(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransactionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.TransactionList)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.TransactionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.TransactionList)
    MergeFrom(*source);
  }
}

void TransactionList::MergeFrom(const TransactionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.TransactionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transaction_.MergeFrom(from.transaction_);
}

void TransactionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.TransactionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionList::CopyFrom(const TransactionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.TransactionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionList::IsInitialized() const {
  return true;
}

void TransactionList::Swap(TransactionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionList::InternalSwap(TransactionList* other) {
  using std::swap;
  transaction_.InternalSwap(&other->transaction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransactionList::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransactionList

// repeated .protocol.Transaction transaction = 1;
int TransactionList::transaction_size() const {
  return transaction_.size();
}
void TransactionList::clear_transaction() {
  transaction_.Clear();
}
const ::protocol::Transaction& TransactionList::transaction(int index) const {
  // @@protoc_insertion_point(field_get:protocol.TransactionList.transaction)
  return transaction_.Get(index);
}
::protocol::Transaction* TransactionList::mutable_transaction(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.TransactionList.transaction)
  return transaction_.Mutable(index);
}
::protocol::Transaction* TransactionList::add_transaction() {
  // @@protoc_insertion_point(field_add:protocol.TransactionList.transaction)
  return transaction_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Transaction >*
TransactionList::mutable_transaction() {
  // @@protoc_insertion_point(field_mutable_list:protocol.TransactionList.transaction)
  return &transaction_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Transaction >&
TransactionList::transaction() const {
  // @@protoc_insertion_point(field_list:protocol.TransactionList.transaction)
  return transaction_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeList::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeList::NodeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.NodeList)
}
NodeList::NodeList(const NodeList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.NodeList)
}

void NodeList::SharedCtor() {
  _cached_size_ = 0;
}

NodeList::~NodeList() {
  // @@protoc_insertion_point(destructor:protocol.NodeList)
  SharedDtor();
}

void NodeList::SharedDtor() {
}

void NodeList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeList::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeList& NodeList::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

NodeList* NodeList::New(::google::protobuf::Arena* arena) const {
  NodeList* n = new NodeList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeList::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.NodeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  _internal_metadata_.Clear();
}

bool NodeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.NodeList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.Node nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.NodeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.NodeList)
  return false;
#undef DO_
}

void NodeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.NodeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodes(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.NodeList)
}

::google::protobuf::uint8* NodeList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.NodeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.NodeList)
  return target;
}

size_t NodeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.NodeList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.Node nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.NodeList)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.NodeList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.NodeList)
    MergeFrom(*source);
  }
}

void NodeList::MergeFrom(const NodeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.NodeList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
}

void NodeList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.NodeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeList::CopyFrom(const NodeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.NodeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeList::IsInitialized() const {
  return true;
}

void NodeList::Swap(NodeList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeList::InternalSwap(NodeList* other) {
  using std::swap;
  nodes_.InternalSwap(&other->nodes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeList::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NodeList

// repeated .protocol.Node nodes = 1;
int NodeList::nodes_size() const {
  return nodes_.size();
}
void NodeList::clear_nodes() {
  nodes_.Clear();
}
const ::protocol::Node& NodeList::nodes(int index) const {
  // @@protoc_insertion_point(field_get:protocol.NodeList.nodes)
  return nodes_.Get(index);
}
::protocol::Node* NodeList::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.NodeList.nodes)
  return nodes_.Mutable(index);
}
::protocol::Node* NodeList::add_nodes() {
  // @@protoc_insertion_point(field_add:protocol.NodeList.nodes)
  return nodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Node >*
NodeList::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:protocol.NodeList.nodes)
  return &nodes_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Node >&
NodeList::nodes() const {
  // @@protoc_insertion_point(field_list:protocol.NodeList.nodes)
  return nodes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Node)
}
Node::Node(const Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    address_ = new ::protocol::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.Node)
}

void Node::SharedCtor() {
  address_ = NULL;
  _cached_size_ = 0;
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:protocol.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  if (this != internal_default_instance()) delete address_;
}

void Node::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Node::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Node& Node::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Node* Node::New(::google::protobuf::Arena* arena) const {
  Node* n = new Node;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  _internal_metadata_.Clear();
}

bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Node)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.Address address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Node)
  return false;
#undef DO_
}

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Address address = 1;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->address_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Node)
}

::google::protobuf::uint8* Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Address address = 1;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->address_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Node)
  return target;
}

size_t Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Node)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .protocol.Address address = 1;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    mutable_address()->::protocol::Address::MergeFrom(from.address());
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  using std::swap;
  swap(address_, other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Node

// .protocol.Address address = 1;
bool Node::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
void Node::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
const ::protocol::Address& Node::address() const {
  const ::protocol::Address* p = address_;
  // @@protoc_insertion_point(field_get:protocol.Node.address)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::Address*>(
      &::protocol::_Address_default_instance_);
}
::protocol::Address* Node::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::protocol::Address;
  }
  // @@protoc_insertion_point(field_mutable:protocol.Node.address)
  return address_;
}
::protocol::Address* Node::release_address() {
  // @@protoc_insertion_point(field_release:protocol.Node.address)
  
  ::protocol::Address* temp = address_;
  address_ = NULL;
  return temp;
}
void Node::set_allocated_address(::protocol::Address* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.Node.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Address::kHostFieldNumber;
const int Address::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Address::Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Address)
}
Address::Address(const Address& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host().size() > 0) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:protocol.Address)
}

void Address::SharedCtor() {
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _cached_size_ = 0;
}

Address::~Address() {
  // @@protoc_insertion_point(destructor:protocol.Address)
  SharedDtor();
}

void Address::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Address::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Address::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Address& Address::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Address* Address::New(::google::protobuf::Arena* arena) const {
  Address* n = new Address;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _internal_metadata_.Clear();
}

bool Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Address)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes host = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_host()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Address)
  return false;
#undef DO_
}

void Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes host = 1;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->host(), output);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Address)
}

::google::protobuf::uint8* Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes host = 1;
  if (this->host().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->host(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Address)
  return target;
}

size_t Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Address)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes host = 1;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->host());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Address)
    MergeFrom(*source);
  }
}

void Address::MergeFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Address::IsInitialized() const {
  return true;
}

void Address::Swap(Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Address::InternalSwap(Address* other) {
  using std::swap;
  host_.Swap(&other->host_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Address::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Address

// bytes host = 1;
void Address::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Address::host() const {
  // @@protoc_insertion_point(field_get:protocol.Address.host)
  return host_.GetNoArena();
}
void Address::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Address.host)
}
#if LANG_CXX11
void Address::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Address.host)
}
#endif
void Address::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Address.host)
}
void Address::set_host(const void* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Address.host)
}
::std::string* Address::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Address.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_host() {
  // @@protoc_insertion_point(field_release:protocol.Address.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:protocol.Address.host)
}

// int32 port = 2;
void Address::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 Address::port() const {
  // @@protoc_insertion_point(field_get:protocol.Address.port)
  return port_;
}
void Address::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:protocol.Address.port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyMessage::EmptyMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.EmptyMessage)
}
EmptyMessage::EmptyMessage(const EmptyMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.EmptyMessage)
}

void EmptyMessage::SharedCtor() {
  _cached_size_ = 0;
}

EmptyMessage::~EmptyMessage() {
  // @@protoc_insertion_point(destructor:protocol.EmptyMessage)
  SharedDtor();
}

void EmptyMessage::SharedDtor() {
}

void EmptyMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmptyMessage::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmptyMessage& EmptyMessage::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

EmptyMessage* EmptyMessage::New(::google::protobuf::Arena* arena) const {
  EmptyMessage* n = new EmptyMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EmptyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.EmptyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool EmptyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.EmptyMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.EmptyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.EmptyMessage)
  return false;
#undef DO_
}

void EmptyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.EmptyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.EmptyMessage)
}

::google::protobuf::uint8* EmptyMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.EmptyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.EmptyMessage)
  return target;
}

size_t EmptyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.EmptyMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmptyMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.EmptyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmptyMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.EmptyMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.EmptyMessage)
    MergeFrom(*source);
  }
}

void EmptyMessage::MergeFrom(const EmptyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.EmptyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmptyMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.EmptyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyMessage::CopyFrom(const EmptyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.EmptyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyMessage::IsInitialized() const {
  return true;
}

void EmptyMessage::Swap(EmptyMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyMessage::InternalSwap(EmptyMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmptyMessage::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmptyMessage

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NumberMessage::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NumberMessage::NumberMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.NumberMessage)
}
NumberMessage::NumberMessage(const NumberMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_ = from.num_;
  // @@protoc_insertion_point(copy_constructor:protocol.NumberMessage)
}

void NumberMessage::SharedCtor() {
  num_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

NumberMessage::~NumberMessage() {
  // @@protoc_insertion_point(destructor:protocol.NumberMessage)
  SharedDtor();
}

void NumberMessage::SharedDtor() {
}

void NumberMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NumberMessage::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NumberMessage& NumberMessage::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

NumberMessage* NumberMessage::New(::google::protobuf::Arena* arena) const {
  NumberMessage* n = new NumberMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NumberMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.NumberMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool NumberMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.NumberMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.NumberMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.NumberMessage)
  return false;
#undef DO_
}

void NumberMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.NumberMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 num = 1;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.NumberMessage)
}

::google::protobuf::uint8* NumberMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.NumberMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 num = 1;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.NumberMessage)
  return target;
}

size_t NumberMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.NumberMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 num = 1;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NumberMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.NumberMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const NumberMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NumberMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.NumberMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.NumberMessage)
    MergeFrom(*source);
  }
}

void NumberMessage::MergeFrom(const NumberMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.NumberMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.num() != 0) {
    set_num(from.num());
  }
}

void NumberMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.NumberMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumberMessage::CopyFrom(const NumberMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.NumberMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumberMessage::IsInitialized() const {
  return true;
}

void NumberMessage::Swap(NumberMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NumberMessage::InternalSwap(NumberMessage* other) {
  using std::swap;
  swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NumberMessage::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NumberMessage

// int64 num = 1;
void NumberMessage::clear_num() {
  num_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 NumberMessage::num() const {
  // @@protoc_insertion_point(field_get:protocol.NumberMessage.num)
  return num_;
}
void NumberMessage::set_num(::google::protobuf::int64 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protocol.NumberMessage.num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytesMessage::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytesMessage::BytesMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BytesMessage)
}
BytesMessage::BytesMessage(const BytesMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.BytesMessage)
}

void BytesMessage::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BytesMessage::~BytesMessage() {
  // @@protoc_insertion_point(destructor:protocol.BytesMessage)
  SharedDtor();
}

void BytesMessage::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytesMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BytesMessage::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytesMessage& BytesMessage::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

BytesMessage* BytesMessage::New(::google::protobuf::Arena* arena) const {
  BytesMessage* n = new BytesMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BytesMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BytesMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BytesMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BytesMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BytesMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BytesMessage)
  return false;
#undef DO_
}

void BytesMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BytesMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BytesMessage)
}

::google::protobuf::uint8* BytesMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BytesMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BytesMessage)
  return target;
}

size_t BytesMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BytesMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BytesMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BytesMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BytesMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytesMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BytesMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BytesMessage)
    MergeFrom(*source);
  }
}

void BytesMessage::MergeFrom(const BytesMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BytesMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void BytesMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BytesMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytesMessage::CopyFrom(const BytesMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BytesMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytesMessage::IsInitialized() const {
  return true;
}

void BytesMessage::Swap(BytesMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytesMessage::InternalSwap(BytesMessage* other) {
  using std::swap;
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BytesMessage::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BytesMessage

// bytes value = 1;
void BytesMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BytesMessage::value() const {
  // @@protoc_insertion_point(field_get:protocol.BytesMessage.value)
  return value_.GetNoArena();
}
void BytesMessage::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.BytesMessage.value)
}
#if LANG_CXX11
void BytesMessage::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.BytesMessage.value)
}
#endif
void BytesMessage::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.BytesMessage.value)
}
void BytesMessage::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.BytesMessage.value)
}
::std::string* BytesMessage::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:protocol.BytesMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BytesMessage::release_value() {
  // @@protoc_insertion_point(field_release:protocol.BytesMessage.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BytesMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:protocol.BytesMessage.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeMessage::kBeginInMillisecondsFieldNumber;
const int TimeMessage::kEndInMillisecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeMessage::TimeMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.TimeMessage)
}
TimeMessage::TimeMessage(const TimeMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&begininmilliseconds_, &from.begininmilliseconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&endinmilliseconds_) -
    reinterpret_cast<char*>(&begininmilliseconds_)) + sizeof(endinmilliseconds_));
  // @@protoc_insertion_point(copy_constructor:protocol.TimeMessage)
}

void TimeMessage::SharedCtor() {
  ::memset(&begininmilliseconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&endinmilliseconds_) -
      reinterpret_cast<char*>(&begininmilliseconds_)) + sizeof(endinmilliseconds_));
  _cached_size_ = 0;
}

TimeMessage::~TimeMessage() {
  // @@protoc_insertion_point(destructor:protocol.TimeMessage)
  SharedDtor();
}

void TimeMessage::SharedDtor() {
}

void TimeMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeMessage::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeMessage& TimeMessage::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

TimeMessage* TimeMessage::New(::google::protobuf::Arena* arena) const {
  TimeMessage* n = new TimeMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.TimeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&begininmilliseconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&endinmilliseconds_) -
      reinterpret_cast<char*>(&begininmilliseconds_)) + sizeof(endinmilliseconds_));
  _internal_metadata_.Clear();
}

bool TimeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.TimeMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 beginInMilliseconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &begininmilliseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 endInMilliseconds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endinmilliseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.TimeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.TimeMessage)
  return false;
#undef DO_
}

void TimeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.TimeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 beginInMilliseconds = 1;
  if (this->begininmilliseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->begininmilliseconds(), output);
  }

  // int64 endInMilliseconds = 2;
  if (this->endinmilliseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->endinmilliseconds(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.TimeMessage)
}

::google::protobuf::uint8* TimeMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.TimeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 beginInMilliseconds = 1;
  if (this->begininmilliseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->begininmilliseconds(), target);
  }

  // int64 endInMilliseconds = 2;
  if (this->endinmilliseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->endinmilliseconds(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.TimeMessage)
  return target;
}

size_t TimeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.TimeMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 beginInMilliseconds = 1;
  if (this->begininmilliseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->begininmilliseconds());
  }

  // int64 endInMilliseconds = 2;
  if (this->endinmilliseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->endinmilliseconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.TimeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.TimeMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.TimeMessage)
    MergeFrom(*source);
  }
}

void TimeMessage::MergeFrom(const TimeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.TimeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.begininmilliseconds() != 0) {
    set_begininmilliseconds(from.begininmilliseconds());
  }
  if (from.endinmilliseconds() != 0) {
    set_endinmilliseconds(from.endinmilliseconds());
  }
}

void TimeMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.TimeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeMessage::CopyFrom(const TimeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.TimeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeMessage::IsInitialized() const {
  return true;
}

void TimeMessage::Swap(TimeMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeMessage::InternalSwap(TimeMessage* other) {
  using std::swap;
  swap(begininmilliseconds_, other->begininmilliseconds_);
  swap(endinmilliseconds_, other->endinmilliseconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeMessage::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimeMessage

// int64 beginInMilliseconds = 1;
void TimeMessage::clear_begininmilliseconds() {
  begininmilliseconds_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TimeMessage::begininmilliseconds() const {
  // @@protoc_insertion_point(field_get:protocol.TimeMessage.beginInMilliseconds)
  return begininmilliseconds_;
}
void TimeMessage::set_begininmilliseconds(::google::protobuf::int64 value) {
  
  begininmilliseconds_ = value;
  // @@protoc_insertion_point(field_set:protocol.TimeMessage.beginInMilliseconds)
}

// int64 endInMilliseconds = 2;
void TimeMessage::clear_endinmilliseconds() {
  endinmilliseconds_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TimeMessage::endinmilliseconds() const {
  // @@protoc_insertion_point(field_get:protocol.TimeMessage.endInMilliseconds)
  return endinmilliseconds_;
}
void TimeMessage::set_endinmilliseconds(::google::protobuf::int64 value) {
  
  endinmilliseconds_ = value;
  // @@protoc_insertion_point(field_set:protocol.TimeMessage.endInMilliseconds)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockLimit::kStartNumFieldNumber;
const int BlockLimit::kEndNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockLimit::BlockLimit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BlockLimit)
}
BlockLimit::BlockLimit(const BlockLimit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&startnum_, &from.startnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&endnum_) -
    reinterpret_cast<char*>(&startnum_)) + sizeof(endnum_));
  // @@protoc_insertion_point(copy_constructor:protocol.BlockLimit)
}

void BlockLimit::SharedCtor() {
  ::memset(&startnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&endnum_) -
      reinterpret_cast<char*>(&startnum_)) + sizeof(endnum_));
  _cached_size_ = 0;
}

BlockLimit::~BlockLimit() {
  // @@protoc_insertion_point(destructor:protocol.BlockLimit)
  SharedDtor();
}

void BlockLimit::SharedDtor() {
}

void BlockLimit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockLimit::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockLimit& BlockLimit::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockLimit* BlockLimit::New(::google::protobuf::Arena* arena) const {
  BlockLimit* n = new BlockLimit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BlockLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&startnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&endnum_) -
      reinterpret_cast<char*>(&startnum_)) + sizeof(endnum_));
  _internal_metadata_.Clear();
}

bool BlockLimit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BlockLimit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 startNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &startnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 endNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BlockLimit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BlockLimit)
  return false;
#undef DO_
}

void BlockLimit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BlockLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 startNum = 1;
  if (this->startnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->startnum(), output);
  }

  // int64 endNum = 2;
  if (this->endnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->endnum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BlockLimit)
}

::google::protobuf::uint8* BlockLimit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BlockLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 startNum = 1;
  if (this->startnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->startnum(), target);
  }

  // int64 endNum = 2;
  if (this->endnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->endnum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BlockLimit)
  return target;
}

size_t BlockLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BlockLimit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 startNum = 1;
  if (this->startnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->startnum());
  }

  // int64 endNum = 2;
  if (this->endnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->endnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockLimit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BlockLimit)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockLimit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockLimit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BlockLimit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BlockLimit)
    MergeFrom(*source);
  }
}

void BlockLimit::MergeFrom(const BlockLimit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BlockLimit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.startnum() != 0) {
    set_startnum(from.startnum());
  }
  if (from.endnum() != 0) {
    set_endnum(from.endnum());
  }
}

void BlockLimit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BlockLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockLimit::CopyFrom(const BlockLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BlockLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockLimit::IsInitialized() const {
  return true;
}

void BlockLimit::Swap(BlockLimit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockLimit::InternalSwap(BlockLimit* other) {
  using std::swap;
  swap(startnum_, other->startnum_);
  swap(endnum_, other->endnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockLimit::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockLimit

// int64 startNum = 1;
void BlockLimit::clear_startnum() {
  startnum_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BlockLimit::startnum() const {
  // @@protoc_insertion_point(field_get:protocol.BlockLimit.startNum)
  return startnum_;
}
void BlockLimit::set_startnum(::google::protobuf::int64 value) {
  
  startnum_ = value;
  // @@protoc_insertion_point(field_set:protocol.BlockLimit.startNum)
}

// int64 endNum = 2;
void BlockLimit::clear_endnum() {
  endnum_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BlockLimit::endnum() const {
  // @@protoc_insertion_point(field_get:protocol.BlockLimit.endNum)
  return endnum_;
}
void BlockLimit::set_endnum(::google::protobuf::int64 value) {
  
  endnum_ = value;
  // @@protoc_insertion_point(field_set:protocol.BlockLimit.endNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionLimit::kTransactionIdFieldNumber;
const int TransactionLimit::kLimitNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionLimit::TransactionLimit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.TransactionLimit)
}
TransactionLimit::TransactionLimit(const TransactionLimit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transactionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transactionid().size() > 0) {
    transactionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transactionid_);
  }
  limitnum_ = from.limitnum_;
  // @@protoc_insertion_point(copy_constructor:protocol.TransactionLimit)
}

void TransactionLimit::SharedCtor() {
  transactionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limitnum_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TransactionLimit::~TransactionLimit() {
  // @@protoc_insertion_point(destructor:protocol.TransactionLimit)
  SharedDtor();
}

void TransactionLimit::SharedDtor() {
  transactionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransactionLimit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransactionLimit::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionLimit& TransactionLimit::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

TransactionLimit* TransactionLimit::New(::google::protobuf::Arena* arena) const {
  TransactionLimit* n = new TransactionLimit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransactionLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.TransactionLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limitnum_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TransactionLimit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.TransactionLimit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes transactionId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transactionid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 limitNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &limitnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.TransactionLimit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.TransactionLimit)
  return false;
#undef DO_
}

void TransactionLimit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.TransactionLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transactionId = 1;
  if (this->transactionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->transactionid(), output);
  }

  // int64 limitNum = 2;
  if (this->limitnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->limitnum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.TransactionLimit)
}

::google::protobuf::uint8* TransactionLimit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.TransactionLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transactionId = 1;
  if (this->transactionid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->transactionid(), target);
  }

  // int64 limitNum = 2;
  if (this->limitnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->limitnum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.TransactionLimit)
  return target;
}

size_t TransactionLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.TransactionLimit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes transactionId = 1;
  if (this->transactionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->transactionid());
  }

  // int64 limitNum = 2;
  if (this->limitnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->limitnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransactionLimit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.TransactionLimit)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionLimit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionLimit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.TransactionLimit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.TransactionLimit)
    MergeFrom(*source);
  }
}

void TransactionLimit::MergeFrom(const TransactionLimit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.TransactionLimit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transactionid().size() > 0) {

    transactionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transactionid_);
  }
  if (from.limitnum() != 0) {
    set_limitnum(from.limitnum());
  }
}

void TransactionLimit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.TransactionLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionLimit::CopyFrom(const TransactionLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.TransactionLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionLimit::IsInitialized() const {
  return true;
}

void TransactionLimit::Swap(TransactionLimit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionLimit::InternalSwap(TransactionLimit* other) {
  using std::swap;
  transactionid_.Swap(&other->transactionid_);
  swap(limitnum_, other->limitnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransactionLimit::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransactionLimit

// bytes transactionId = 1;
void TransactionLimit::clear_transactionid() {
  transactionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TransactionLimit::transactionid() const {
  // @@protoc_insertion_point(field_get:protocol.TransactionLimit.transactionId)
  return transactionid_.GetNoArena();
}
void TransactionLimit::set_transactionid(const ::std::string& value) {
  
  transactionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.TransactionLimit.transactionId)
}
#if LANG_CXX11
void TransactionLimit::set_transactionid(::std::string&& value) {
  
  transactionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.TransactionLimit.transactionId)
}
#endif
void TransactionLimit::set_transactionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transactionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.TransactionLimit.transactionId)
}
void TransactionLimit::set_transactionid(const void* value, size_t size) {
  
  transactionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.TransactionLimit.transactionId)
}
::std::string* TransactionLimit::mutable_transactionid() {
  
  // @@protoc_insertion_point(field_mutable:protocol.TransactionLimit.transactionId)
  return transactionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TransactionLimit::release_transactionid() {
  // @@protoc_insertion_point(field_release:protocol.TransactionLimit.transactionId)
  
  return transactionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransactionLimit::set_allocated_transactionid(::std::string* transactionid) {
  if (transactionid != NULL) {
    
  } else {
    
  }
  transactionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transactionid);
  // @@protoc_insertion_point(field_set_allocated:protocol.TransactionLimit.transactionId)
}

// int64 limitNum = 2;
void TransactionLimit::clear_limitnum() {
  limitnum_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransactionLimit::limitnum() const {
  // @@protoc_insertion_point(field_get:protocol.TransactionLimit.limitNum)
  return limitnum_;
}
void TransactionLimit::set_limitnum(::google::protobuf::int64 value) {
  
  limitnum_ = value;
  // @@protoc_insertion_point(field_set:protocol.TransactionLimit.limitNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountPaginated::kAccountFieldNumber;
const int AccountPaginated::kOffsetFieldNumber;
const int AccountPaginated::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountPaginated::AccountPaginated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.AccountPaginated)
}
AccountPaginated::AccountPaginated(const AccountPaginated& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_account()) {
    account_ = new ::protocol::Account(*from.account_);
  } else {
    account_ = NULL;
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:protocol.AccountPaginated)
}

void AccountPaginated::SharedCtor() {
  ::memset(&account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&account_)) + sizeof(limit_));
  _cached_size_ = 0;
}

AccountPaginated::~AccountPaginated() {
  // @@protoc_insertion_point(destructor:protocol.AccountPaginated)
  SharedDtor();
}

void AccountPaginated::SharedDtor() {
  if (this != internal_default_instance()) delete account_;
}

void AccountPaginated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountPaginated::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountPaginated& AccountPaginated::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountPaginated* AccountPaginated::New(::google::protobuf::Arena* arena) const {
  AccountPaginated* n = new AccountPaginated;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountPaginated::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.AccountPaginated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && account_ != NULL) {
    delete account_;
  }
  account_ = NULL;
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
  _internal_metadata_.Clear();
}

bool AccountPaginated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.AccountPaginated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.Account account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.AccountPaginated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.AccountPaginated)
  return false;
#undef DO_
}

void AccountPaginated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.AccountPaginated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Account account = 1;
  if (this->has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->account_, output);
  }

  // int64 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->offset(), output);
  }

  // int64 limit = 3;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.AccountPaginated)
}

::google::protobuf::uint8* AccountPaginated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.AccountPaginated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Account account = 1;
  if (this->has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->account_, deterministic, target);
  }

  // int64 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->offset(), target);
  }

  // int64 limit = 3;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.AccountPaginated)
  return target;
}

size_t AccountPaginated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.AccountPaginated)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .protocol.Account account = 1;
  if (this->has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->account_);
  }

  // int64 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset());
  }

  // int64 limit = 3;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountPaginated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.AccountPaginated)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountPaginated* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountPaginated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.AccountPaginated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.AccountPaginated)
    MergeFrom(*source);
  }
}

void AccountPaginated::MergeFrom(const AccountPaginated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.AccountPaginated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account()) {
    mutable_account()->::protocol::Account::MergeFrom(from.account());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void AccountPaginated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.AccountPaginated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountPaginated::CopyFrom(const AccountPaginated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.AccountPaginated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountPaginated::IsInitialized() const {
  return true;
}

void AccountPaginated::Swap(AccountPaginated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountPaginated::InternalSwap(AccountPaginated* other) {
  using std::swap;
  swap(account_, other->account_);
  swap(offset_, other->offset_);
  swap(limit_, other->limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountPaginated::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountPaginated

// .protocol.Account account = 1;
bool AccountPaginated::has_account() const {
  return this != internal_default_instance() && account_ != NULL;
}
void AccountPaginated::clear_account() {
  if (GetArenaNoVirtual() == NULL && account_ != NULL) delete account_;
  account_ = NULL;
}
const ::protocol::Account& AccountPaginated::account() const {
  const ::protocol::Account* p = account_;
  // @@protoc_insertion_point(field_get:protocol.AccountPaginated.account)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::Account*>(
      &::protocol::_Account_default_instance_);
}
::protocol::Account* AccountPaginated::mutable_account() {
  
  if (account_ == NULL) {
    account_ = new ::protocol::Account;
  }
  // @@protoc_insertion_point(field_mutable:protocol.AccountPaginated.account)
  return account_;
}
::protocol::Account* AccountPaginated::release_account() {
  // @@protoc_insertion_point(field_release:protocol.AccountPaginated.account)
  
  ::protocol::Account* temp = account_;
  account_ = NULL;
  return temp;
}
void AccountPaginated::set_allocated_account(::protocol::Account* account) {
  delete account_;
  account_ = account;
  if (account) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.AccountPaginated.account)
}

// int64 offset = 2;
void AccountPaginated::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AccountPaginated::offset() const {
  // @@protoc_insertion_point(field_get:protocol.AccountPaginated.offset)
  return offset_;
}
void AccountPaginated::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:protocol.AccountPaginated.offset)
}

// int64 limit = 3;
void AccountPaginated::clear_limit() {
  limit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AccountPaginated::limit() const {
  // @@protoc_insertion_point(field_get:protocol.AccountPaginated.limit)
  return limit_;
}
void AccountPaginated::set_limit(::google::protobuf::int64 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:protocol.AccountPaginated.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimePaginatedMessage::kTimeMessageFieldNumber;
const int TimePaginatedMessage::kOffsetFieldNumber;
const int TimePaginatedMessage::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimePaginatedMessage::TimePaginatedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.TimePaginatedMessage)
}
TimePaginatedMessage::TimePaginatedMessage(const TimePaginatedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timemessage()) {
    timemessage_ = new ::protocol::TimeMessage(*from.timemessage_);
  } else {
    timemessage_ = NULL;
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:protocol.TimePaginatedMessage)
}

void TimePaginatedMessage::SharedCtor() {
  ::memset(&timemessage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&timemessage_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TimePaginatedMessage::~TimePaginatedMessage() {
  // @@protoc_insertion_point(destructor:protocol.TimePaginatedMessage)
  SharedDtor();
}

void TimePaginatedMessage::SharedDtor() {
  if (this != internal_default_instance()) delete timemessage_;
}

void TimePaginatedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimePaginatedMessage::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimePaginatedMessage& TimePaginatedMessage::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

TimePaginatedMessage* TimePaginatedMessage::New(::google::protobuf::Arena* arena) const {
  TimePaginatedMessage* n = new TimePaginatedMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimePaginatedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.TimePaginatedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && timemessage_ != NULL) {
    delete timemessage_;
  }
  timemessage_ = NULL;
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
  _internal_metadata_.Clear();
}

bool TimePaginatedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.TimePaginatedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.TimeMessage timeMessage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timemessage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.TimePaginatedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.TimePaginatedMessage)
  return false;
#undef DO_
}

void TimePaginatedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.TimePaginatedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.TimeMessage timeMessage = 1;
  if (this->has_timemessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->timemessage_, output);
  }

  // int64 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->offset(), output);
  }

  // int64 limit = 3;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.TimePaginatedMessage)
}

::google::protobuf::uint8* TimePaginatedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.TimePaginatedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.TimeMessage timeMessage = 1;
  if (this->has_timemessage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->timemessage_, deterministic, target);
  }

  // int64 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->offset(), target);
  }

  // int64 limit = 3;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.TimePaginatedMessage)
  return target;
}

size_t TimePaginatedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.TimePaginatedMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .protocol.TimeMessage timeMessage = 1;
  if (this->has_timemessage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->timemessage_);
  }

  // int64 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset());
  }

  // int64 limit = 3;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimePaginatedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.TimePaginatedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TimePaginatedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimePaginatedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.TimePaginatedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.TimePaginatedMessage)
    MergeFrom(*source);
  }
}

void TimePaginatedMessage::MergeFrom(const TimePaginatedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.TimePaginatedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timemessage()) {
    mutable_timemessage()->::protocol::TimeMessage::MergeFrom(from.timemessage());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void TimePaginatedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.TimePaginatedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimePaginatedMessage::CopyFrom(const TimePaginatedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.TimePaginatedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimePaginatedMessage::IsInitialized() const {
  return true;
}

void TimePaginatedMessage::Swap(TimePaginatedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimePaginatedMessage::InternalSwap(TimePaginatedMessage* other) {
  using std::swap;
  swap(timemessage_, other->timemessage_);
  swap(offset_, other->offset_);
  swap(limit_, other->limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimePaginatedMessage::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimePaginatedMessage

// .protocol.TimeMessage timeMessage = 1;
bool TimePaginatedMessage::has_timemessage() const {
  return this != internal_default_instance() && timemessage_ != NULL;
}
void TimePaginatedMessage::clear_timemessage() {
  if (GetArenaNoVirtual() == NULL && timemessage_ != NULL) delete timemessage_;
  timemessage_ = NULL;
}
const ::protocol::TimeMessage& TimePaginatedMessage::timemessage() const {
  const ::protocol::TimeMessage* p = timemessage_;
  // @@protoc_insertion_point(field_get:protocol.TimePaginatedMessage.timeMessage)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::TimeMessage*>(
      &::protocol::_TimeMessage_default_instance_);
}
::protocol::TimeMessage* TimePaginatedMessage::mutable_timemessage() {
  
  if (timemessage_ == NULL) {
    timemessage_ = new ::protocol::TimeMessage;
  }
  // @@protoc_insertion_point(field_mutable:protocol.TimePaginatedMessage.timeMessage)
  return timemessage_;
}
::protocol::TimeMessage* TimePaginatedMessage::release_timemessage() {
  // @@protoc_insertion_point(field_release:protocol.TimePaginatedMessage.timeMessage)
  
  ::protocol::TimeMessage* temp = timemessage_;
  timemessage_ = NULL;
  return temp;
}
void TimePaginatedMessage::set_allocated_timemessage(::protocol::TimeMessage* timemessage) {
  delete timemessage_;
  timemessage_ = timemessage;
  if (timemessage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.TimePaginatedMessage.timeMessage)
}

// int64 offset = 2;
void TimePaginatedMessage::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TimePaginatedMessage::offset() const {
  // @@protoc_insertion_point(field_get:protocol.TimePaginatedMessage.offset)
  return offset_;
}
void TimePaginatedMessage::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:protocol.TimePaginatedMessage.offset)
}

// int64 limit = 3;
void TimePaginatedMessage::clear_limit() {
  limit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TimePaginatedMessage::limit() const {
  // @@protoc_insertion_point(field_get:protocol.TimePaginatedMessage.limit)
  return limit_;
}
void TimePaginatedMessage::set_limit(::google::protobuf::int64 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:protocol.TimePaginatedMessage.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AccountNetMessage::AccountNetMessage_AssetNetUsedEntry::AccountNetMessage_AssetNetUsedEntry() {}
AccountNetMessage::AccountNetMessage_AssetNetUsedEntry::AccountNetMessage_AssetNetUsedEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AccountNetMessage::AccountNetMessage_AssetNetUsedEntry::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[17];
}
void AccountNetMessage::AccountNetMessage_AssetNetUsedEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AccountNetMessage::AccountNetMessage_AssetNetUsedEntry::MergeFrom(const AccountNetMessage_AssetNetUsedEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AccountNetMessage::AccountNetMessage_AssetNetLimitEntry::AccountNetMessage_AssetNetLimitEntry() {}
AccountNetMessage::AccountNetMessage_AssetNetLimitEntry::AccountNetMessage_AssetNetLimitEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AccountNetMessage::AccountNetMessage_AssetNetLimitEntry::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[18];
}
void AccountNetMessage::AccountNetMessage_AssetNetLimitEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AccountNetMessage::AccountNetMessage_AssetNetLimitEntry::MergeFrom(const AccountNetMessage_AssetNetLimitEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountNetMessage::kFreeNetUsedFieldNumber;
const int AccountNetMessage::kFreeNetLimitFieldNumber;
const int AccountNetMessage::kNetUsedFieldNumber;
const int AccountNetMessage::kNetLimitFieldNumber;
const int AccountNetMessage::kAssetNetUsedFieldNumber;
const int AccountNetMessage::kAssetNetLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountNetMessage::AccountNetMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.AccountNetMessage)
}
AccountNetMessage::AccountNetMessage(const AccountNetMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  assetnetused_.MergeFrom(from.assetnetused_);
  assetnetlimit_.MergeFrom(from.assetnetlimit_);
  ::memcpy(&freenetused_, &from.freenetused_,
    static_cast<size_t>(reinterpret_cast<char*>(&netlimit_) -
    reinterpret_cast<char*>(&freenetused_)) + sizeof(netlimit_));
  // @@protoc_insertion_point(copy_constructor:protocol.AccountNetMessage)
}

void AccountNetMessage::SharedCtor() {
  ::memset(&freenetused_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netlimit_) -
      reinterpret_cast<char*>(&freenetused_)) + sizeof(netlimit_));
  _cached_size_ = 0;
}

AccountNetMessage::~AccountNetMessage() {
  // @@protoc_insertion_point(destructor:protocol.AccountNetMessage)
  SharedDtor();
}

void AccountNetMessage::SharedDtor() {
}

void AccountNetMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountNetMessage::descriptor() {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountNetMessage& AccountNetMessage::default_instance() {
  protobuf_api_2fapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountNetMessage* AccountNetMessage::New(::google::protobuf::Arena* arena) const {
  AccountNetMessage* n = new AccountNetMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountNetMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.AccountNetMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  assetnetused_.Clear();
  assetnetlimit_.Clear();
  ::memset(&freenetused_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netlimit_) -
      reinterpret_cast<char*>(&freenetused_)) + sizeof(netlimit_));
  _internal_metadata_.Clear();
}

bool AccountNetMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.AccountNetMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 freeNetUsed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &freenetused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 freeNetLimit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &freenetlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 NetUsed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &netused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 NetLimit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &netlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int64> assetNetUsed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          AccountNetMessage_AssetNetUsedEntry::Parser< ::google::protobuf::internal::MapField<
              AccountNetMessage_AssetNetUsedEntry,
              ::std::string, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 > > parser(&assetnetused_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.AccountNetMessage.AssetNetUsedEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int64> assetNetLimit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          AccountNetMessage_AssetNetLimitEntry::Parser< ::google::protobuf::internal::MapField<
              AccountNetMessage_AssetNetLimitEntry,
              ::std::string, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 > > parser(&assetnetlimit_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.AccountNetMessage.AssetNetLimitEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.AccountNetMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.AccountNetMessage)
  return false;
#undef DO_
}

void AccountNetMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.AccountNetMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 freeNetUsed = 1;
  if (this->freenetused() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->freenetused(), output);
  }

  // int64 freeNetLimit = 2;
  if (this->freenetlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->freenetlimit(), output);
  }

  // int64 NetUsed = 3;
  if (this->netused() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->netused(), output);
  }

  // int64 NetLimit = 4;
  if (this->netlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->netlimit(), output);
  }

  // map<string, int64> assetNetUsed = 5;
  if (!this->assetnetused().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protocol.AccountNetMessage.AssetNetUsedEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->assetnetused().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->assetnetused().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->assetnetused().begin();
          it != this->assetnetused().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AccountNetMessage_AssetNetUsedEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(assetnetused_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AccountNetMessage_AssetNetUsedEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->assetnetused().begin();
          it != this->assetnetused().end(); ++it) {
        entry.reset(assetnetused_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, int64> assetNetLimit = 6;
  if (!this->assetnetlimit().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protocol.AccountNetMessage.AssetNetLimitEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->assetnetlimit().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->assetnetlimit().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->assetnetlimit().begin();
          it != this->assetnetlimit().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AccountNetMessage_AssetNetLimitEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(assetnetlimit_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AccountNetMessage_AssetNetLimitEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->assetnetlimit().begin();
          it != this->assetnetlimit().end(); ++it) {
        entry.reset(assetnetlimit_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.AccountNetMessage)
}

::google::protobuf::uint8* AccountNetMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.AccountNetMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 freeNetUsed = 1;
  if (this->freenetused() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->freenetused(), target);
  }

  // int64 freeNetLimit = 2;
  if (this->freenetlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->freenetlimit(), target);
  }

  // int64 NetUsed = 3;
  if (this->netused() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->netused(), target);
  }

  // int64 NetLimit = 4;
  if (this->netlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->netlimit(), target);
  }

  // map<string, int64> assetNetUsed = 5;
  if (!this->assetnetused().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protocol.AccountNetMessage.AssetNetUsedEntry.key");
      }
    };

    if (deterministic &&
        this->assetnetused().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->assetnetused().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->assetnetused().begin();
          it != this->assetnetused().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AccountNetMessage_AssetNetUsedEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(assetnetused_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AccountNetMessage_AssetNetUsedEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->assetnetused().begin();
          it != this->assetnetused().end(); ++it) {
        entry.reset(assetnetused_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, int64> assetNetLimit = 6;
  if (!this->assetnetlimit().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protocol.AccountNetMessage.AssetNetLimitEntry.key");
      }
    };

    if (deterministic &&
        this->assetnetlimit().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->assetnetlimit().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->assetnetlimit().begin();
          it != this->assetnetlimit().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AccountNetMessage_AssetNetLimitEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(assetnetlimit_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AccountNetMessage_AssetNetLimitEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->assetnetlimit().begin();
          it != this->assetnetlimit().end(); ++it) {
        entry.reset(assetnetlimit_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.AccountNetMessage)
  return target;
}

size_t AccountNetMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.AccountNetMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, int64> assetNetUsed = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->assetnetused_size());
  {
    ::google::protobuf::scoped_ptr<AccountNetMessage_AssetNetUsedEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
        it = this->assetnetused().begin();
        it != this->assetnetused().end(); ++it) {
      entry.reset(assetnetused_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, int64> assetNetLimit = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->assetnetlimit_size());
  {
    ::google::protobuf::scoped_ptr<AccountNetMessage_AssetNetLimitEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
        it = this->assetnetlimit().begin();
        it != this->assetnetlimit().end(); ++it) {
      entry.reset(assetnetlimit_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int64 freeNetUsed = 1;
  if (this->freenetused() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->freenetused());
  }

  // int64 freeNetLimit = 2;
  if (this->freenetlimit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->freenetlimit());
  }

  // int64 NetUsed = 3;
  if (this->netused() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->netused());
  }

  // int64 NetLimit = 4;
  if (this->netlimit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->netlimit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountNetMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.AccountNetMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountNetMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountNetMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.AccountNetMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.AccountNetMessage)
    MergeFrom(*source);
  }
}

void AccountNetMessage::MergeFrom(const AccountNetMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.AccountNetMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  assetnetused_.MergeFrom(from.assetnetused_);
  assetnetlimit_.MergeFrom(from.assetnetlimit_);
  if (from.freenetused() != 0) {
    set_freenetused(from.freenetused());
  }
  if (from.freenetlimit() != 0) {
    set_freenetlimit(from.freenetlimit());
  }
  if (from.netused() != 0) {
    set_netused(from.netused());
  }
  if (from.netlimit() != 0) {
    set_netlimit(from.netlimit());
  }
}

void AccountNetMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.AccountNetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountNetMessage::CopyFrom(const AccountNetMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.AccountNetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountNetMessage::IsInitialized() const {
  return true;
}

void AccountNetMessage::Swap(AccountNetMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountNetMessage::InternalSwap(AccountNetMessage* other) {
  using std::swap;
  assetnetused_.Swap(&other->assetnetused_);
  assetnetlimit_.Swap(&other->assetnetlimit_);
  swap(freenetused_, other->freenetused_);
  swap(freenetlimit_, other->freenetlimit_);
  swap(netused_, other->netused_);
  swap(netlimit_, other->netlimit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountNetMessage::GetMetadata() const {
  protobuf_api_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountNetMessage

// int64 freeNetUsed = 1;
void AccountNetMessage::clear_freenetused() {
  freenetused_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AccountNetMessage::freenetused() const {
  // @@protoc_insertion_point(field_get:protocol.AccountNetMessage.freeNetUsed)
  return freenetused_;
}
void AccountNetMessage::set_freenetused(::google::protobuf::int64 value) {
  
  freenetused_ = value;
  // @@protoc_insertion_point(field_set:protocol.AccountNetMessage.freeNetUsed)
}

// int64 freeNetLimit = 2;
void AccountNetMessage::clear_freenetlimit() {
  freenetlimit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AccountNetMessage::freenetlimit() const {
  // @@protoc_insertion_point(field_get:protocol.AccountNetMessage.freeNetLimit)
  return freenetlimit_;
}
void AccountNetMessage::set_freenetlimit(::google::protobuf::int64 value) {
  
  freenetlimit_ = value;
  // @@protoc_insertion_point(field_set:protocol.AccountNetMessage.freeNetLimit)
}

// int64 NetUsed = 3;
void AccountNetMessage::clear_netused() {
  netused_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AccountNetMessage::netused() const {
  // @@protoc_insertion_point(field_get:protocol.AccountNetMessage.NetUsed)
  return netused_;
}
void AccountNetMessage::set_netused(::google::protobuf::int64 value) {
  
  netused_ = value;
  // @@protoc_insertion_point(field_set:protocol.AccountNetMessage.NetUsed)
}

// int64 NetLimit = 4;
void AccountNetMessage::clear_netlimit() {
  netlimit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AccountNetMessage::netlimit() const {
  // @@protoc_insertion_point(field_get:protocol.AccountNetMessage.NetLimit)
  return netlimit_;
}
void AccountNetMessage::set_netlimit(::google::protobuf::int64 value) {
  
  netlimit_ = value;
  // @@protoc_insertion_point(field_set:protocol.AccountNetMessage.NetLimit)
}

// map<string, int64> assetNetUsed = 5;
int AccountNetMessage::assetnetused_size() const {
  return assetnetused_.size();
}
void AccountNetMessage::clear_assetnetused() {
  assetnetused_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
AccountNetMessage::assetnetused() const {
  // @@protoc_insertion_point(field_map:protocol.AccountNetMessage.assetNetUsed)
  return assetnetused_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
AccountNetMessage::mutable_assetnetused() {
  // @@protoc_insertion_point(field_mutable_map:protocol.AccountNetMessage.assetNetUsed)
  return assetnetused_.MutableMap();
}

// map<string, int64> assetNetLimit = 6;
int AccountNetMessage::assetnetlimit_size() const {
  return assetnetlimit_.size();
}
void AccountNetMessage::clear_assetnetlimit() {
  assetnetlimit_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
AccountNetMessage::assetnetlimit() const {
  // @@protoc_insertion_point(field_map:protocol.AccountNetMessage.assetNetLimit)
  return assetnetlimit_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
AccountNetMessage::mutable_assetnetlimit() {
  // @@protoc_insertion_point(field_mutable_map:protocol.AccountNetMessage.assetNetLimit)
  return assetnetlimit_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

// @@protoc_insertion_point(global_scope)
