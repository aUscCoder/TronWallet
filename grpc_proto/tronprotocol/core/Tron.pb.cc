// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/Tron.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "core/Tron.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protocol {
class AccountIdDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AccountId>
     _instance;
} _AccountId_default_instance_;
class VoteDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vote>
     _instance;
} _Vote_default_instance_;
class Account_FrozenDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Account_Frozen>
     _instance;
} _Account_Frozen_default_instance_;
class Account_AssetEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Account::Account_AssetEntry>
     _instance;
} _Account_AssetEntry_default_instance_;
class Account_LatestAssetOperationTimeEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Account::Account_LatestAssetOperationTimeEntry>
     _instance;
} _Account_LatestAssetOperationTimeEntry_default_instance_;
class Account_FreeAssetNetUsageEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Account::Account_FreeAssetNetUsageEntry>
     _instance;
} _Account_FreeAssetNetUsageEntry_default_instance_;
class AccountDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Account>
     _instance;
} _Account_default_instance_;
class acuthrityDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<acuthrity>
     _instance;
} _acuthrity_default_instance_;
class permisionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<permision>
     _instance;
} _permision_default_instance_;
class WitnessDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Witness>
     _instance;
} _Witness_default_instance_;
class VotesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Votes>
     _instance;
} _Votes_default_instance_;
class TXOutputDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TXOutput>
     _instance;
} _TXOutput_default_instance_;
class TXInput_rawDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TXInput_raw>
     _instance;
} _TXInput_raw_default_instance_;
class TXInputDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TXInput>
     _instance;
} _TXInput_default_instance_;
class TXOutputsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TXOutputs>
     _instance;
} _TXOutputs_default_instance_;
class Transaction_ContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Transaction_Contract>
     _instance;
} _Transaction_Contract_default_instance_;
class Transaction_ResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Transaction_Result>
     _instance;
} _Transaction_Result_default_instance_;
class Transaction_rawDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Transaction_raw>
     _instance;
} _Transaction_raw_default_instance_;
class TransactionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Transaction>
     _instance;
} _Transaction_default_instance_;
class TransactionsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Transactions>
     _instance;
} _Transactions_default_instance_;
class BlockHeader_rawDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlockHeader_raw>
     _instance;
} _BlockHeader_raw_default_instance_;
class BlockHeaderDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlockHeader>
     _instance;
} _BlockHeader_default_instance_;
class BlockDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Block>
     _instance;
} _Block_default_instance_;
class ChainInventory_BlockIdDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChainInventory_BlockId>
     _instance;
} _ChainInventory_BlockId_default_instance_;
class ChainInventoryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChainInventory>
     _instance;
} _ChainInventory_default_instance_;
class BlockInventory_BlockIdDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlockInventory_BlockId>
     _instance;
} _BlockInventory_BlockId_default_instance_;
class BlockInventoryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlockInventory>
     _instance;
} _BlockInventory_default_instance_;
class InventoryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Inventory>
     _instance;
} _Inventory_default_instance_;
class ItemsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Items>
     _instance;
} _Items_default_instance_;
class DynamicPropertiesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DynamicProperties>
     _instance;
} _DynamicProperties_default_instance_;
class DisconnectMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisconnectMessage>
     _instance;
} _DisconnectMessage_default_instance_;
class HelloMessage_BlockIdDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HelloMessage_BlockId>
     _instance;
} _HelloMessage_BlockId_default_instance_;
class HelloMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HelloMessage>
     _instance;
} _HelloMessage_default_instance_;

namespace protobuf_core_2fTron_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[33];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountId, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountId, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vote, vote_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vote, vote_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account_Frozen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account_Frozen, frozen_balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account_Frozen, expire_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, votes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, asset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, frozen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, net_usage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, latest_opration_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, allowance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, latest_withdraw_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, is_witness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, is_committee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, frozen_supply_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, asset_issued_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, latest_asset_operation_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, free_net_usage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, free_asset_net_usage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, latest_consume_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, latest_consume_free_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acuthrity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acuthrity, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acuthrity, permission_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(permision, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(permision, account_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Witness, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Witness, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Witness, votecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Witness, pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Witness, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Witness, totalproduced_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Witness, totalmissed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Witness, latestblocknum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Witness, latestslotnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Witness, isjobs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Votes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Votes, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Votes, old_votes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Votes, new_votes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TXOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TXOutput, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TXOutput, pubkeyhash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TXInput_raw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TXInput_raw, txid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TXInput_raw, vout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TXInput_raw, pubkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TXInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TXInput, raw_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TXInput, signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TXOutputs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TXOutputs, outputs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_Contract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_Contract, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_Contract, parameter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_Contract, provider_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_Contract, contractname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_Result, fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_Result, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_raw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_raw, ref_block_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_raw, ref_block_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_raw, ref_block_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_raw, expiration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_raw, auths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_raw, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_raw, contract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_raw, scripts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction_raw, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction, raw_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transactions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transactions, transactions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader_raw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader_raw, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader_raw, txtrieroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader_raw, parenthash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader_raw, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader_raw, witness_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader_raw, witness_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader, raw_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader, witness_signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, transactions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, block_header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChainInventory_BlockId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChainInventory_BlockId, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChainInventory_BlockId, number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChainInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChainInventory, ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChainInventory, remain_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInventory_BlockId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInventory_BlockId, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInventory_BlockId, number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInventory, ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInventory, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Inventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Inventory, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Inventory, ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, blocks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, block_headers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, transactions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicProperties, last_solidity_block_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisconnectMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisconnectMessage, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloMessage_BlockId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloMessage_BlockId, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloMessage_BlockId, number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloMessage, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloMessage, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloMessage, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloMessage, genesisblockid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloMessage, solidblockid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloMessage, headblockid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(AccountId)},
  { 7, -1, sizeof(Vote)},
  { 14, -1, sizeof(Account_Frozen)},
  { 21, -1, sizeof(Account)},
  { 48, -1, sizeof(acuthrity)},
  { 55, -1, sizeof(permision)},
  { 61, -1, sizeof(Witness)},
  { 75, -1, sizeof(Votes)},
  { 83, -1, sizeof(TXOutput)},
  { 90, -1, sizeof(TXInput_raw)},
  { 98, -1, sizeof(TXInput)},
  { 105, -1, sizeof(TXOutputs)},
  { 111, -1, sizeof(Transaction_Contract)},
  { 120, -1, sizeof(Transaction_Result)},
  { 127, -1, sizeof(Transaction_raw)},
  { 141, -1, sizeof(Transaction)},
  { 149, -1, sizeof(Transactions)},
  { 155, -1, sizeof(BlockHeader_raw)},
  { 166, -1, sizeof(BlockHeader)},
  { 173, -1, sizeof(Block)},
  { 180, -1, sizeof(ChainInventory_BlockId)},
  { 187, -1, sizeof(ChainInventory)},
  { 194, -1, sizeof(BlockInventory_BlockId)},
  { 201, -1, sizeof(BlockInventory)},
  { 208, -1, sizeof(Inventory)},
  { 215, -1, sizeof(Items)},
  { 224, -1, sizeof(DynamicProperties)},
  { 230, -1, sizeof(DisconnectMessage)},
  { 236, -1, sizeof(HelloMessage_BlockId)},
  { 243, -1, sizeof(HelloMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Account_Frozen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Account_AssetEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Account_LatestAssetOperationTimeEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Account_FreeAssetNetUsageEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Account_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_acuthrity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_permision_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Witness_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Votes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TXOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TXInput_raw_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TXInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TXOutputs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Transaction_Contract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Transaction_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Transaction_raw_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Transaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Transactions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockHeader_raw_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Block_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChainInventory_BlockId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChainInventory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockInventory_BlockId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockInventory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Inventory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Items_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DynamicProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DisconnectMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HelloMessage_BlockId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HelloMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "core/Tron.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[3].reflection = Account::Account_AssetEntry::CreateReflection(file_level_metadata[3].descriptor, _Account_AssetEntry_default_instance_._instance.get_mutable());
file_level_metadata[4].reflection = Account::Account_LatestAssetOperationTimeEntry::CreateReflection(file_level_metadata[4].descriptor, _Account_LatestAssetOperationTimeEntry_default_instance_._instance.get_mutable());
file_level_metadata[5].reflection = Account::Account_FreeAssetNetUsageEntry::CreateReflection(file_level_metadata[5].descriptor, _Account_FreeAssetNetUsageEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 33);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::InitDefaults();
  ::protocol::protobuf_core_2fDiscover_2eproto::InitDefaults();
  _AccountId_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AccountId_default_instance_);_Vote_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vote_default_instance_);_Account_Frozen_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Account_Frozen_default_instance_);_Account_AssetEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Account_AssetEntry_default_instance_);_Account_LatestAssetOperationTimeEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Account_LatestAssetOperationTimeEntry_default_instance_);_Account_FreeAssetNetUsageEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Account_FreeAssetNetUsageEntry_default_instance_);_Account_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Account_default_instance_);_acuthrity_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_acuthrity_default_instance_);_permision_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_permision_default_instance_);_Witness_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Witness_default_instance_);_Votes_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Votes_default_instance_);_TXOutput_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TXOutput_default_instance_);_TXInput_raw_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TXInput_raw_default_instance_);_TXInput_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TXInput_default_instance_);_TXOutputs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TXOutputs_default_instance_);_Transaction_Contract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Transaction_Contract_default_instance_);_Transaction_Result_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Transaction_Result_default_instance_);_Transaction_raw_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Transaction_raw_default_instance_);_Transaction_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Transaction_default_instance_);_Transactions_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Transactions_default_instance_);_BlockHeader_raw_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlockHeader_raw_default_instance_);_BlockHeader_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlockHeader_default_instance_);_Block_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Block_default_instance_);_ChainInventory_BlockId_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChainInventory_BlockId_default_instance_);_ChainInventory_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChainInventory_default_instance_);_BlockInventory_BlockId_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlockInventory_BlockId_default_instance_);_BlockInventory_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlockInventory_default_instance_);_Inventory_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Inventory_default_instance_);_Items_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Items_default_instance_);_DynamicProperties_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DynamicProperties_default_instance_);_DisconnectMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisconnectMessage_default_instance_);_HelloMessage_BlockId_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HelloMessage_BlockId_default_instance_);_HelloMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HelloMessage_default_instance_);_Account_AssetEntry_default_instance_._instance.get_mutable()->set_default_instance(_Account_AssetEntry_default_instance_._instance.get_mutable());
  _Account_AssetEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _Account_LatestAssetOperationTimeEntry_default_instance_._instance.get_mutable()->set_default_instance(_Account_LatestAssetOperationTimeEntry_default_instance_._instance.get_mutable());
  _Account_LatestAssetOperationTimeEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _Account_FreeAssetNetUsageEntry_default_instance_._instance.get_mutable()->set_default_instance(_Account_FreeAssetNetUsageEntry_default_instance_._instance.get_mutable());
  _Account_FreeAssetNetUsageEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _acuthrity_default_instance_._instance.get_mutable()->account_ = const_cast< ::protocol::AccountId*>(
      ::protocol::AccountId::internal_default_instance());
  _permision_default_instance_._instance.get_mutable()->account_ = const_cast< ::protocol::AccountId*>(
      ::protocol::AccountId::internal_default_instance());
  _TXInput_default_instance_._instance.get_mutable()->raw_data_ = const_cast< ::protocol::TXInput_raw*>(
      ::protocol::TXInput_raw::internal_default_instance());
  _Transaction_Contract_default_instance_._instance.get_mutable()->parameter_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  _Transaction_default_instance_._instance.get_mutable()->raw_data_ = const_cast< ::protocol::Transaction_raw*>(
      ::protocol::Transaction_raw::internal_default_instance());
  _BlockHeader_default_instance_._instance.get_mutable()->raw_data_ = const_cast< ::protocol::BlockHeader_raw*>(
      ::protocol::BlockHeader_raw::internal_default_instance());
  _Block_default_instance_._instance.get_mutable()->block_header_ = const_cast< ::protocol::BlockHeader*>(
      ::protocol::BlockHeader::internal_default_instance());
  _HelloMessage_default_instance_._instance.get_mutable()->from_ = const_cast< ::protocol::Endpoint*>(
      ::protocol::Endpoint::internal_default_instance());
  _HelloMessage_default_instance_._instance.get_mutable()->genesisblockid_ = const_cast< ::protocol::HelloMessage_BlockId*>(
      ::protocol::HelloMessage_BlockId::internal_default_instance());
  _HelloMessage_default_instance_._instance.get_mutable()->solidblockid_ = const_cast< ::protocol::HelloMessage_BlockId*>(
      ::protocol::HelloMessage_BlockId::internal_default_instance());
  _HelloMessage_default_instance_._instance.get_mutable()->headblockid_ = const_cast< ::protocol::HelloMessage_BlockId*>(
      ::protocol::HelloMessage_BlockId::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017core/Tron.proto\022\010protocol\032\031google/prot"
      "obuf/any.proto\032\023core/Discover.proto\"*\n\tA"
      "ccountId\022\014\n\004name\030\001 \001(\014\022\017\n\007address\030\002 \001(\014\""
      "0\n\004Vote\022\024\n\014vote_address\030\001 \001(\014\022\022\n\nvote_co"
      "unt\030\002 \001(\003\"\254\007\n\007Account\022\024\n\014account_name\030\001 "
      "\001(\014\022#\n\004type\030\002 \001(\0162\025.protocol.AccountType"
      "\022\017\n\007address\030\003 \001(\014\022\017\n\007balance\030\004 \001(\003\022\035\n\005vo"
      "tes\030\005 \003(\0132\016.protocol.Vote\022+\n\005asset\030\006 \003(\013"
      "2\034.protocol.Account.AssetEntry\022(\n\006frozen"
      "\030\007 \003(\0132\030.protocol.Account.Frozen\022\021\n\tnet_"
      "usage\030\010 \001(\003\022\023\n\013create_time\030\t \001(\003\022\034\n\024late"
      "st_opration_time\030\n \001(\003\022\021\n\tallowance\030\013 \001("
      "\003\022\034\n\024latest_withdraw_time\030\014 \001(\003\022\014\n\004code\030"
      "\r \001(\014\022\022\n\nis_witness\030\016 \001(\010\022\024\n\014is_committe"
      "e\030\017 \001(\010\022/\n\rfrozen_supply\030\020 \003(\0132\030.protoco"
      "l.Account.Frozen\022\031\n\021asset_issued_name\030\021 "
      "\001(\014\022T\n\033latest_asset_operation_time\030\022 \003(\013"
      "2/.protocol.Account.LatestAssetOperation"
      "TimeEntry\022\026\n\016free_net_usage\030\023 \001(\003\022F\n\024fre"
      "e_asset_net_usage\030\024 \003(\0132(.protocol.Accou"
      "nt.FreeAssetNetUsageEntry\022\033\n\023latest_cons"
      "ume_time\030\025 \001(\003\022 \n\030latest_consume_free_ti"
      "me\030\026 \001(\003\0325\n\006Frozen\022\026\n\016frozen_balance\030\001 \001"
      "(\003\022\023\n\013expire_time\030\002 \001(\003\032,\n\nAssetEntry\022\013\n"
      "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\003:\0028\001\032\?\n\035LatestA"
      "ssetOperationTimeEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
      "alue\030\002 \001(\003:\0028\001\0328\n\026FreeAssetNetUsageEntry"
      "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\003:\0028\001\"J\n\tacut"
      "hrity\022$\n\007account\030\001 \001(\0132\023.protocol.Accoun"
      "tId\022\027\n\017permission_name\030\002 \001(\014\"1\n\tpermisio"
      "n\022$\n\007account\030\001 \001(\0132\023.protocol.AccountId\""
      "\265\001\n\007Witness\022\017\n\007address\030\001 \001(\014\022\021\n\tvoteCoun"
      "t\030\002 \001(\003\022\016\n\006pubKey\030\003 \001(\014\022\013\n\003url\030\004 \001(\t\022\025\n\r"
      "totalProduced\030\005 \001(\003\022\023\n\013totalMissed\030\006 \001(\003"
      "\022\026\n\016latestBlockNum\030\007 \001(\003\022\025\n\rlatestSlotNu"
      "m\030\010 \001(\003\022\016\n\006isJobs\030\t \001(\010\"^\n\005Votes\022\017\n\007addr"
      "ess\030\001 \001(\014\022!\n\told_votes\030\002 \003(\0132\016.protocol."
      "Vote\022!\n\tnew_votes\030\003 \003(\0132\016.protocol.Vote\""
      "-\n\010TXOutput\022\r\n\005value\030\001 \001(\003\022\022\n\npubKeyHash"
      "\030\002 \001(\014\"x\n\007TXInput\022\'\n\010raw_data\030\001 \001(\0132\025.pr"
      "otocol.TXInput.raw\022\021\n\tsignature\030\004 \001(\014\0321\n"
      "\003raw\022\014\n\004txID\030\001 \001(\014\022\014\n\004vout\030\002 \001(\003\022\016\n\006pubK"
      "ey\030\003 \001(\014\"0\n\tTXOutputs\022#\n\007outputs\030\001 \003(\0132\022"
      ".protocol.TXOutput\"\256\010\n\013Transaction\022+\n\010ra"
      "w_data\030\001 \001(\0132\031.protocol.Transaction.raw\022"
      "\021\n\tsignature\030\002 \003(\014\022)\n\003ret\030\005 \003(\0132\034.protoc"
      "ol.Transaction.Result\032\340\004\n\010Contract\0229\n\004ty"
      "pe\030\001 \001(\0162+.protocol.Transaction.Contract"
      ".ContractType\022\'\n\tparameter\030\002 \001(\0132\024.googl"
      "e.protobuf.Any\022\020\n\010provider\030\003 \001(\014\022\024\n\014Cont"
      "ractName\030\004 \001(\014\"\307\003\n\014ContractType\022\031\n\025Accou"
      "ntCreateContract\020\000\022\024\n\020TransferContract\020\001"
      "\022\031\n\025TransferAssetContract\020\002\022\025\n\021VoteAsset"
      "Contract\020\003\022\027\n\023VoteWitnessContract\020\004\022\031\n\025W"
      "itnessCreateContract\020\005\022\026\n\022AssetIssueCont"
      "ract\020\006\022\022\n\016DeployContract\020\007\022\031\n\025WitnessUpd"
      "ateContract\020\010\022!\n\035ParticipateAssetIssueCo"
      "ntract\020\t\022\031\n\025AccountUpdateContract\020\n\022\031\n\025F"
      "reezeBalanceContract\020\013\022\033\n\027UnfreezeBalanc"
      "eContract\020\014\022\033\n\027WithdrawBalanceContract\020\r"
      "\022\031\n\025UnfreezeAssetContract\020\016\022\027\n\023UpdateAss"
      "etContract\020\017\022\022\n\016CustomContract\020\024\032e\n\006Resu"
      "lt\022\013\n\003fee\030\001 \001(\003\022.\n\003ret\030\002 \001(\0162!.protocol."
      "Transaction.Result.code\"\036\n\004code\022\n\n\006SUCES"
      "S\020\000\022\n\n\006FAILED\020\001\032\351\001\n\003raw\022\027\n\017ref_block_byt"
      "es\030\001 \001(\014\022\025\n\rref_block_num\030\003 \001(\003\022\026\n\016ref_b"
      "lock_hash\030\004 \001(\014\022\022\n\nexpiration\030\010 \001(\003\022\"\n\005a"
      "uths\030\t \003(\0132\023.protocol.acuthrity\022\014\n\004data\030"
      "\n \001(\014\0220\n\010contract\030\013 \003(\0132\036.protocol.Trans"
      "action.Contract\022\017\n\007scripts\030\014 \001(\014\022\021\n\ttime"
      "stamp\030\016 \001(\003\";\n\014Transactions\022+\n\014transacti"
      "ons\030\001 \003(\0132\025.protocol.Transaction\"\324\001\n\013Blo"
      "ckHeader\022+\n\010raw_data\030\001 \001(\0132\031.protocol.Bl"
      "ockHeader.raw\022\031\n\021witness_signature\030\002 \001(\014"
      "\032}\n\003raw\022\021\n\ttimestamp\030\001 \001(\003\022\022\n\ntxTrieRoot"
      "\030\002 \001(\014\022\022\n\nparentHash\030\003 \001(\014\022\016\n\006number\030\007 \001"
      "(\003\022\022\n\nwitness_id\030\010 \001(\003\022\027\n\017witness_addres"
      "s\030\t \001(\014\"a\n\005Block\022+\n\014transactions\030\001 \003(\0132\025"
      ".protocol.Transaction\022+\n\014block_header\030\002 "
      "\001(\0132\025.protocol.BlockHeader\"|\n\016ChainInven"
      "tory\022-\n\003ids\030\001 \003(\0132 .protocol.ChainInvent"
      "ory.BlockId\022\022\n\nremain_num\030\002 \001(\003\032\'\n\007Block"
      "Id\022\014\n\004hash\030\001 \001(\014\022\016\n\006number\030\002 \001(\003\"\277\001\n\016Blo"
      "ckInventory\022-\n\003ids\030\001 \003(\0132 .protocol.Bloc"
      "kInventory.BlockId\022+\n\004type\030\002 \001(\0162\035.proto"
      "col.BlockInventory.Type\032\'\n\007BlockId\022\014\n\004ha"
      "sh\030\001 \001(\014\022\016\n\006number\030\002 \001(\003\"(\n\004Type\022\010\n\004SYNC"
      "\020\000\022\013\n\007ADVTISE\020\001\022\t\n\005FETCH\020\002\"n\n\tInventory\022"
      "/\n\004type\030\001 \001(\0162!.protocol.Inventory.Inven"
      "toryType\022\013\n\003ids\030\002 \003(\014\"#\n\rInventoryType\022\007"
      "\n\003TRX\020\000\022\t\n\005BLOCK\020\001\"\345\001\n\005Items\022&\n\004type\030\001 \001"
      "(\0162\030.protocol.Items.ItemType\022\037\n\006blocks\030\002"
      " \003(\0132\017.protocol.Block\022,\n\rblock_headers\030\003"
      " \003(\0132\025.protocol.BlockHeader\022+\n\014transacti"
      "ons\030\004 \003(\0132\025.protocol.Transaction\"8\n\010Item"
      "Type\022\007\n\003ERR\020\000\022\007\n\003TRX\020\001\022\t\n\005BLOCK\020\002\022\017\n\013BLO"
      "CKHEADER\020\003\"4\n\021DynamicProperties\022\037\n\027last_"
      "solidity_block_num\030\001 \001(\003\"9\n\021DisconnectMe"
      "ssage\022$\n\006reason\030\001 \001(\0162\024.protocol.ReasonC"
      "ode\"\240\002\n\014HelloMessage\022 \n\004from\030\001 \001(\0132\022.pro"
      "tocol.Endpoint\022\017\n\007version\030\002 \001(\005\022\021\n\ttimes"
      "tamp\030\003 \001(\003\0226\n\016genesisBlockId\030\004 \001(\0132\036.pro"
      "tocol.HelloMessage.BlockId\0224\n\014solidBlock"
      "Id\030\005 \001(\0132\036.protocol.HelloMessage.BlockId"
      "\0223\n\013headBlockId\030\006 \001(\0132\036.protocol.HelloMe"
      "ssage.BlockId\032\'\n\007BlockId\022\014\n\004hash\030\001 \001(\014\022\016"
      "\n\006number\030\002 \001(\003*7\n\013AccountType\022\n\n\006Normal\020"
      "\000\022\016\n\nAssetIssue\020\001\022\014\n\010Contract\020\002*\246\003\n\nReas"
      "onCode\022\r\n\tREQUESTED\020\000\022\020\n\014BAD_PROTOCOL\020\002\022"
      "\022\n\016TOO_MANY_PEERS\020\004\022\022\n\016DUPLICATE_PEER\020\005\022"
      "\031\n\025INCOMPATIBLE_PROTOCOL\020\006\022\021\n\rNULL_IDENT"
      "ITY\020\007\022\020\n\014PEER_QUITING\020\010\022\027\n\023UNEXPECTED_ID"
      "ENTITY\020\t\022\022\n\016LOCAL_IDENTITY\020\n\022\020\n\014PING_TIM"
      "EOUT\020\013\022\017\n\013USER_REASON\020\020\022\t\n\005RESET\020\021\022\r\n\tSY"
      "NC_FAIL\020\022\022\016\n\nFETCH_FAIL\020\023\022\n\n\006BAD_TX\020\024\022\r\n"
      "\tBAD_BLOCK\020\025\022\n\n\006FORKED\020\026\022\016\n\nUNLINKABLE\020\027"
      "\022\030\n\024INCOMPATIBLE_VERSION\020\030\022\026\n\022INCOMPATIB"
      "LE_CHAIN\020\031\022\014\n\010TIME_OUT\020 \022\020\n\014CONNECT_FAIL"
      "\020!\022\014\n\007UNKNOWN\020\377\001BF\n\017org.tron.protosB\010Pro"
      "tocolZ)github.com/tronprotocol/grpc-gate"
      "way/coreb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4816);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "core/Tron.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protocol::protobuf_core_2fDiscover_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_core_2fTron_2eproto

const ::google::protobuf::EnumDescriptor* Transaction_Contract_ContractType_descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_enum_descriptors[0];
}
bool Transaction_Contract_ContractType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 20:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Transaction_Contract_ContractType Transaction_Contract::AccountCreateContract;
const Transaction_Contract_ContractType Transaction_Contract::TransferContract;
const Transaction_Contract_ContractType Transaction_Contract::TransferAssetContract;
const Transaction_Contract_ContractType Transaction_Contract::VoteAssetContract;
const Transaction_Contract_ContractType Transaction_Contract::VoteWitnessContract;
const Transaction_Contract_ContractType Transaction_Contract::WitnessCreateContract;
const Transaction_Contract_ContractType Transaction_Contract::AssetIssueContract;
const Transaction_Contract_ContractType Transaction_Contract::DeployContract;
const Transaction_Contract_ContractType Transaction_Contract::WitnessUpdateContract;
const Transaction_Contract_ContractType Transaction_Contract::ParticipateAssetIssueContract;
const Transaction_Contract_ContractType Transaction_Contract::AccountUpdateContract;
const Transaction_Contract_ContractType Transaction_Contract::FreezeBalanceContract;
const Transaction_Contract_ContractType Transaction_Contract::UnfreezeBalanceContract;
const Transaction_Contract_ContractType Transaction_Contract::WithdrawBalanceContract;
const Transaction_Contract_ContractType Transaction_Contract::UnfreezeAssetContract;
const Transaction_Contract_ContractType Transaction_Contract::UpdateAssetContract;
const Transaction_Contract_ContractType Transaction_Contract::CustomContract;
const Transaction_Contract_ContractType Transaction_Contract::ContractType_MIN;
const Transaction_Contract_ContractType Transaction_Contract::ContractType_MAX;
const int Transaction_Contract::ContractType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Transaction_Result_code_descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_enum_descriptors[1];
}
bool Transaction_Result_code_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Transaction_Result_code Transaction_Result::SUCESS;
const Transaction_Result_code Transaction_Result::FAILED;
const Transaction_Result_code Transaction_Result::code_MIN;
const Transaction_Result_code Transaction_Result::code_MAX;
const int Transaction_Result::code_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BlockInventory_Type_descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_enum_descriptors[2];
}
bool BlockInventory_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BlockInventory_Type BlockInventory::SYNC;
const BlockInventory_Type BlockInventory::ADVTISE;
const BlockInventory_Type BlockInventory::FETCH;
const BlockInventory_Type BlockInventory::Type_MIN;
const BlockInventory_Type BlockInventory::Type_MAX;
const int BlockInventory::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Inventory_InventoryType_descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_enum_descriptors[3];
}
bool Inventory_InventoryType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Inventory_InventoryType Inventory::TRX;
const Inventory_InventoryType Inventory::BLOCK;
const Inventory_InventoryType Inventory::InventoryType_MIN;
const Inventory_InventoryType Inventory::InventoryType_MAX;
const int Inventory::InventoryType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Items_ItemType_descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_enum_descriptors[4];
}
bool Items_ItemType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Items_ItemType Items::ERR;
const Items_ItemType Items::TRX;
const Items_ItemType Items::BLOCK;
const Items_ItemType Items::BLOCKHEADER;
const Items_ItemType Items::ItemType_MIN;
const Items_ItemType Items::ItemType_MAX;
const int Items::ItemType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AccountType_descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_enum_descriptors[5];
}
bool AccountType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ReasonCode_descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_enum_descriptors[6];
}
bool ReasonCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 32:
    case 33:
    case 255:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountId::kNameFieldNumber;
const int AccountId::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountId::AccountId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.AccountId)
}
AccountId::AccountId(const AccountId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.AccountId)
}

void AccountId::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AccountId::~AccountId() {
  // @@protoc_insertion_point(destructor:protocol.AccountId)
  SharedDtor();
}

void AccountId::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountId::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountId& AccountId::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountId* AccountId::New(::google::protobuf::Arena* arena) const {
  AccountId* n = new AccountId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountId::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.AccountId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AccountId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.AccountId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.AccountId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.AccountId)
  return false;
#undef DO_
}

void AccountId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.AccountId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // bytes address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.AccountId)
}

::google::protobuf::uint8* AccountId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.AccountId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // bytes address = 2;
  if (this->address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.AccountId)
  return target;
}

size_t AccountId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.AccountId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.AccountId)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.AccountId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.AccountId)
    MergeFrom(*source);
  }
}

void AccountId::MergeFrom(const AccountId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.AccountId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void AccountId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.AccountId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountId::CopyFrom(const AccountId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.AccountId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountId::IsInitialized() const {
  return true;
}

void AccountId::Swap(AccountId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountId::InternalSwap(AccountId* other) {
  using std::swap;
  name_.Swap(&other->name_);
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountId::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountId

// bytes name = 1;
void AccountId::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountId::name() const {
  // @@protoc_insertion_point(field_get:protocol.AccountId.name)
  return name_.GetNoArena();
}
void AccountId::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.AccountId.name)
}
#if LANG_CXX11
void AccountId::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.AccountId.name)
}
#endif
void AccountId::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.AccountId.name)
}
void AccountId::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.AccountId.name)
}
::std::string* AccountId::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:protocol.AccountId.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountId::release_name() {
  // @@protoc_insertion_point(field_release:protocol.AccountId.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountId::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.AccountId.name)
}

// bytes address = 2;
void AccountId::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountId::address() const {
  // @@protoc_insertion_point(field_get:protocol.AccountId.address)
  return address_.GetNoArena();
}
void AccountId::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.AccountId.address)
}
#if LANG_CXX11
void AccountId::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.AccountId.address)
}
#endif
void AccountId::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.AccountId.address)
}
void AccountId::set_address(const void* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.AccountId.address)
}
::std::string* AccountId::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.AccountId.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountId::release_address() {
  // @@protoc_insertion_point(field_release:protocol.AccountId.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountId::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:protocol.AccountId.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vote::kVoteAddressFieldNumber;
const int Vote::kVoteCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vote::Vote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Vote)
}
Vote::Vote(const Vote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vote_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vote_address().size() > 0) {
    vote_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vote_address_);
  }
  vote_count_ = from.vote_count_;
  // @@protoc_insertion_point(copy_constructor:protocol.Vote)
}

void Vote::SharedCtor() {
  vote_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vote_count_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Vote::~Vote() {
  // @@protoc_insertion_point(destructor:protocol.Vote)
  SharedDtor();
}

void Vote::SharedDtor() {
  vote_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Vote::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vote::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vote& Vote::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vote* Vote::New(::google::protobuf::Arena* arena) const {
  Vote* n = new Vote;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vote::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vote_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vote_count_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Vote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Vote)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes vote_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vote_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 vote_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vote_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Vote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Vote)
  return false;
#undef DO_
}

void Vote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vote_address = 1;
  if (this->vote_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->vote_address(), output);
  }

  // int64 vote_count = 2;
  if (this->vote_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->vote_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Vote)
}

::google::protobuf::uint8* Vote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vote_address = 1;
  if (this->vote_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->vote_address(), target);
  }

  // int64 vote_count = 2;
  if (this->vote_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->vote_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Vote)
  return target;
}

size_t Vote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Vote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes vote_address = 1;
  if (this->vote_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->vote_address());
  }

  // int64 vote_count = 2;
  if (this->vote_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->vote_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Vote)
  GOOGLE_DCHECK_NE(&from, this);
  const Vote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Vote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Vote)
    MergeFrom(*source);
  }
}

void Vote::MergeFrom(const Vote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Vote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vote_address().size() > 0) {

    vote_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vote_address_);
  }
  if (from.vote_count() != 0) {
    set_vote_count(from.vote_count());
  }
}

void Vote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vote::CopyFrom(const Vote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vote::IsInitialized() const {
  return true;
}

void Vote::Swap(Vote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vote::InternalSwap(Vote* other) {
  using std::swap;
  vote_address_.Swap(&other->vote_address_);
  swap(vote_count_, other->vote_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vote::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vote

// bytes vote_address = 1;
void Vote::clear_vote_address() {
  vote_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Vote::vote_address() const {
  // @@protoc_insertion_point(field_get:protocol.Vote.vote_address)
  return vote_address_.GetNoArena();
}
void Vote::set_vote_address(const ::std::string& value) {
  
  vote_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Vote.vote_address)
}
#if LANG_CXX11
void Vote::set_vote_address(::std::string&& value) {
  
  vote_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Vote.vote_address)
}
#endif
void Vote::set_vote_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vote_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Vote.vote_address)
}
void Vote::set_vote_address(const void* value, size_t size) {
  
  vote_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Vote.vote_address)
}
::std::string* Vote::mutable_vote_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Vote.vote_address)
  return vote_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Vote::release_vote_address() {
  // @@protoc_insertion_point(field_release:protocol.Vote.vote_address)
  
  return vote_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Vote::set_allocated_vote_address(::std::string* vote_address) {
  if (vote_address != NULL) {
    
  } else {
    
  }
  vote_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vote_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.Vote.vote_address)
}

// int64 vote_count = 2;
void Vote::clear_vote_count() {
  vote_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Vote::vote_count() const {
  // @@protoc_insertion_point(field_get:protocol.Vote.vote_count)
  return vote_count_;
}
void Vote::set_vote_count(::google::protobuf::int64 value) {
  
  vote_count_ = value;
  // @@protoc_insertion_point(field_set:protocol.Vote.vote_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Account_Frozen::kFrozenBalanceFieldNumber;
const int Account_Frozen::kExpireTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Account_Frozen::Account_Frozen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Account.Frozen)
}
Account_Frozen::Account_Frozen(const Account_Frozen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&frozen_balance_, &from.frozen_balance_,
    static_cast<size_t>(reinterpret_cast<char*>(&expire_time_) -
    reinterpret_cast<char*>(&frozen_balance_)) + sizeof(expire_time_));
  // @@protoc_insertion_point(copy_constructor:protocol.Account.Frozen)
}

void Account_Frozen::SharedCtor() {
  ::memset(&frozen_balance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expire_time_) -
      reinterpret_cast<char*>(&frozen_balance_)) + sizeof(expire_time_));
  _cached_size_ = 0;
}

Account_Frozen::~Account_Frozen() {
  // @@protoc_insertion_point(destructor:protocol.Account.Frozen)
  SharedDtor();
}

void Account_Frozen::SharedDtor() {
}

void Account_Frozen::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Account_Frozen::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Account_Frozen& Account_Frozen::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Account_Frozen* Account_Frozen::New(::google::protobuf::Arena* arena) const {
  Account_Frozen* n = new Account_Frozen;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Account_Frozen::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Account.Frozen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&frozen_balance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expire_time_) -
      reinterpret_cast<char*>(&frozen_balance_)) + sizeof(expire_time_));
  _internal_metadata_.Clear();
}

bool Account_Frozen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Account.Frozen)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 frozen_balance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frozen_balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 expire_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expire_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Account.Frozen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Account.Frozen)
  return false;
#undef DO_
}

void Account_Frozen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Account.Frozen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 frozen_balance = 1;
  if (this->frozen_balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->frozen_balance(), output);
  }

  // int64 expire_time = 2;
  if (this->expire_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->expire_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Account.Frozen)
}

::google::protobuf::uint8* Account_Frozen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Account.Frozen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 frozen_balance = 1;
  if (this->frozen_balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->frozen_balance(), target);
  }

  // int64 expire_time = 2;
  if (this->expire_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->expire_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Account.Frozen)
  return target;
}

size_t Account_Frozen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Account.Frozen)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 frozen_balance = 1;
  if (this->frozen_balance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frozen_balance());
  }

  // int64 expire_time = 2;
  if (this->expire_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->expire_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Account_Frozen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Account.Frozen)
  GOOGLE_DCHECK_NE(&from, this);
  const Account_Frozen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Account_Frozen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Account.Frozen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Account.Frozen)
    MergeFrom(*source);
  }
}

void Account_Frozen::MergeFrom(const Account_Frozen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Account.Frozen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frozen_balance() != 0) {
    set_frozen_balance(from.frozen_balance());
  }
  if (from.expire_time() != 0) {
    set_expire_time(from.expire_time());
  }
}

void Account_Frozen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Account.Frozen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Account_Frozen::CopyFrom(const Account_Frozen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Account.Frozen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Account_Frozen::IsInitialized() const {
  return true;
}

void Account_Frozen::Swap(Account_Frozen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Account_Frozen::InternalSwap(Account_Frozen* other) {
  using std::swap;
  swap(frozen_balance_, other->frozen_balance_);
  swap(expire_time_, other->expire_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Account_Frozen::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Account_Frozen

// int64 frozen_balance = 1;
void Account_Frozen::clear_frozen_balance() {
  frozen_balance_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Account_Frozen::frozen_balance() const {
  // @@protoc_insertion_point(field_get:protocol.Account.Frozen.frozen_balance)
  return frozen_balance_;
}
void Account_Frozen::set_frozen_balance(::google::protobuf::int64 value) {
  
  frozen_balance_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.Frozen.frozen_balance)
}

// int64 expire_time = 2;
void Account_Frozen::clear_expire_time() {
  expire_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Account_Frozen::expire_time() const {
  // @@protoc_insertion_point(field_get:protocol.Account.Frozen.expire_time)
  return expire_time_;
}
void Account_Frozen::set_expire_time(::google::protobuf::int64 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.Frozen.expire_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Account::Account_AssetEntry::Account_AssetEntry() {}
Account::Account_AssetEntry::Account_AssetEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Account::Account_AssetEntry::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[3];
}
void Account::Account_AssetEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Account::Account_AssetEntry::MergeFrom(const Account_AssetEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Account::Account_LatestAssetOperationTimeEntry::Account_LatestAssetOperationTimeEntry() {}
Account::Account_LatestAssetOperationTimeEntry::Account_LatestAssetOperationTimeEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Account::Account_LatestAssetOperationTimeEntry::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[4];
}
void Account::Account_LatestAssetOperationTimeEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Account::Account_LatestAssetOperationTimeEntry::MergeFrom(const Account_LatestAssetOperationTimeEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Account::Account_FreeAssetNetUsageEntry::Account_FreeAssetNetUsageEntry() {}
Account::Account_FreeAssetNetUsageEntry::Account_FreeAssetNetUsageEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Account::Account_FreeAssetNetUsageEntry::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[5];
}
void Account::Account_FreeAssetNetUsageEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Account::Account_FreeAssetNetUsageEntry::MergeFrom(const Account_FreeAssetNetUsageEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Account::kAccountNameFieldNumber;
const int Account::kTypeFieldNumber;
const int Account::kAddressFieldNumber;
const int Account::kBalanceFieldNumber;
const int Account::kVotesFieldNumber;
const int Account::kAssetFieldNumber;
const int Account::kFrozenFieldNumber;
const int Account::kNetUsageFieldNumber;
const int Account::kCreateTimeFieldNumber;
const int Account::kLatestOprationTimeFieldNumber;
const int Account::kAllowanceFieldNumber;
const int Account::kLatestWithdrawTimeFieldNumber;
const int Account::kCodeFieldNumber;
const int Account::kIsWitnessFieldNumber;
const int Account::kIsCommitteeFieldNumber;
const int Account::kFrozenSupplyFieldNumber;
const int Account::kAssetIssuedNameFieldNumber;
const int Account::kLatestAssetOperationTimeFieldNumber;
const int Account::kFreeNetUsageFieldNumber;
const int Account::kFreeAssetNetUsageFieldNumber;
const int Account::kLatestConsumeTimeFieldNumber;
const int Account::kLatestConsumeFreeTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Account::Account()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Account)
}
Account::Account(const Account& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      votes_(from.votes_),
      frozen_(from.frozen_),
      frozen_supply_(from.frozen_supply_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  asset_.MergeFrom(from.asset_);
  latest_asset_operation_time_.MergeFrom(from.latest_asset_operation_time_);
  free_asset_net_usage_.MergeFrom(from.free_asset_net_usage_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_name().size() > 0) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  asset_issued_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.asset_issued_name().size() > 0) {
    asset_issued_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_issued_name_);
  }
  ::memcpy(&balance_, &from.balance_,
    static_cast<size_t>(reinterpret_cast<char*>(&latest_consume_free_time_) -
    reinterpret_cast<char*>(&balance_)) + sizeof(latest_consume_free_time_));
  // @@protoc_insertion_point(copy_constructor:protocol.Account)
}

void Account::SharedCtor() {
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_issued_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&balance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latest_consume_free_time_) -
      reinterpret_cast<char*>(&balance_)) + sizeof(latest_consume_free_time_));
  _cached_size_ = 0;
}

Account::~Account() {
  // @@protoc_insertion_point(destructor:protocol.Account)
  SharedDtor();
}

void Account::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_issued_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Account::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Account::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Account& Account::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Account* Account::New(::google::protobuf::Arena* arena) const {
  Account* n = new Account;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  votes_.Clear();
  asset_.Clear();
  frozen_.Clear();
  frozen_supply_.Clear();
  latest_asset_operation_time_.Clear();
  free_asset_net_usage_.Clear();
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_issued_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&balance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latest_consume_free_time_) -
      reinterpret_cast<char*>(&balance_)) + sizeof(latest_consume_free_time_));
  _internal_metadata_.Clear();
}

bool Account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Account)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes account_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.AccountType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::protocol::AccountType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 balance = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.Vote votes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_votes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int64> asset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          Account_AssetEntry::Parser< ::google::protobuf::internal::MapField<
              Account_AssetEntry,
              ::std::string, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 > > parser(&asset_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.Account.AssetEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.Account.Frozen frozen = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_frozen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 net_usage = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &net_usage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 create_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 latest_opration_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &latest_opration_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 allowance = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &allowance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 latest_withdraw_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &latest_withdraw_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes code = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_witness = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_witness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_committee = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_committee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.Account.Frozen frozen_supply = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_frozen_supply()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes asset_issued_name = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_asset_issued_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int64> latest_asset_operation_time = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          Account_LatestAssetOperationTimeEntry::Parser< ::google::protobuf::internal::MapField<
              Account_LatestAssetOperationTimeEntry,
              ::std::string, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 > > parser(&latest_asset_operation_time_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.Account.LatestAssetOperationTimeEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 free_net_usage = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &free_net_usage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int64> free_asset_net_usage = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          Account_FreeAssetNetUsageEntry::Parser< ::google::protobuf::internal::MapField<
              Account_FreeAssetNetUsageEntry,
              ::std::string, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 > > parser(&free_asset_net_usage_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.Account.FreeAssetNetUsageEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 latest_consume_time = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &latest_consume_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 latest_consume_free_time = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &latest_consume_free_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Account)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Account)
  return false;
#undef DO_
}

void Account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account_name(), output);
  }

  // .protocol.AccountType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // bytes address = 3;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->address(), output);
  }

  // int64 balance = 4;
  if (this->balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->balance(), output);
  }

  // repeated .protocol.Vote votes = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->votes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->votes(static_cast<int>(i)), output);
  }

  // map<string, int64> asset = 6;
  if (!this->asset().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protocol.Account.AssetEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->asset().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->asset().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->asset().begin();
          it != this->asset().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Account_AssetEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(asset_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Account_AssetEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->asset().begin();
          it != this->asset().end(); ++it) {
        entry.reset(asset_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .protocol.Account.Frozen frozen = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frozen_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->frozen(static_cast<int>(i)), output);
  }

  // int64 net_usage = 8;
  if (this->net_usage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->net_usage(), output);
  }

  // int64 create_time = 9;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->create_time(), output);
  }

  // int64 latest_opration_time = 10;
  if (this->latest_opration_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->latest_opration_time(), output);
  }

  // int64 allowance = 11;
  if (this->allowance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->allowance(), output);
  }

  // int64 latest_withdraw_time = 12;
  if (this->latest_withdraw_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->latest_withdraw_time(), output);
  }

  // bytes code = 13;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->code(), output);
  }

  // bool is_witness = 14;
  if (this->is_witness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_witness(), output);
  }

  // bool is_committee = 15;
  if (this->is_committee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_committee(), output);
  }

  // repeated .protocol.Account.Frozen frozen_supply = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frozen_supply_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->frozen_supply(static_cast<int>(i)), output);
  }

  // bytes asset_issued_name = 17;
  if (this->asset_issued_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      17, this->asset_issued_name(), output);
  }

  // map<string, int64> latest_asset_operation_time = 18;
  if (!this->latest_asset_operation_time().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protocol.Account.LatestAssetOperationTimeEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->latest_asset_operation_time().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->latest_asset_operation_time().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->latest_asset_operation_time().begin();
          it != this->latest_asset_operation_time().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Account_LatestAssetOperationTimeEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(latest_asset_operation_time_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            18, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Account_LatestAssetOperationTimeEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->latest_asset_operation_time().begin();
          it != this->latest_asset_operation_time().end(); ++it) {
        entry.reset(latest_asset_operation_time_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            18, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // int64 free_net_usage = 19;
  if (this->free_net_usage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->free_net_usage(), output);
  }

  // map<string, int64> free_asset_net_usage = 20;
  if (!this->free_asset_net_usage().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protocol.Account.FreeAssetNetUsageEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->free_asset_net_usage().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->free_asset_net_usage().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->free_asset_net_usage().begin();
          it != this->free_asset_net_usage().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Account_FreeAssetNetUsageEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(free_asset_net_usage_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            20, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Account_FreeAssetNetUsageEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->free_asset_net_usage().begin();
          it != this->free_asset_net_usage().end(); ++it) {
        entry.reset(free_asset_net_usage_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            20, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // int64 latest_consume_time = 21;
  if (this->latest_consume_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->latest_consume_time(), output);
  }

  // int64 latest_consume_free_time = 22;
  if (this->latest_consume_free_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->latest_consume_free_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Account)
}

::google::protobuf::uint8* Account::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes account_name = 1;
  if (this->account_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account_name(), target);
  }

  // .protocol.AccountType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // bytes address = 3;
  if (this->address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->address(), target);
  }

  // int64 balance = 4;
  if (this->balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->balance(), target);
  }

  // repeated .protocol.Vote votes = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->votes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->votes(static_cast<int>(i)), deterministic, target);
  }

  // map<string, int64> asset = 6;
  if (!this->asset().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protocol.Account.AssetEntry.key");
      }
    };

    if (deterministic &&
        this->asset().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->asset().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->asset().begin();
          it != this->asset().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Account_AssetEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(asset_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Account_AssetEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->asset().begin();
          it != this->asset().end(); ++it) {
        entry.reset(asset_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .protocol.Account.Frozen frozen = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frozen_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->frozen(static_cast<int>(i)), deterministic, target);
  }

  // int64 net_usage = 8;
  if (this->net_usage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->net_usage(), target);
  }

  // int64 create_time = 9;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->create_time(), target);
  }

  // int64 latest_opration_time = 10;
  if (this->latest_opration_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->latest_opration_time(), target);
  }

  // int64 allowance = 11;
  if (this->allowance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->allowance(), target);
  }

  // int64 latest_withdraw_time = 12;
  if (this->latest_withdraw_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->latest_withdraw_time(), target);
  }

  // bytes code = 13;
  if (this->code().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->code(), target);
  }

  // bool is_witness = 14;
  if (this->is_witness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_witness(), target);
  }

  // bool is_committee = 15;
  if (this->is_committee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_committee(), target);
  }

  // repeated .protocol.Account.Frozen frozen_supply = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frozen_supply_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, this->frozen_supply(static_cast<int>(i)), deterministic, target);
  }

  // bytes asset_issued_name = 17;
  if (this->asset_issued_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        17, this->asset_issued_name(), target);
  }

  // map<string, int64> latest_asset_operation_time = 18;
  if (!this->latest_asset_operation_time().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protocol.Account.LatestAssetOperationTimeEntry.key");
      }
    };

    if (deterministic &&
        this->latest_asset_operation_time().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->latest_asset_operation_time().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->latest_asset_operation_time().begin();
          it != this->latest_asset_operation_time().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Account_LatestAssetOperationTimeEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(latest_asset_operation_time_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       18, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Account_LatestAssetOperationTimeEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->latest_asset_operation_time().begin();
          it != this->latest_asset_operation_time().end(); ++it) {
        entry.reset(latest_asset_operation_time_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       18, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // int64 free_net_usage = 19;
  if (this->free_net_usage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->free_net_usage(), target);
  }

  // map<string, int64> free_asset_net_usage = 20;
  if (!this->free_asset_net_usage().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protocol.Account.FreeAssetNetUsageEntry.key");
      }
    };

    if (deterministic &&
        this->free_asset_net_usage().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->free_asset_net_usage().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->free_asset_net_usage().begin();
          it != this->free_asset_net_usage().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Account_FreeAssetNetUsageEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(free_asset_net_usage_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       20, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Account_FreeAssetNetUsageEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->free_asset_net_usage().begin();
          it != this->free_asset_net_usage().end(); ++it) {
        entry.reset(free_asset_net_usage_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       20, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // int64 latest_consume_time = 21;
  if (this->latest_consume_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->latest_consume_time(), target);
  }

  // int64 latest_consume_free_time = 22;
  if (this->latest_consume_free_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->latest_consume_free_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Account)
  return target;
}

size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Account)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.Vote votes = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->votes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->votes(static_cast<int>(i)));
    }
  }

  // map<string, int64> asset = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->asset_size());
  {
    ::google::protobuf::scoped_ptr<Account_AssetEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
        it = this->asset().begin();
        it != this->asset().end(); ++it) {
      entry.reset(asset_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .protocol.Account.Frozen frozen = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->frozen_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frozen(static_cast<int>(i)));
    }
  }

  // repeated .protocol.Account.Frozen frozen_supply = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->frozen_supply_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frozen_supply(static_cast<int>(i)));
    }
  }

  // map<string, int64> latest_asset_operation_time = 18;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->latest_asset_operation_time_size());
  {
    ::google::protobuf::scoped_ptr<Account_LatestAssetOperationTimeEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
        it = this->latest_asset_operation_time().begin();
        it != this->latest_asset_operation_time().end(); ++it) {
      entry.reset(latest_asset_operation_time_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, int64> free_asset_net_usage = 20;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->free_asset_net_usage_size());
  {
    ::google::protobuf::scoped_ptr<Account_FreeAssetNetUsageEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
        it = this->free_asset_net_usage().begin();
        it != this->free_asset_net_usage().end(); ++it) {
      entry.reset(free_asset_net_usage_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account_name());
  }

  // bytes address = 3;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  // bytes code = 13;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->code());
  }

  // bytes asset_issued_name = 17;
  if (this->asset_issued_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->asset_issued_name());
  }

  // int64 balance = 4;
  if (this->balance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->balance());
  }

  // int64 net_usage = 8;
  if (this->net_usage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->net_usage());
  }

  // int64 create_time = 9;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->create_time());
  }

  // int64 latest_opration_time = 10;
  if (this->latest_opration_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->latest_opration_time());
  }

  // .protocol.AccountType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // bool is_witness = 14;
  if (this->is_witness() != 0) {
    total_size += 1 + 1;
  }

  // bool is_committee = 15;
  if (this->is_committee() != 0) {
    total_size += 1 + 1;
  }

  // int64 allowance = 11;
  if (this->allowance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->allowance());
  }

  // int64 latest_withdraw_time = 12;
  if (this->latest_withdraw_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->latest_withdraw_time());
  }

  // int64 free_net_usage = 19;
  if (this->free_net_usage() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->free_net_usage());
  }

  // int64 latest_consume_time = 21;
  if (this->latest_consume_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->latest_consume_time());
  }

  // int64 latest_consume_free_time = 22;
  if (this->latest_consume_free_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->latest_consume_free_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Account::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Account)
  GOOGLE_DCHECK_NE(&from, this);
  const Account* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Account>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Account)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Account)
    MergeFrom(*source);
  }
}

void Account::MergeFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  votes_.MergeFrom(from.votes_);
  asset_.MergeFrom(from.asset_);
  frozen_.MergeFrom(from.frozen_);
  frozen_supply_.MergeFrom(from.frozen_supply_);
  latest_asset_operation_time_.MergeFrom(from.latest_asset_operation_time_);
  free_asset_net_usage_.MergeFrom(from.free_asset_net_usage_);
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.asset_issued_name().size() > 0) {

    asset_issued_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_issued_name_);
  }
  if (from.balance() != 0) {
    set_balance(from.balance());
  }
  if (from.net_usage() != 0) {
    set_net_usage(from.net_usage());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.latest_opration_time() != 0) {
    set_latest_opration_time(from.latest_opration_time());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.is_witness() != 0) {
    set_is_witness(from.is_witness());
  }
  if (from.is_committee() != 0) {
    set_is_committee(from.is_committee());
  }
  if (from.allowance() != 0) {
    set_allowance(from.allowance());
  }
  if (from.latest_withdraw_time() != 0) {
    set_latest_withdraw_time(from.latest_withdraw_time());
  }
  if (from.free_net_usage() != 0) {
    set_free_net_usage(from.free_net_usage());
  }
  if (from.latest_consume_time() != 0) {
    set_latest_consume_time(from.latest_consume_time());
  }
  if (from.latest_consume_free_time() != 0) {
    set_latest_consume_free_time(from.latest_consume_free_time());
  }
}

void Account::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Account::IsInitialized() const {
  return true;
}

void Account::Swap(Account* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Account::InternalSwap(Account* other) {
  using std::swap;
  votes_.InternalSwap(&other->votes_);
  asset_.Swap(&other->asset_);
  frozen_.InternalSwap(&other->frozen_);
  frozen_supply_.InternalSwap(&other->frozen_supply_);
  latest_asset_operation_time_.Swap(&other->latest_asset_operation_time_);
  free_asset_net_usage_.Swap(&other->free_asset_net_usage_);
  account_name_.Swap(&other->account_name_);
  address_.Swap(&other->address_);
  code_.Swap(&other->code_);
  asset_issued_name_.Swap(&other->asset_issued_name_);
  swap(balance_, other->balance_);
  swap(net_usage_, other->net_usage_);
  swap(create_time_, other->create_time_);
  swap(latest_opration_time_, other->latest_opration_time_);
  swap(type_, other->type_);
  swap(is_witness_, other->is_witness_);
  swap(is_committee_, other->is_committee_);
  swap(allowance_, other->allowance_);
  swap(latest_withdraw_time_, other->latest_withdraw_time_);
  swap(free_net_usage_, other->free_net_usage_);
  swap(latest_consume_time_, other->latest_consume_time_);
  swap(latest_consume_free_time_, other->latest_consume_free_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Account::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Account

// bytes account_name = 1;
void Account::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Account::account_name() const {
  // @@protoc_insertion_point(field_get:protocol.Account.account_name)
  return account_name_.GetNoArena();
}
void Account::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Account.account_name)
}
#if LANG_CXX11
void Account::set_account_name(::std::string&& value) {
  
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Account.account_name)
}
#endif
void Account::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Account.account_name)
}
void Account::set_account_name(const void* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Account.account_name)
}
::std::string* Account::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Account.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Account::release_account_name() {
  // @@protoc_insertion_point(field_release:protocol.Account.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Account::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.Account.account_name)
}

// .protocol.AccountType type = 2;
void Account::clear_type() {
  type_ = 0;
}
::protocol::AccountType Account::type() const {
  // @@protoc_insertion_point(field_get:protocol.Account.type)
  return static_cast< ::protocol::AccountType >(type_);
}
void Account::set_type(::protocol::AccountType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.type)
}

// bytes address = 3;
void Account::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Account::address() const {
  // @@protoc_insertion_point(field_get:protocol.Account.address)
  return address_.GetNoArena();
}
void Account::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Account.address)
}
#if LANG_CXX11
void Account::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Account.address)
}
#endif
void Account::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Account.address)
}
void Account::set_address(const void* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Account.address)
}
::std::string* Account::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Account.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Account::release_address() {
  // @@protoc_insertion_point(field_release:protocol.Account.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Account::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:protocol.Account.address)
}

// int64 balance = 4;
void Account::clear_balance() {
  balance_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Account::balance() const {
  // @@protoc_insertion_point(field_get:protocol.Account.balance)
  return balance_;
}
void Account::set_balance(::google::protobuf::int64 value) {
  
  balance_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.balance)
}

// repeated .protocol.Vote votes = 5;
int Account::votes_size() const {
  return votes_.size();
}
void Account::clear_votes() {
  votes_.Clear();
}
const ::protocol::Vote& Account::votes(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Account.votes)
  return votes_.Get(index);
}
::protocol::Vote* Account::mutable_votes(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Account.votes)
  return votes_.Mutable(index);
}
::protocol::Vote* Account::add_votes() {
  // @@protoc_insertion_point(field_add:protocol.Account.votes)
  return votes_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Vote >*
Account::mutable_votes() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Account.votes)
  return &votes_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Vote >&
Account::votes() const {
  // @@protoc_insertion_point(field_list:protocol.Account.votes)
  return votes_;
}

// map<string, int64> asset = 6;
int Account::asset_size() const {
  return asset_.size();
}
void Account::clear_asset() {
  asset_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
Account::asset() const {
  // @@protoc_insertion_point(field_map:protocol.Account.asset)
  return asset_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
Account::mutable_asset() {
  // @@protoc_insertion_point(field_mutable_map:protocol.Account.asset)
  return asset_.MutableMap();
}

// repeated .protocol.Account.Frozen frozen = 7;
int Account::frozen_size() const {
  return frozen_.size();
}
void Account::clear_frozen() {
  frozen_.Clear();
}
const ::protocol::Account_Frozen& Account::frozen(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Account.frozen)
  return frozen_.Get(index);
}
::protocol::Account_Frozen* Account::mutable_frozen(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Account.frozen)
  return frozen_.Mutable(index);
}
::protocol::Account_Frozen* Account::add_frozen() {
  // @@protoc_insertion_point(field_add:protocol.Account.frozen)
  return frozen_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Account_Frozen >*
Account::mutable_frozen() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Account.frozen)
  return &frozen_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Account_Frozen >&
Account::frozen() const {
  // @@protoc_insertion_point(field_list:protocol.Account.frozen)
  return frozen_;
}

// int64 net_usage = 8;
void Account::clear_net_usage() {
  net_usage_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Account::net_usage() const {
  // @@protoc_insertion_point(field_get:protocol.Account.net_usage)
  return net_usage_;
}
void Account::set_net_usage(::google::protobuf::int64 value) {
  
  net_usage_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.net_usage)
}

// int64 create_time = 9;
void Account::clear_create_time() {
  create_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Account::create_time() const {
  // @@protoc_insertion_point(field_get:protocol.Account.create_time)
  return create_time_;
}
void Account::set_create_time(::google::protobuf::int64 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.create_time)
}

// int64 latest_opration_time = 10;
void Account::clear_latest_opration_time() {
  latest_opration_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Account::latest_opration_time() const {
  // @@protoc_insertion_point(field_get:protocol.Account.latest_opration_time)
  return latest_opration_time_;
}
void Account::set_latest_opration_time(::google::protobuf::int64 value) {
  
  latest_opration_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.latest_opration_time)
}

// int64 allowance = 11;
void Account::clear_allowance() {
  allowance_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Account::allowance() const {
  // @@protoc_insertion_point(field_get:protocol.Account.allowance)
  return allowance_;
}
void Account::set_allowance(::google::protobuf::int64 value) {
  
  allowance_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.allowance)
}

// int64 latest_withdraw_time = 12;
void Account::clear_latest_withdraw_time() {
  latest_withdraw_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Account::latest_withdraw_time() const {
  // @@protoc_insertion_point(field_get:protocol.Account.latest_withdraw_time)
  return latest_withdraw_time_;
}
void Account::set_latest_withdraw_time(::google::protobuf::int64 value) {
  
  latest_withdraw_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.latest_withdraw_time)
}

// bytes code = 13;
void Account::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Account::code() const {
  // @@protoc_insertion_point(field_get:protocol.Account.code)
  return code_.GetNoArena();
}
void Account::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Account.code)
}
#if LANG_CXX11
void Account::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Account.code)
}
#endif
void Account::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Account.code)
}
void Account::set_code(const void* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Account.code)
}
::std::string* Account::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Account.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Account::release_code() {
  // @@protoc_insertion_point(field_release:protocol.Account.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Account::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:protocol.Account.code)
}

// bool is_witness = 14;
void Account::clear_is_witness() {
  is_witness_ = false;
}
bool Account::is_witness() const {
  // @@protoc_insertion_point(field_get:protocol.Account.is_witness)
  return is_witness_;
}
void Account::set_is_witness(bool value) {
  
  is_witness_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.is_witness)
}

// bool is_committee = 15;
void Account::clear_is_committee() {
  is_committee_ = false;
}
bool Account::is_committee() const {
  // @@protoc_insertion_point(field_get:protocol.Account.is_committee)
  return is_committee_;
}
void Account::set_is_committee(bool value) {
  
  is_committee_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.is_committee)
}

// repeated .protocol.Account.Frozen frozen_supply = 16;
int Account::frozen_supply_size() const {
  return frozen_supply_.size();
}
void Account::clear_frozen_supply() {
  frozen_supply_.Clear();
}
const ::protocol::Account_Frozen& Account::frozen_supply(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Account.frozen_supply)
  return frozen_supply_.Get(index);
}
::protocol::Account_Frozen* Account::mutable_frozen_supply(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Account.frozen_supply)
  return frozen_supply_.Mutable(index);
}
::protocol::Account_Frozen* Account::add_frozen_supply() {
  // @@protoc_insertion_point(field_add:protocol.Account.frozen_supply)
  return frozen_supply_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Account_Frozen >*
Account::mutable_frozen_supply() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Account.frozen_supply)
  return &frozen_supply_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Account_Frozen >&
Account::frozen_supply() const {
  // @@protoc_insertion_point(field_list:protocol.Account.frozen_supply)
  return frozen_supply_;
}

// bytes asset_issued_name = 17;
void Account::clear_asset_issued_name() {
  asset_issued_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Account::asset_issued_name() const {
  // @@protoc_insertion_point(field_get:protocol.Account.asset_issued_name)
  return asset_issued_name_.GetNoArena();
}
void Account::set_asset_issued_name(const ::std::string& value) {
  
  asset_issued_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Account.asset_issued_name)
}
#if LANG_CXX11
void Account::set_asset_issued_name(::std::string&& value) {
  
  asset_issued_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Account.asset_issued_name)
}
#endif
void Account::set_asset_issued_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  asset_issued_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Account.asset_issued_name)
}
void Account::set_asset_issued_name(const void* value, size_t size) {
  
  asset_issued_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Account.asset_issued_name)
}
::std::string* Account::mutable_asset_issued_name() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Account.asset_issued_name)
  return asset_issued_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Account::release_asset_issued_name() {
  // @@protoc_insertion_point(field_release:protocol.Account.asset_issued_name)
  
  return asset_issued_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Account::set_allocated_asset_issued_name(::std::string* asset_issued_name) {
  if (asset_issued_name != NULL) {
    
  } else {
    
  }
  asset_issued_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asset_issued_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.Account.asset_issued_name)
}

// map<string, int64> latest_asset_operation_time = 18;
int Account::latest_asset_operation_time_size() const {
  return latest_asset_operation_time_.size();
}
void Account::clear_latest_asset_operation_time() {
  latest_asset_operation_time_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
Account::latest_asset_operation_time() const {
  // @@protoc_insertion_point(field_map:protocol.Account.latest_asset_operation_time)
  return latest_asset_operation_time_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
Account::mutable_latest_asset_operation_time() {
  // @@protoc_insertion_point(field_mutable_map:protocol.Account.latest_asset_operation_time)
  return latest_asset_operation_time_.MutableMap();
}

// int64 free_net_usage = 19;
void Account::clear_free_net_usage() {
  free_net_usage_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Account::free_net_usage() const {
  // @@protoc_insertion_point(field_get:protocol.Account.free_net_usage)
  return free_net_usage_;
}
void Account::set_free_net_usage(::google::protobuf::int64 value) {
  
  free_net_usage_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.free_net_usage)
}

// map<string, int64> free_asset_net_usage = 20;
int Account::free_asset_net_usage_size() const {
  return free_asset_net_usage_.size();
}
void Account::clear_free_asset_net_usage() {
  free_asset_net_usage_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
Account::free_asset_net_usage() const {
  // @@protoc_insertion_point(field_map:protocol.Account.free_asset_net_usage)
  return free_asset_net_usage_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
Account::mutable_free_asset_net_usage() {
  // @@protoc_insertion_point(field_mutable_map:protocol.Account.free_asset_net_usage)
  return free_asset_net_usage_.MutableMap();
}

// int64 latest_consume_time = 21;
void Account::clear_latest_consume_time() {
  latest_consume_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Account::latest_consume_time() const {
  // @@protoc_insertion_point(field_get:protocol.Account.latest_consume_time)
  return latest_consume_time_;
}
void Account::set_latest_consume_time(::google::protobuf::int64 value) {
  
  latest_consume_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.latest_consume_time)
}

// int64 latest_consume_free_time = 22;
void Account::clear_latest_consume_free_time() {
  latest_consume_free_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Account::latest_consume_free_time() const {
  // @@protoc_insertion_point(field_get:protocol.Account.latest_consume_free_time)
  return latest_consume_free_time_;
}
void Account::set_latest_consume_free_time(::google::protobuf::int64 value) {
  
  latest_consume_free_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.Account.latest_consume_free_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int acuthrity::kAccountFieldNumber;
const int acuthrity::kPermissionNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

acuthrity::acuthrity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.acuthrity)
}
acuthrity::acuthrity(const acuthrity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  permission_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.permission_name().size() > 0) {
    permission_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.permission_name_);
  }
  if (from.has_account()) {
    account_ = new ::protocol::AccountId(*from.account_);
  } else {
    account_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.acuthrity)
}

void acuthrity::SharedCtor() {
  permission_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_ = NULL;
  _cached_size_ = 0;
}

acuthrity::~acuthrity() {
  // @@protoc_insertion_point(destructor:protocol.acuthrity)
  SharedDtor();
}

void acuthrity::SharedDtor() {
  permission_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete account_;
}

void acuthrity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* acuthrity::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const acuthrity& acuthrity::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

acuthrity* acuthrity::New(::google::protobuf::Arena* arena) const {
  acuthrity* n = new acuthrity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void acuthrity::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.acuthrity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permission_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && account_ != NULL) {
    delete account_;
  }
  account_ = NULL;
  _internal_metadata_.Clear();
}

bool acuthrity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.acuthrity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.AccountId account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes permission_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_permission_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.acuthrity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.acuthrity)
  return false;
#undef DO_
}

void acuthrity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.acuthrity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.AccountId account = 1;
  if (this->has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->account_, output);
  }

  // bytes permission_name = 2;
  if (this->permission_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->permission_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.acuthrity)
}

::google::protobuf::uint8* acuthrity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.acuthrity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.AccountId account = 1;
  if (this->has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->account_, deterministic, target);
  }

  // bytes permission_name = 2;
  if (this->permission_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->permission_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.acuthrity)
  return target;
}

size_t acuthrity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.acuthrity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes permission_name = 2;
  if (this->permission_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->permission_name());
  }

  // .protocol.AccountId account = 1;
  if (this->has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->account_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void acuthrity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.acuthrity)
  GOOGLE_DCHECK_NE(&from, this);
  const acuthrity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const acuthrity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.acuthrity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.acuthrity)
    MergeFrom(*source);
  }
}

void acuthrity::MergeFrom(const acuthrity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.acuthrity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.permission_name().size() > 0) {

    permission_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.permission_name_);
  }
  if (from.has_account()) {
    mutable_account()->::protocol::AccountId::MergeFrom(from.account());
  }
}

void acuthrity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.acuthrity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void acuthrity::CopyFrom(const acuthrity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.acuthrity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool acuthrity::IsInitialized() const {
  return true;
}

void acuthrity::Swap(acuthrity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void acuthrity::InternalSwap(acuthrity* other) {
  using std::swap;
  permission_name_.Swap(&other->permission_name_);
  swap(account_, other->account_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata acuthrity::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// acuthrity

// .protocol.AccountId account = 1;
bool acuthrity::has_account() const {
  return this != internal_default_instance() && account_ != NULL;
}
void acuthrity::clear_account() {
  if (GetArenaNoVirtual() == NULL && account_ != NULL) delete account_;
  account_ = NULL;
}
const ::protocol::AccountId& acuthrity::account() const {
  const ::protocol::AccountId* p = account_;
  // @@protoc_insertion_point(field_get:protocol.acuthrity.account)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::AccountId*>(
      &::protocol::_AccountId_default_instance_);
}
::protocol::AccountId* acuthrity::mutable_account() {
  
  if (account_ == NULL) {
    account_ = new ::protocol::AccountId;
  }
  // @@protoc_insertion_point(field_mutable:protocol.acuthrity.account)
  return account_;
}
::protocol::AccountId* acuthrity::release_account() {
  // @@protoc_insertion_point(field_release:protocol.acuthrity.account)
  
  ::protocol::AccountId* temp = account_;
  account_ = NULL;
  return temp;
}
void acuthrity::set_allocated_account(::protocol::AccountId* account) {
  delete account_;
  account_ = account;
  if (account) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.acuthrity.account)
}

// bytes permission_name = 2;
void acuthrity::clear_permission_name() {
  permission_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& acuthrity::permission_name() const {
  // @@protoc_insertion_point(field_get:protocol.acuthrity.permission_name)
  return permission_name_.GetNoArena();
}
void acuthrity::set_permission_name(const ::std::string& value) {
  
  permission_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.acuthrity.permission_name)
}
#if LANG_CXX11
void acuthrity::set_permission_name(::std::string&& value) {
  
  permission_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.acuthrity.permission_name)
}
#endif
void acuthrity::set_permission_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  permission_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.acuthrity.permission_name)
}
void acuthrity::set_permission_name(const void* value, size_t size) {
  
  permission_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.acuthrity.permission_name)
}
::std::string* acuthrity::mutable_permission_name() {
  
  // @@protoc_insertion_point(field_mutable:protocol.acuthrity.permission_name)
  return permission_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* acuthrity::release_permission_name() {
  // @@protoc_insertion_point(field_release:protocol.acuthrity.permission_name)
  
  return permission_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void acuthrity::set_allocated_permission_name(::std::string* permission_name) {
  if (permission_name != NULL) {
    
  } else {
    
  }
  permission_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), permission_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.acuthrity.permission_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int permision::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

permision::permision()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.permision)
}
permision::permision(const permision& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_account()) {
    account_ = new ::protocol::AccountId(*from.account_);
  } else {
    account_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.permision)
}

void permision::SharedCtor() {
  account_ = NULL;
  _cached_size_ = 0;
}

permision::~permision() {
  // @@protoc_insertion_point(destructor:protocol.permision)
  SharedDtor();
}

void permision::SharedDtor() {
  if (this != internal_default_instance()) delete account_;
}

void permision::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* permision::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const permision& permision::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

permision* permision::New(::google::protobuf::Arena* arena) const {
  permision* n = new permision;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void permision::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.permision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && account_ != NULL) {
    delete account_;
  }
  account_ = NULL;
  _internal_metadata_.Clear();
}

bool permision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.permision)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.AccountId account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.permision)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.permision)
  return false;
#undef DO_
}

void permision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.permision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.AccountId account = 1;
  if (this->has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->account_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.permision)
}

::google::protobuf::uint8* permision::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.permision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.AccountId account = 1;
  if (this->has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->account_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.permision)
  return target;
}

size_t permision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.permision)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .protocol.AccountId account = 1;
  if (this->has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->account_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void permision::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.permision)
  GOOGLE_DCHECK_NE(&from, this);
  const permision* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const permision>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.permision)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.permision)
    MergeFrom(*source);
  }
}

void permision::MergeFrom(const permision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.permision)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account()) {
    mutable_account()->::protocol::AccountId::MergeFrom(from.account());
  }
}

void permision::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.permision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void permision::CopyFrom(const permision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.permision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool permision::IsInitialized() const {
  return true;
}

void permision::Swap(permision* other) {
  if (other == this) return;
  InternalSwap(other);
}
void permision::InternalSwap(permision* other) {
  using std::swap;
  swap(account_, other->account_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata permision::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// permision

// .protocol.AccountId account = 1;
bool permision::has_account() const {
  return this != internal_default_instance() && account_ != NULL;
}
void permision::clear_account() {
  if (GetArenaNoVirtual() == NULL && account_ != NULL) delete account_;
  account_ = NULL;
}
const ::protocol::AccountId& permision::account() const {
  const ::protocol::AccountId* p = account_;
  // @@protoc_insertion_point(field_get:protocol.permision.account)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::AccountId*>(
      &::protocol::_AccountId_default_instance_);
}
::protocol::AccountId* permision::mutable_account() {
  
  if (account_ == NULL) {
    account_ = new ::protocol::AccountId;
  }
  // @@protoc_insertion_point(field_mutable:protocol.permision.account)
  return account_;
}
::protocol::AccountId* permision::release_account() {
  // @@protoc_insertion_point(field_release:protocol.permision.account)
  
  ::protocol::AccountId* temp = account_;
  account_ = NULL;
  return temp;
}
void permision::set_allocated_account(::protocol::AccountId* account) {
  delete account_;
  account_ = account;
  if (account) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.permision.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Witness::kAddressFieldNumber;
const int Witness::kVoteCountFieldNumber;
const int Witness::kPubKeyFieldNumber;
const int Witness::kUrlFieldNumber;
const int Witness::kTotalProducedFieldNumber;
const int Witness::kTotalMissedFieldNumber;
const int Witness::kLatestBlockNumFieldNumber;
const int Witness::kLatestSlotNumFieldNumber;
const int Witness::kIsJobsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Witness::Witness()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Witness)
}
Witness::Witness(const Witness& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubkey().size() > 0) {
    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&votecount_, &from.votecount_,
    static_cast<size_t>(reinterpret_cast<char*>(&isjobs_) -
    reinterpret_cast<char*>(&votecount_)) + sizeof(isjobs_));
  // @@protoc_insertion_point(copy_constructor:protocol.Witness)
}

void Witness::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&votecount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isjobs_) -
      reinterpret_cast<char*>(&votecount_)) + sizeof(isjobs_));
  _cached_size_ = 0;
}

Witness::~Witness() {
  // @@protoc_insertion_point(destructor:protocol.Witness)
  SharedDtor();
}

void Witness::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Witness::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Witness::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Witness& Witness::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Witness* Witness::New(::google::protobuf::Arena* arena) const {
  Witness* n = new Witness;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Witness::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Witness)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&votecount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isjobs_) -
      reinterpret_cast<char*>(&votecount_)) + sizeof(isjobs_));
  _internal_metadata_.Clear();
}

bool Witness::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Witness)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 voteCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &votecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes pubKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.Witness.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 totalProduced = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalproduced_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 totalMissed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalmissed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 latestBlockNum = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &latestblocknum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 latestSlotNum = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &latestslotnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isJobs = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isjobs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Witness)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Witness)
  return false;
#undef DO_
}

void Witness::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Witness)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->address(), output);
  }

  // int64 voteCount = 2;
  if (this->votecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->votecount(), output);
  }

  // bytes pubKey = 3;
  if (this->pubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->pubkey(), output);
  }

  // string url = 4;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.Witness.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->url(), output);
  }

  // int64 totalProduced = 5;
  if (this->totalproduced() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->totalproduced(), output);
  }

  // int64 totalMissed = 6;
  if (this->totalmissed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->totalmissed(), output);
  }

  // int64 latestBlockNum = 7;
  if (this->latestblocknum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->latestblocknum(), output);
  }

  // int64 latestSlotNum = 8;
  if (this->latestslotnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->latestslotnum(), output);
  }

  // bool isJobs = 9;
  if (this->isjobs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isjobs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Witness)
}

::google::protobuf::uint8* Witness::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Witness)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes address = 1;
  if (this->address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->address(), target);
  }

  // int64 voteCount = 2;
  if (this->votecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->votecount(), target);
  }

  // bytes pubKey = 3;
  if (this->pubkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->pubkey(), target);
  }

  // string url = 4;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.Witness.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->url(), target);
  }

  // int64 totalProduced = 5;
  if (this->totalproduced() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->totalproduced(), target);
  }

  // int64 totalMissed = 6;
  if (this->totalmissed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->totalmissed(), target);
  }

  // int64 latestBlockNum = 7;
  if (this->latestblocknum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->latestblocknum(), target);
  }

  // int64 latestSlotNum = 8;
  if (this->latestslotnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->latestslotnum(), target);
  }

  // bool isJobs = 9;
  if (this->isjobs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->isjobs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Witness)
  return target;
}

size_t Witness::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Witness)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  // bytes pubKey = 3;
  if (this->pubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pubkey());
  }

  // string url = 4;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // int64 voteCount = 2;
  if (this->votecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->votecount());
  }

  // int64 totalProduced = 5;
  if (this->totalproduced() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalproduced());
  }

  // int64 totalMissed = 6;
  if (this->totalmissed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalmissed());
  }

  // int64 latestBlockNum = 7;
  if (this->latestblocknum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->latestblocknum());
  }

  // int64 latestSlotNum = 8;
  if (this->latestslotnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->latestslotnum());
  }

  // bool isJobs = 9;
  if (this->isjobs() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Witness::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Witness)
  GOOGLE_DCHECK_NE(&from, this);
  const Witness* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Witness>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Witness)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Witness)
    MergeFrom(*source);
  }
}

void Witness::MergeFrom(const Witness& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Witness)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.pubkey().size() > 0) {

    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.votecount() != 0) {
    set_votecount(from.votecount());
  }
  if (from.totalproduced() != 0) {
    set_totalproduced(from.totalproduced());
  }
  if (from.totalmissed() != 0) {
    set_totalmissed(from.totalmissed());
  }
  if (from.latestblocknum() != 0) {
    set_latestblocknum(from.latestblocknum());
  }
  if (from.latestslotnum() != 0) {
    set_latestslotnum(from.latestslotnum());
  }
  if (from.isjobs() != 0) {
    set_isjobs(from.isjobs());
  }
}

void Witness::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Witness)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Witness::CopyFrom(const Witness& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Witness)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Witness::IsInitialized() const {
  return true;
}

void Witness::Swap(Witness* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Witness::InternalSwap(Witness* other) {
  using std::swap;
  address_.Swap(&other->address_);
  pubkey_.Swap(&other->pubkey_);
  url_.Swap(&other->url_);
  swap(votecount_, other->votecount_);
  swap(totalproduced_, other->totalproduced_);
  swap(totalmissed_, other->totalmissed_);
  swap(latestblocknum_, other->latestblocknum_);
  swap(latestslotnum_, other->latestslotnum_);
  swap(isjobs_, other->isjobs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Witness::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Witness

// bytes address = 1;
void Witness::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Witness::address() const {
  // @@protoc_insertion_point(field_get:protocol.Witness.address)
  return address_.GetNoArena();
}
void Witness::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Witness.address)
}
#if LANG_CXX11
void Witness::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Witness.address)
}
#endif
void Witness::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Witness.address)
}
void Witness::set_address(const void* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Witness.address)
}
::std::string* Witness::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Witness.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Witness::release_address() {
  // @@protoc_insertion_point(field_release:protocol.Witness.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Witness::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:protocol.Witness.address)
}

// int64 voteCount = 2;
void Witness::clear_votecount() {
  votecount_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Witness::votecount() const {
  // @@protoc_insertion_point(field_get:protocol.Witness.voteCount)
  return votecount_;
}
void Witness::set_votecount(::google::protobuf::int64 value) {
  
  votecount_ = value;
  // @@protoc_insertion_point(field_set:protocol.Witness.voteCount)
}

// bytes pubKey = 3;
void Witness::clear_pubkey() {
  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Witness::pubkey() const {
  // @@protoc_insertion_point(field_get:protocol.Witness.pubKey)
  return pubkey_.GetNoArena();
}
void Witness::set_pubkey(const ::std::string& value) {
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Witness.pubKey)
}
#if LANG_CXX11
void Witness::set_pubkey(::std::string&& value) {
  
  pubkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Witness.pubKey)
}
#endif
void Witness::set_pubkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Witness.pubKey)
}
void Witness::set_pubkey(const void* value, size_t size) {
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Witness.pubKey)
}
::std::string* Witness::mutable_pubkey() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Witness.pubKey)
  return pubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Witness::release_pubkey() {
  // @@protoc_insertion_point(field_release:protocol.Witness.pubKey)
  
  return pubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Witness::set_allocated_pubkey(::std::string* pubkey) {
  if (pubkey != NULL) {
    
  } else {
    
  }
  pubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubkey);
  // @@protoc_insertion_point(field_set_allocated:protocol.Witness.pubKey)
}

// string url = 4;
void Witness::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Witness::url() const {
  // @@protoc_insertion_point(field_get:protocol.Witness.url)
  return url_.GetNoArena();
}
void Witness::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Witness.url)
}
#if LANG_CXX11
void Witness::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Witness.url)
}
#endif
void Witness::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Witness.url)
}
void Witness::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Witness.url)
}
::std::string* Witness::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Witness.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Witness::release_url() {
  // @@protoc_insertion_point(field_release:protocol.Witness.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Witness::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:protocol.Witness.url)
}

// int64 totalProduced = 5;
void Witness::clear_totalproduced() {
  totalproduced_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Witness::totalproduced() const {
  // @@protoc_insertion_point(field_get:protocol.Witness.totalProduced)
  return totalproduced_;
}
void Witness::set_totalproduced(::google::protobuf::int64 value) {
  
  totalproduced_ = value;
  // @@protoc_insertion_point(field_set:protocol.Witness.totalProduced)
}

// int64 totalMissed = 6;
void Witness::clear_totalmissed() {
  totalmissed_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Witness::totalmissed() const {
  // @@protoc_insertion_point(field_get:protocol.Witness.totalMissed)
  return totalmissed_;
}
void Witness::set_totalmissed(::google::protobuf::int64 value) {
  
  totalmissed_ = value;
  // @@protoc_insertion_point(field_set:protocol.Witness.totalMissed)
}

// int64 latestBlockNum = 7;
void Witness::clear_latestblocknum() {
  latestblocknum_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Witness::latestblocknum() const {
  // @@protoc_insertion_point(field_get:protocol.Witness.latestBlockNum)
  return latestblocknum_;
}
void Witness::set_latestblocknum(::google::protobuf::int64 value) {
  
  latestblocknum_ = value;
  // @@protoc_insertion_point(field_set:protocol.Witness.latestBlockNum)
}

// int64 latestSlotNum = 8;
void Witness::clear_latestslotnum() {
  latestslotnum_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Witness::latestslotnum() const {
  // @@protoc_insertion_point(field_get:protocol.Witness.latestSlotNum)
  return latestslotnum_;
}
void Witness::set_latestslotnum(::google::protobuf::int64 value) {
  
  latestslotnum_ = value;
  // @@protoc_insertion_point(field_set:protocol.Witness.latestSlotNum)
}

// bool isJobs = 9;
void Witness::clear_isjobs() {
  isjobs_ = false;
}
bool Witness::isjobs() const {
  // @@protoc_insertion_point(field_get:protocol.Witness.isJobs)
  return isjobs_;
}
void Witness::set_isjobs(bool value) {
  
  isjobs_ = value;
  // @@protoc_insertion_point(field_set:protocol.Witness.isJobs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Votes::kAddressFieldNumber;
const int Votes::kOldVotesFieldNumber;
const int Votes::kNewVotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Votes::Votes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Votes)
}
Votes::Votes(const Votes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      old_votes_(from.old_votes_),
      new_votes_(from.new_votes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.Votes)
}

void Votes::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Votes::~Votes() {
  // @@protoc_insertion_point(destructor:protocol.Votes)
  SharedDtor();
}

void Votes::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Votes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Votes::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Votes& Votes::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Votes* Votes::New(::google::protobuf::Arena* arena) const {
  Votes* n = new Votes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Votes::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Votes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  old_votes_.Clear();
  new_votes_.Clear();
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Votes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Votes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.Vote old_votes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_old_votes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.Vote new_votes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_new_votes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Votes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Votes)
  return false;
#undef DO_
}

void Votes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Votes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->address(), output);
  }

  // repeated .protocol.Vote old_votes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->old_votes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->old_votes(static_cast<int>(i)), output);
  }

  // repeated .protocol.Vote new_votes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->new_votes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->new_votes(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Votes)
}

::google::protobuf::uint8* Votes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Votes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes address = 1;
  if (this->address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->address(), target);
  }

  // repeated .protocol.Vote old_votes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->old_votes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->old_votes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .protocol.Vote new_votes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->new_votes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->new_votes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Votes)
  return target;
}

size_t Votes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Votes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.Vote old_votes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->old_votes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->old_votes(static_cast<int>(i)));
    }
  }

  // repeated .protocol.Vote new_votes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->new_votes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->new_votes(static_cast<int>(i)));
    }
  }

  // bytes address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Votes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Votes)
  GOOGLE_DCHECK_NE(&from, this);
  const Votes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Votes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Votes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Votes)
    MergeFrom(*source);
  }
}

void Votes::MergeFrom(const Votes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Votes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  old_votes_.MergeFrom(from.old_votes_);
  new_votes_.MergeFrom(from.new_votes_);
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void Votes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Votes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Votes::CopyFrom(const Votes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Votes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Votes::IsInitialized() const {
  return true;
}

void Votes::Swap(Votes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Votes::InternalSwap(Votes* other) {
  using std::swap;
  old_votes_.InternalSwap(&other->old_votes_);
  new_votes_.InternalSwap(&other->new_votes_);
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Votes::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Votes

// bytes address = 1;
void Votes::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Votes::address() const {
  // @@protoc_insertion_point(field_get:protocol.Votes.address)
  return address_.GetNoArena();
}
void Votes::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Votes.address)
}
#if LANG_CXX11
void Votes::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Votes.address)
}
#endif
void Votes::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Votes.address)
}
void Votes::set_address(const void* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Votes.address)
}
::std::string* Votes::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Votes.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Votes::release_address() {
  // @@protoc_insertion_point(field_release:protocol.Votes.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Votes::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:protocol.Votes.address)
}

// repeated .protocol.Vote old_votes = 2;
int Votes::old_votes_size() const {
  return old_votes_.size();
}
void Votes::clear_old_votes() {
  old_votes_.Clear();
}
const ::protocol::Vote& Votes::old_votes(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Votes.old_votes)
  return old_votes_.Get(index);
}
::protocol::Vote* Votes::mutable_old_votes(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Votes.old_votes)
  return old_votes_.Mutable(index);
}
::protocol::Vote* Votes::add_old_votes() {
  // @@protoc_insertion_point(field_add:protocol.Votes.old_votes)
  return old_votes_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Vote >*
Votes::mutable_old_votes() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Votes.old_votes)
  return &old_votes_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Vote >&
Votes::old_votes() const {
  // @@protoc_insertion_point(field_list:protocol.Votes.old_votes)
  return old_votes_;
}

// repeated .protocol.Vote new_votes = 3;
int Votes::new_votes_size() const {
  return new_votes_.size();
}
void Votes::clear_new_votes() {
  new_votes_.Clear();
}
const ::protocol::Vote& Votes::new_votes(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Votes.new_votes)
  return new_votes_.Get(index);
}
::protocol::Vote* Votes::mutable_new_votes(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Votes.new_votes)
  return new_votes_.Mutable(index);
}
::protocol::Vote* Votes::add_new_votes() {
  // @@protoc_insertion_point(field_add:protocol.Votes.new_votes)
  return new_votes_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Vote >*
Votes::mutable_new_votes() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Votes.new_votes)
  return &new_votes_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Vote >&
Votes::new_votes() const {
  // @@protoc_insertion_point(field_list:protocol.Votes.new_votes)
  return new_votes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TXOutput::kValueFieldNumber;
const int TXOutput::kPubKeyHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TXOutput::TXOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.TXOutput)
}
TXOutput::TXOutput(const TXOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pubkeyhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubkeyhash().size() > 0) {
    pubkeyhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkeyhash_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:protocol.TXOutput)
}

void TXOutput::SharedCtor() {
  pubkeyhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TXOutput::~TXOutput() {
  // @@protoc_insertion_point(destructor:protocol.TXOutput)
  SharedDtor();
}

void TXOutput::SharedDtor() {
  pubkeyhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TXOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TXOutput::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TXOutput& TXOutput::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

TXOutput* TXOutput::New(::google::protobuf::Arena* arena) const {
  TXOutput* n = new TXOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TXOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.TXOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pubkeyhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TXOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.TXOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes pubKeyHash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pubkeyhash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.TXOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.TXOutput)
  return false;
#undef DO_
}

void TXOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.TXOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->value(), output);
  }

  // bytes pubKeyHash = 2;
  if (this->pubkeyhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pubkeyhash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.TXOutput)
}

::google::protobuf::uint8* TXOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.TXOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->value(), target);
  }

  // bytes pubKeyHash = 2;
  if (this->pubkeyhash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pubkeyhash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.TXOutput)
  return target;
}

size_t TXOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.TXOutput)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes pubKeyHash = 2;
  if (this->pubkeyhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pubkeyhash());
  }

  // int64 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TXOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.TXOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const TXOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TXOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.TXOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.TXOutput)
    MergeFrom(*source);
  }
}

void TXOutput::MergeFrom(const TXOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.TXOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pubkeyhash().size() > 0) {

    pubkeyhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkeyhash_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void TXOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.TXOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TXOutput::CopyFrom(const TXOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.TXOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TXOutput::IsInitialized() const {
  return true;
}

void TXOutput::Swap(TXOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TXOutput::InternalSwap(TXOutput* other) {
  using std::swap;
  pubkeyhash_.Swap(&other->pubkeyhash_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TXOutput::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TXOutput

// int64 value = 1;
void TXOutput::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TXOutput::value() const {
  // @@protoc_insertion_point(field_get:protocol.TXOutput.value)
  return value_;
}
void TXOutput::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:protocol.TXOutput.value)
}

// bytes pubKeyHash = 2;
void TXOutput::clear_pubkeyhash() {
  pubkeyhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TXOutput::pubkeyhash() const {
  // @@protoc_insertion_point(field_get:protocol.TXOutput.pubKeyHash)
  return pubkeyhash_.GetNoArena();
}
void TXOutput::set_pubkeyhash(const ::std::string& value) {
  
  pubkeyhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.TXOutput.pubKeyHash)
}
#if LANG_CXX11
void TXOutput::set_pubkeyhash(::std::string&& value) {
  
  pubkeyhash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.TXOutput.pubKeyHash)
}
#endif
void TXOutput::set_pubkeyhash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pubkeyhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.TXOutput.pubKeyHash)
}
void TXOutput::set_pubkeyhash(const void* value, size_t size) {
  
  pubkeyhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.TXOutput.pubKeyHash)
}
::std::string* TXOutput::mutable_pubkeyhash() {
  
  // @@protoc_insertion_point(field_mutable:protocol.TXOutput.pubKeyHash)
  return pubkeyhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TXOutput::release_pubkeyhash() {
  // @@protoc_insertion_point(field_release:protocol.TXOutput.pubKeyHash)
  
  return pubkeyhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TXOutput::set_allocated_pubkeyhash(::std::string* pubkeyhash) {
  if (pubkeyhash != NULL) {
    
  } else {
    
  }
  pubkeyhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubkeyhash);
  // @@protoc_insertion_point(field_set_allocated:protocol.TXOutput.pubKeyHash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TXInput_raw::kTxIDFieldNumber;
const int TXInput_raw::kVoutFieldNumber;
const int TXInput_raw::kPubKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TXInput_raw::TXInput_raw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.TXInput.raw)
}
TXInput_raw::TXInput_raw(const TXInput_raw& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.txid().size() > 0) {
    txid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txid_);
  }
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubkey().size() > 0) {
    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  vout_ = from.vout_;
  // @@protoc_insertion_point(copy_constructor:protocol.TXInput.raw)
}

void TXInput_raw::SharedCtor() {
  txid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vout_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TXInput_raw::~TXInput_raw() {
  // @@protoc_insertion_point(destructor:protocol.TXInput.raw)
  SharedDtor();
}

void TXInput_raw::SharedDtor() {
  txid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TXInput_raw::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TXInput_raw::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TXInput_raw& TXInput_raw::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

TXInput_raw* TXInput_raw::New(::google::protobuf::Arena* arena) const {
  TXInput_raw* n = new TXInput_raw;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TXInput_raw::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.TXInput.raw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vout_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TXInput_raw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.TXInput.raw)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes txID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 vout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes pubKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.TXInput.raw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.TXInput.raw)
  return false;
#undef DO_
}

void TXInput_raw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.TXInput.raw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes txID = 1;
  if (this->txid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->txid(), output);
  }

  // int64 vout = 2;
  if (this->vout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->vout(), output);
  }

  // bytes pubKey = 3;
  if (this->pubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->pubkey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.TXInput.raw)
}

::google::protobuf::uint8* TXInput_raw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.TXInput.raw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes txID = 1;
  if (this->txid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->txid(), target);
  }

  // int64 vout = 2;
  if (this->vout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->vout(), target);
  }

  // bytes pubKey = 3;
  if (this->pubkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->pubkey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.TXInput.raw)
  return target;
}

size_t TXInput_raw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.TXInput.raw)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes txID = 1;
  if (this->txid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->txid());
  }

  // bytes pubKey = 3;
  if (this->pubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pubkey());
  }

  // int64 vout = 2;
  if (this->vout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->vout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TXInput_raw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.TXInput.raw)
  GOOGLE_DCHECK_NE(&from, this);
  const TXInput_raw* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TXInput_raw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.TXInput.raw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.TXInput.raw)
    MergeFrom(*source);
  }
}

void TXInput_raw::MergeFrom(const TXInput_raw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.TXInput.raw)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.txid().size() > 0) {

    txid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txid_);
  }
  if (from.pubkey().size() > 0) {

    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  if (from.vout() != 0) {
    set_vout(from.vout());
  }
}

void TXInput_raw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.TXInput.raw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TXInput_raw::CopyFrom(const TXInput_raw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.TXInput.raw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TXInput_raw::IsInitialized() const {
  return true;
}

void TXInput_raw::Swap(TXInput_raw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TXInput_raw::InternalSwap(TXInput_raw* other) {
  using std::swap;
  txid_.Swap(&other->txid_);
  pubkey_.Swap(&other->pubkey_);
  swap(vout_, other->vout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TXInput_raw::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TXInput_raw

// bytes txID = 1;
void TXInput_raw::clear_txid() {
  txid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TXInput_raw::txid() const {
  // @@protoc_insertion_point(field_get:protocol.TXInput.raw.txID)
  return txid_.GetNoArena();
}
void TXInput_raw::set_txid(const ::std::string& value) {
  
  txid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.TXInput.raw.txID)
}
#if LANG_CXX11
void TXInput_raw::set_txid(::std::string&& value) {
  
  txid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.TXInput.raw.txID)
}
#endif
void TXInput_raw::set_txid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  txid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.TXInput.raw.txID)
}
void TXInput_raw::set_txid(const void* value, size_t size) {
  
  txid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.TXInput.raw.txID)
}
::std::string* TXInput_raw::mutable_txid() {
  
  // @@protoc_insertion_point(field_mutable:protocol.TXInput.raw.txID)
  return txid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TXInput_raw::release_txid() {
  // @@protoc_insertion_point(field_release:protocol.TXInput.raw.txID)
  
  return txid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TXInput_raw::set_allocated_txid(::std::string* txid) {
  if (txid != NULL) {
    
  } else {
    
  }
  txid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txid);
  // @@protoc_insertion_point(field_set_allocated:protocol.TXInput.raw.txID)
}

// int64 vout = 2;
void TXInput_raw::clear_vout() {
  vout_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TXInput_raw::vout() const {
  // @@protoc_insertion_point(field_get:protocol.TXInput.raw.vout)
  return vout_;
}
void TXInput_raw::set_vout(::google::protobuf::int64 value) {
  
  vout_ = value;
  // @@protoc_insertion_point(field_set:protocol.TXInput.raw.vout)
}

// bytes pubKey = 3;
void TXInput_raw::clear_pubkey() {
  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TXInput_raw::pubkey() const {
  // @@protoc_insertion_point(field_get:protocol.TXInput.raw.pubKey)
  return pubkey_.GetNoArena();
}
void TXInput_raw::set_pubkey(const ::std::string& value) {
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.TXInput.raw.pubKey)
}
#if LANG_CXX11
void TXInput_raw::set_pubkey(::std::string&& value) {
  
  pubkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.TXInput.raw.pubKey)
}
#endif
void TXInput_raw::set_pubkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.TXInput.raw.pubKey)
}
void TXInput_raw::set_pubkey(const void* value, size_t size) {
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.TXInput.raw.pubKey)
}
::std::string* TXInput_raw::mutable_pubkey() {
  
  // @@protoc_insertion_point(field_mutable:protocol.TXInput.raw.pubKey)
  return pubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TXInput_raw::release_pubkey() {
  // @@protoc_insertion_point(field_release:protocol.TXInput.raw.pubKey)
  
  return pubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TXInput_raw::set_allocated_pubkey(::std::string* pubkey) {
  if (pubkey != NULL) {
    
  } else {
    
  }
  pubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubkey);
  // @@protoc_insertion_point(field_set_allocated:protocol.TXInput.raw.pubKey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TXInput::kRawDataFieldNumber;
const int TXInput::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TXInput::TXInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.TXInput)
}
TXInput::TXInput(const TXInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.has_raw_data()) {
    raw_data_ = new ::protocol::TXInput_raw(*from.raw_data_);
  } else {
    raw_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.TXInput)
}

void TXInput::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_data_ = NULL;
  _cached_size_ = 0;
}

TXInput::~TXInput() {
  // @@protoc_insertion_point(destructor:protocol.TXInput)
  SharedDtor();
}

void TXInput::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete raw_data_;
}

void TXInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TXInput::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TXInput& TXInput::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

TXInput* TXInput::New(::google::protobuf::Arena* arena) const {
  TXInput* n = new TXInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TXInput::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.TXInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && raw_data_ != NULL) {
    delete raw_data_;
  }
  raw_data_ = NULL;
  _internal_metadata_.Clear();
}

bool TXInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.TXInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.TXInput.raw raw_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_raw_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes signature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.TXInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.TXInput)
  return false;
#undef DO_
}

void TXInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.TXInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.TXInput.raw raw_data = 1;
  if (this->has_raw_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->raw_data_, output);
  }

  // bytes signature = 4;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.TXInput)
}

::google::protobuf::uint8* TXInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.TXInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.TXInput.raw raw_data = 1;
  if (this->has_raw_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->raw_data_, deterministic, target);
  }

  // bytes signature = 4;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.TXInput)
  return target;
}

size_t TXInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.TXInput)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes signature = 4;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  // .protocol.TXInput.raw raw_data = 1;
  if (this->has_raw_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->raw_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TXInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.TXInput)
  GOOGLE_DCHECK_NE(&from, this);
  const TXInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TXInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.TXInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.TXInput)
    MergeFrom(*source);
  }
}

void TXInput::MergeFrom(const TXInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.TXInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.has_raw_data()) {
    mutable_raw_data()->::protocol::TXInput_raw::MergeFrom(from.raw_data());
  }
}

void TXInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.TXInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TXInput::CopyFrom(const TXInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.TXInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TXInput::IsInitialized() const {
  return true;
}

void TXInput::Swap(TXInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TXInput::InternalSwap(TXInput* other) {
  using std::swap;
  signature_.Swap(&other->signature_);
  swap(raw_data_, other->raw_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TXInput::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TXInput

// .protocol.TXInput.raw raw_data = 1;
bool TXInput::has_raw_data() const {
  return this != internal_default_instance() && raw_data_ != NULL;
}
void TXInput::clear_raw_data() {
  if (GetArenaNoVirtual() == NULL && raw_data_ != NULL) delete raw_data_;
  raw_data_ = NULL;
}
const ::protocol::TXInput_raw& TXInput::raw_data() const {
  const ::protocol::TXInput_raw* p = raw_data_;
  // @@protoc_insertion_point(field_get:protocol.TXInput.raw_data)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::TXInput_raw*>(
      &::protocol::_TXInput_raw_default_instance_);
}
::protocol::TXInput_raw* TXInput::mutable_raw_data() {
  
  if (raw_data_ == NULL) {
    raw_data_ = new ::protocol::TXInput_raw;
  }
  // @@protoc_insertion_point(field_mutable:protocol.TXInput.raw_data)
  return raw_data_;
}
::protocol::TXInput_raw* TXInput::release_raw_data() {
  // @@protoc_insertion_point(field_release:protocol.TXInput.raw_data)
  
  ::protocol::TXInput_raw* temp = raw_data_;
  raw_data_ = NULL;
  return temp;
}
void TXInput::set_allocated_raw_data(::protocol::TXInput_raw* raw_data) {
  delete raw_data_;
  raw_data_ = raw_data;
  if (raw_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.TXInput.raw_data)
}

// bytes signature = 4;
void TXInput::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TXInput::signature() const {
  // @@protoc_insertion_point(field_get:protocol.TXInput.signature)
  return signature_.GetNoArena();
}
void TXInput::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.TXInput.signature)
}
#if LANG_CXX11
void TXInput::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.TXInput.signature)
}
#endif
void TXInput::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.TXInput.signature)
}
void TXInput::set_signature(const void* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.TXInput.signature)
}
::std::string* TXInput::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:protocol.TXInput.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TXInput::release_signature() {
  // @@protoc_insertion_point(field_release:protocol.TXInput.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TXInput::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:protocol.TXInput.signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TXOutputs::kOutputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TXOutputs::TXOutputs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.TXOutputs)
}
TXOutputs::TXOutputs(const TXOutputs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      outputs_(from.outputs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.TXOutputs)
}

void TXOutputs::SharedCtor() {
  _cached_size_ = 0;
}

TXOutputs::~TXOutputs() {
  // @@protoc_insertion_point(destructor:protocol.TXOutputs)
  SharedDtor();
}

void TXOutputs::SharedDtor() {
}

void TXOutputs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TXOutputs::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TXOutputs& TXOutputs::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

TXOutputs* TXOutputs::New(::google::protobuf::Arena* arena) const {
  TXOutputs* n = new TXOutputs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TXOutputs::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.TXOutputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outputs_.Clear();
  _internal_metadata_.Clear();
}

bool TXOutputs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.TXOutputs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.TXOutput outputs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.TXOutputs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.TXOutputs)
  return false;
#undef DO_
}

void TXOutputs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.TXOutputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.TXOutput outputs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->outputs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.TXOutputs)
}

::google::protobuf::uint8* TXOutputs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.TXOutputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.TXOutput outputs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->outputs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.TXOutputs)
  return target;
}

size_t TXOutputs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.TXOutputs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.TXOutput outputs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->outputs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TXOutputs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.TXOutputs)
  GOOGLE_DCHECK_NE(&from, this);
  const TXOutputs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TXOutputs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.TXOutputs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.TXOutputs)
    MergeFrom(*source);
  }
}

void TXOutputs::MergeFrom(const TXOutputs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.TXOutputs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  outputs_.MergeFrom(from.outputs_);
}

void TXOutputs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.TXOutputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TXOutputs::CopyFrom(const TXOutputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.TXOutputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TXOutputs::IsInitialized() const {
  return true;
}

void TXOutputs::Swap(TXOutputs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TXOutputs::InternalSwap(TXOutputs* other) {
  using std::swap;
  outputs_.InternalSwap(&other->outputs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TXOutputs::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TXOutputs

// repeated .protocol.TXOutput outputs = 1;
int TXOutputs::outputs_size() const {
  return outputs_.size();
}
void TXOutputs::clear_outputs() {
  outputs_.Clear();
}
const ::protocol::TXOutput& TXOutputs::outputs(int index) const {
  // @@protoc_insertion_point(field_get:protocol.TXOutputs.outputs)
  return outputs_.Get(index);
}
::protocol::TXOutput* TXOutputs::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.TXOutputs.outputs)
  return outputs_.Mutable(index);
}
::protocol::TXOutput* TXOutputs::add_outputs() {
  // @@protoc_insertion_point(field_add:protocol.TXOutputs.outputs)
  return outputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::TXOutput >*
TXOutputs::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:protocol.TXOutputs.outputs)
  return &outputs_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::TXOutput >&
TXOutputs::outputs() const {
  // @@protoc_insertion_point(field_list:protocol.TXOutputs.outputs)
  return outputs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transaction_Contract::kTypeFieldNumber;
const int Transaction_Contract::kParameterFieldNumber;
const int Transaction_Contract::kProviderFieldNumber;
const int Transaction_Contract::kContractNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transaction_Contract::Transaction_Contract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Transaction.Contract)
}
Transaction_Contract::Transaction_Contract(const Transaction_Contract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  provider_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.provider().size() > 0) {
    provider_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provider_);
  }
  contractname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contractname().size() > 0) {
    contractname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractname_);
  }
  if (from.has_parameter()) {
    parameter_ = new ::google::protobuf::Any(*from.parameter_);
  } else {
    parameter_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:protocol.Transaction.Contract)
}

void Transaction_Contract::SharedCtor() {
  provider_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&parameter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&parameter_)) + sizeof(type_));
  _cached_size_ = 0;
}

Transaction_Contract::~Transaction_Contract() {
  // @@protoc_insertion_point(destructor:protocol.Transaction.Contract)
  SharedDtor();
}

void Transaction_Contract::SharedDtor() {
  provider_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parameter_;
}

void Transaction_Contract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Transaction_Contract::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transaction_Contract& Transaction_Contract::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Transaction_Contract* Transaction_Contract::New(::google::protobuf::Arena* arena) const {
  Transaction_Contract* n = new Transaction_Contract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Transaction_Contract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Transaction.Contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  provider_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && parameter_ != NULL) {
    delete parameter_;
  }
  parameter_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Transaction_Contract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Transaction.Contract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.Transaction.Contract.ContractType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::protocol::Transaction_Contract_ContractType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any parameter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes provider = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_provider()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ContractName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_contractname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Transaction.Contract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Transaction.Contract)
  return false;
#undef DO_
}

void Transaction_Contract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Transaction.Contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Transaction.Contract.ContractType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .google.protobuf.Any parameter = 2;
  if (this->has_parameter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->parameter_, output);
  }

  // bytes provider = 3;
  if (this->provider().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->provider(), output);
  }

  // bytes ContractName = 4;
  if (this->contractname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->contractname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Transaction.Contract)
}

::google::protobuf::uint8* Transaction_Contract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Transaction.Contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Transaction.Contract.ContractType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .google.protobuf.Any parameter = 2;
  if (this->has_parameter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->parameter_, deterministic, target);
  }

  // bytes provider = 3;
  if (this->provider().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->provider(), target);
  }

  // bytes ContractName = 4;
  if (this->contractname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->contractname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Transaction.Contract)
  return target;
}

size_t Transaction_Contract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Transaction.Contract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes provider = 3;
  if (this->provider().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->provider());
  }

  // bytes ContractName = 4;
  if (this->contractname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->contractname());
  }

  // .google.protobuf.Any parameter = 2;
  if (this->has_parameter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->parameter_);
  }

  // .protocol.Transaction.Contract.ContractType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Transaction_Contract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Transaction.Contract)
  GOOGLE_DCHECK_NE(&from, this);
  const Transaction_Contract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transaction_Contract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Transaction.Contract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Transaction.Contract)
    MergeFrom(*source);
  }
}

void Transaction_Contract::MergeFrom(const Transaction_Contract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Transaction.Contract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.provider().size() > 0) {

    provider_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provider_);
  }
  if (from.contractname().size() > 0) {

    contractname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractname_);
  }
  if (from.has_parameter()) {
    mutable_parameter()->::google::protobuf::Any::MergeFrom(from.parameter());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Transaction_Contract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Transaction.Contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transaction_Contract::CopyFrom(const Transaction_Contract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Transaction.Contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transaction_Contract::IsInitialized() const {
  return true;
}

void Transaction_Contract::Swap(Transaction_Contract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transaction_Contract::InternalSwap(Transaction_Contract* other) {
  using std::swap;
  provider_.Swap(&other->provider_);
  contractname_.Swap(&other->contractname_);
  swap(parameter_, other->parameter_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Transaction_Contract::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Transaction_Contract

// .protocol.Transaction.Contract.ContractType type = 1;
void Transaction_Contract::clear_type() {
  type_ = 0;
}
::protocol::Transaction_Contract_ContractType Transaction_Contract::type() const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.Contract.type)
  return static_cast< ::protocol::Transaction_Contract_ContractType >(type_);
}
void Transaction_Contract::set_type(::protocol::Transaction_Contract_ContractType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.Transaction.Contract.type)
}

// .google.protobuf.Any parameter = 2;
bool Transaction_Contract::has_parameter() const {
  return this != internal_default_instance() && parameter_ != NULL;
}
void Transaction_Contract::clear_parameter() {
  if (GetArenaNoVirtual() == NULL && parameter_ != NULL) delete parameter_;
  parameter_ = NULL;
}
const ::google::protobuf::Any& Transaction_Contract::parameter() const {
  const ::google::protobuf::Any* p = parameter_;
  // @@protoc_insertion_point(field_get:protocol.Transaction.Contract.parameter)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
::google::protobuf::Any* Transaction_Contract::mutable_parameter() {
  
  if (parameter_ == NULL) {
    parameter_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:protocol.Transaction.Contract.parameter)
  return parameter_;
}
::google::protobuf::Any* Transaction_Contract::release_parameter() {
  // @@protoc_insertion_point(field_release:protocol.Transaction.Contract.parameter)
  
  ::google::protobuf::Any* temp = parameter_;
  parameter_ = NULL;
  return temp;
}
void Transaction_Contract::set_allocated_parameter(::google::protobuf::Any* parameter) {
  delete parameter_;
  parameter_ = parameter;
  if (parameter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.Transaction.Contract.parameter)
}

// bytes provider = 3;
void Transaction_Contract::clear_provider() {
  provider_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Transaction_Contract::provider() const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.Contract.provider)
  return provider_.GetNoArena();
}
void Transaction_Contract::set_provider(const ::std::string& value) {
  
  provider_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Transaction.Contract.provider)
}
#if LANG_CXX11
void Transaction_Contract::set_provider(::std::string&& value) {
  
  provider_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Transaction.Contract.provider)
}
#endif
void Transaction_Contract::set_provider(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  provider_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Transaction.Contract.provider)
}
void Transaction_Contract::set_provider(const void* value, size_t size) {
  
  provider_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Transaction.Contract.provider)
}
::std::string* Transaction_Contract::mutable_provider() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Transaction.Contract.provider)
  return provider_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Transaction_Contract::release_provider() {
  // @@protoc_insertion_point(field_release:protocol.Transaction.Contract.provider)
  
  return provider_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Transaction_Contract::set_allocated_provider(::std::string* provider) {
  if (provider != NULL) {
    
  } else {
    
  }
  provider_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), provider);
  // @@protoc_insertion_point(field_set_allocated:protocol.Transaction.Contract.provider)
}

// bytes ContractName = 4;
void Transaction_Contract::clear_contractname() {
  contractname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Transaction_Contract::contractname() const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.Contract.ContractName)
  return contractname_.GetNoArena();
}
void Transaction_Contract::set_contractname(const ::std::string& value) {
  
  contractname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Transaction.Contract.ContractName)
}
#if LANG_CXX11
void Transaction_Contract::set_contractname(::std::string&& value) {
  
  contractname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Transaction.Contract.ContractName)
}
#endif
void Transaction_Contract::set_contractname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contractname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Transaction.Contract.ContractName)
}
void Transaction_Contract::set_contractname(const void* value, size_t size) {
  
  contractname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Transaction.Contract.ContractName)
}
::std::string* Transaction_Contract::mutable_contractname() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Transaction.Contract.ContractName)
  return contractname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Transaction_Contract::release_contractname() {
  // @@protoc_insertion_point(field_release:protocol.Transaction.Contract.ContractName)
  
  return contractname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Transaction_Contract::set_allocated_contractname(::std::string* contractname) {
  if (contractname != NULL) {
    
  } else {
    
  }
  contractname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contractname);
  // @@protoc_insertion_point(field_set_allocated:protocol.Transaction.Contract.ContractName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transaction_Result::kFeeFieldNumber;
const int Transaction_Result::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transaction_Result::Transaction_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Transaction.Result)
}
Transaction_Result::Transaction_Result(const Transaction_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fee_, &from.fee_,
    static_cast<size_t>(reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&fee_)) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:protocol.Transaction.Result)
}

void Transaction_Result::SharedCtor() {
  ::memset(&fee_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&fee_)) + sizeof(ret_));
  _cached_size_ = 0;
}

Transaction_Result::~Transaction_Result() {
  // @@protoc_insertion_point(destructor:protocol.Transaction.Result)
  SharedDtor();
}

void Transaction_Result::SharedDtor() {
}

void Transaction_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Transaction_Result::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transaction_Result& Transaction_Result::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Transaction_Result* Transaction_Result::New(::google::protobuf::Arena* arena) const {
  Transaction_Result* n = new Transaction_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Transaction_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Transaction.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fee_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&fee_)) + sizeof(ret_));
  _internal_metadata_.Clear();
}

bool Transaction_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Transaction.Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 fee = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.Transaction.Result.code ret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::protocol::Transaction_Result_code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Transaction.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Transaction.Result)
  return false;
#undef DO_
}

void Transaction_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Transaction.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 fee = 1;
  if (this->fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fee(), output);
  }

  // .protocol.Transaction.Result.code ret = 2;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Transaction.Result)
}

::google::protobuf::uint8* Transaction_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Transaction.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 fee = 1;
  if (this->fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fee(), target);
  }

  // .protocol.Transaction.Result.code ret = 2;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Transaction.Result)
  return target;
}

size_t Transaction_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Transaction.Result)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 fee = 1;
  if (this->fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fee());
  }

  // .protocol.Transaction.Result.code ret = 2;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Transaction_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Transaction.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const Transaction_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transaction_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Transaction.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Transaction.Result)
    MergeFrom(*source);
  }
}

void Transaction_Result::MergeFrom(const Transaction_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Transaction.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fee() != 0) {
    set_fee(from.fee());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void Transaction_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Transaction.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transaction_Result::CopyFrom(const Transaction_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Transaction.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transaction_Result::IsInitialized() const {
  return true;
}

void Transaction_Result::Swap(Transaction_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transaction_Result::InternalSwap(Transaction_Result* other) {
  using std::swap;
  swap(fee_, other->fee_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Transaction_Result::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Transaction_Result

// int64 fee = 1;
void Transaction_Result::clear_fee() {
  fee_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Transaction_Result::fee() const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.Result.fee)
  return fee_;
}
void Transaction_Result::set_fee(::google::protobuf::int64 value) {
  
  fee_ = value;
  // @@protoc_insertion_point(field_set:protocol.Transaction.Result.fee)
}

// .protocol.Transaction.Result.code ret = 2;
void Transaction_Result::clear_ret() {
  ret_ = 0;
}
::protocol::Transaction_Result_code Transaction_Result::ret() const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.Result.ret)
  return static_cast< ::protocol::Transaction_Result_code >(ret_);
}
void Transaction_Result::set_ret(::protocol::Transaction_Result_code value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:protocol.Transaction.Result.ret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transaction_raw::kRefBlockBytesFieldNumber;
const int Transaction_raw::kRefBlockNumFieldNumber;
const int Transaction_raw::kRefBlockHashFieldNumber;
const int Transaction_raw::kExpirationFieldNumber;
const int Transaction_raw::kAuthsFieldNumber;
const int Transaction_raw::kDataFieldNumber;
const int Transaction_raw::kContractFieldNumber;
const int Transaction_raw::kScriptsFieldNumber;
const int Transaction_raw::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transaction_raw::Transaction_raw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Transaction.raw)
}
Transaction_raw::Transaction_raw(const Transaction_raw& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      auths_(from.auths_),
      contract_(from.contract_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ref_block_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ref_block_bytes().size() > 0) {
    ref_block_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ref_block_bytes_);
  }
  ref_block_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ref_block_hash().size() > 0) {
    ref_block_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ref_block_hash_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  scripts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scripts().size() > 0) {
    scripts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scripts_);
  }
  ::memcpy(&ref_block_num_, &from.ref_block_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&ref_block_num_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:protocol.Transaction.raw)
}

void Transaction_raw::SharedCtor() {
  ref_block_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ref_block_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scripts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ref_block_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&ref_block_num_)) + sizeof(timestamp_));
  _cached_size_ = 0;
}

Transaction_raw::~Transaction_raw() {
  // @@protoc_insertion_point(destructor:protocol.Transaction.raw)
  SharedDtor();
}

void Transaction_raw::SharedDtor() {
  ref_block_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ref_block_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scripts_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Transaction_raw::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Transaction_raw::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transaction_raw& Transaction_raw::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Transaction_raw* Transaction_raw::New(::google::protobuf::Arena* arena) const {
  Transaction_raw* n = new Transaction_raw;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Transaction_raw::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Transaction.raw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auths_.Clear();
  contract_.Clear();
  ref_block_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ref_block_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scripts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ref_block_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&ref_block_num_)) + sizeof(timestamp_));
  _internal_metadata_.Clear();
}

bool Transaction_raw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Transaction.raw)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes ref_block_bytes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ref_block_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ref_block_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ref_block_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ref_block_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ref_block_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 expiration = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expiration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.acuthrity auths = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_auths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.Transaction.Contract contract = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_contract()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes scripts = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_scripts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Transaction.raw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Transaction.raw)
  return false;
#undef DO_
}

void Transaction_raw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Transaction.raw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ref_block_bytes = 1;
  if (this->ref_block_bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ref_block_bytes(), output);
  }

  // int64 ref_block_num = 3;
  if (this->ref_block_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ref_block_num(), output);
  }

  // bytes ref_block_hash = 4;
  if (this->ref_block_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ref_block_hash(), output);
  }

  // int64 expiration = 8;
  if (this->expiration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->expiration(), output);
  }

  // repeated .protocol.acuthrity auths = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auths_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->auths(static_cast<int>(i)), output);
  }

  // bytes data = 10;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->data(), output);
  }

  // repeated .protocol.Transaction.Contract contract = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contract_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->contract(static_cast<int>(i)), output);
  }

  // bytes scripts = 12;
  if (this->scripts().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->scripts(), output);
  }

  // int64 timestamp = 14;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Transaction.raw)
}

::google::protobuf::uint8* Transaction_raw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Transaction.raw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ref_block_bytes = 1;
  if (this->ref_block_bytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ref_block_bytes(), target);
  }

  // int64 ref_block_num = 3;
  if (this->ref_block_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ref_block_num(), target);
  }

  // bytes ref_block_hash = 4;
  if (this->ref_block_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ref_block_hash(), target);
  }

  // int64 expiration = 8;
  if (this->expiration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->expiration(), target);
  }

  // repeated .protocol.acuthrity auths = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auths_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->auths(static_cast<int>(i)), deterministic, target);
  }

  // bytes data = 10;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->data(), target);
  }

  // repeated .protocol.Transaction.Contract contract = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contract_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->contract(static_cast<int>(i)), deterministic, target);
  }

  // bytes scripts = 12;
  if (this->scripts().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->scripts(), target);
  }

  // int64 timestamp = 14;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Transaction.raw)
  return target;
}

size_t Transaction_raw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Transaction.raw)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.acuthrity auths = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->auths_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->auths(static_cast<int>(i)));
    }
  }

  // repeated .protocol.Transaction.Contract contract = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->contract_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->contract(static_cast<int>(i)));
    }
  }

  // bytes ref_block_bytes = 1;
  if (this->ref_block_bytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ref_block_bytes());
  }

  // bytes ref_block_hash = 4;
  if (this->ref_block_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ref_block_hash());
  }

  // bytes data = 10;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // bytes scripts = 12;
  if (this->scripts().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->scripts());
  }

  // int64 ref_block_num = 3;
  if (this->ref_block_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ref_block_num());
  }

  // int64 expiration = 8;
  if (this->expiration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->expiration());
  }

  // int64 timestamp = 14;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Transaction_raw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Transaction.raw)
  GOOGLE_DCHECK_NE(&from, this);
  const Transaction_raw* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transaction_raw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Transaction.raw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Transaction.raw)
    MergeFrom(*source);
  }
}

void Transaction_raw::MergeFrom(const Transaction_raw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Transaction.raw)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  auths_.MergeFrom(from.auths_);
  contract_.MergeFrom(from.contract_);
  if (from.ref_block_bytes().size() > 0) {

    ref_block_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ref_block_bytes_);
  }
  if (from.ref_block_hash().size() > 0) {

    ref_block_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ref_block_hash_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.scripts().size() > 0) {

    scripts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scripts_);
  }
  if (from.ref_block_num() != 0) {
    set_ref_block_num(from.ref_block_num());
  }
  if (from.expiration() != 0) {
    set_expiration(from.expiration());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void Transaction_raw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Transaction.raw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transaction_raw::CopyFrom(const Transaction_raw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Transaction.raw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transaction_raw::IsInitialized() const {
  return true;
}

void Transaction_raw::Swap(Transaction_raw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transaction_raw::InternalSwap(Transaction_raw* other) {
  using std::swap;
  auths_.InternalSwap(&other->auths_);
  contract_.InternalSwap(&other->contract_);
  ref_block_bytes_.Swap(&other->ref_block_bytes_);
  ref_block_hash_.Swap(&other->ref_block_hash_);
  data_.Swap(&other->data_);
  scripts_.Swap(&other->scripts_);
  swap(ref_block_num_, other->ref_block_num_);
  swap(expiration_, other->expiration_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Transaction_raw::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Transaction_raw

// bytes ref_block_bytes = 1;
void Transaction_raw::clear_ref_block_bytes() {
  ref_block_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Transaction_raw::ref_block_bytes() const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.raw.ref_block_bytes)
  return ref_block_bytes_.GetNoArena();
}
void Transaction_raw::set_ref_block_bytes(const ::std::string& value) {
  
  ref_block_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Transaction.raw.ref_block_bytes)
}
#if LANG_CXX11
void Transaction_raw::set_ref_block_bytes(::std::string&& value) {
  
  ref_block_bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Transaction.raw.ref_block_bytes)
}
#endif
void Transaction_raw::set_ref_block_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ref_block_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Transaction.raw.ref_block_bytes)
}
void Transaction_raw::set_ref_block_bytes(const void* value, size_t size) {
  
  ref_block_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Transaction.raw.ref_block_bytes)
}
::std::string* Transaction_raw::mutable_ref_block_bytes() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Transaction.raw.ref_block_bytes)
  return ref_block_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Transaction_raw::release_ref_block_bytes() {
  // @@protoc_insertion_point(field_release:protocol.Transaction.raw.ref_block_bytes)
  
  return ref_block_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Transaction_raw::set_allocated_ref_block_bytes(::std::string* ref_block_bytes) {
  if (ref_block_bytes != NULL) {
    
  } else {
    
  }
  ref_block_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ref_block_bytes);
  // @@protoc_insertion_point(field_set_allocated:protocol.Transaction.raw.ref_block_bytes)
}

// int64 ref_block_num = 3;
void Transaction_raw::clear_ref_block_num() {
  ref_block_num_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Transaction_raw::ref_block_num() const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.raw.ref_block_num)
  return ref_block_num_;
}
void Transaction_raw::set_ref_block_num(::google::protobuf::int64 value) {
  
  ref_block_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.Transaction.raw.ref_block_num)
}

// bytes ref_block_hash = 4;
void Transaction_raw::clear_ref_block_hash() {
  ref_block_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Transaction_raw::ref_block_hash() const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.raw.ref_block_hash)
  return ref_block_hash_.GetNoArena();
}
void Transaction_raw::set_ref_block_hash(const ::std::string& value) {
  
  ref_block_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Transaction.raw.ref_block_hash)
}
#if LANG_CXX11
void Transaction_raw::set_ref_block_hash(::std::string&& value) {
  
  ref_block_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Transaction.raw.ref_block_hash)
}
#endif
void Transaction_raw::set_ref_block_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ref_block_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Transaction.raw.ref_block_hash)
}
void Transaction_raw::set_ref_block_hash(const void* value, size_t size) {
  
  ref_block_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Transaction.raw.ref_block_hash)
}
::std::string* Transaction_raw::mutable_ref_block_hash() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Transaction.raw.ref_block_hash)
  return ref_block_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Transaction_raw::release_ref_block_hash() {
  // @@protoc_insertion_point(field_release:protocol.Transaction.raw.ref_block_hash)
  
  return ref_block_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Transaction_raw::set_allocated_ref_block_hash(::std::string* ref_block_hash) {
  if (ref_block_hash != NULL) {
    
  } else {
    
  }
  ref_block_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ref_block_hash);
  // @@protoc_insertion_point(field_set_allocated:protocol.Transaction.raw.ref_block_hash)
}

// int64 expiration = 8;
void Transaction_raw::clear_expiration() {
  expiration_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Transaction_raw::expiration() const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.raw.expiration)
  return expiration_;
}
void Transaction_raw::set_expiration(::google::protobuf::int64 value) {
  
  expiration_ = value;
  // @@protoc_insertion_point(field_set:protocol.Transaction.raw.expiration)
}

// repeated .protocol.acuthrity auths = 9;
int Transaction_raw::auths_size() const {
  return auths_.size();
}
void Transaction_raw::clear_auths() {
  auths_.Clear();
}
const ::protocol::acuthrity& Transaction_raw::auths(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.raw.auths)
  return auths_.Get(index);
}
::protocol::acuthrity* Transaction_raw::mutable_auths(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Transaction.raw.auths)
  return auths_.Mutable(index);
}
::protocol::acuthrity* Transaction_raw::add_auths() {
  // @@protoc_insertion_point(field_add:protocol.Transaction.raw.auths)
  return auths_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::acuthrity >*
Transaction_raw::mutable_auths() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Transaction.raw.auths)
  return &auths_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::acuthrity >&
Transaction_raw::auths() const {
  // @@protoc_insertion_point(field_list:protocol.Transaction.raw.auths)
  return auths_;
}

// bytes data = 10;
void Transaction_raw::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Transaction_raw::data() const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.raw.data)
  return data_.GetNoArena();
}
void Transaction_raw::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Transaction.raw.data)
}
#if LANG_CXX11
void Transaction_raw::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Transaction.raw.data)
}
#endif
void Transaction_raw::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Transaction.raw.data)
}
void Transaction_raw::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Transaction.raw.data)
}
::std::string* Transaction_raw::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Transaction.raw.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Transaction_raw::release_data() {
  // @@protoc_insertion_point(field_release:protocol.Transaction.raw.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Transaction_raw::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:protocol.Transaction.raw.data)
}

// repeated .protocol.Transaction.Contract contract = 11;
int Transaction_raw::contract_size() const {
  return contract_.size();
}
void Transaction_raw::clear_contract() {
  contract_.Clear();
}
const ::protocol::Transaction_Contract& Transaction_raw::contract(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.raw.contract)
  return contract_.Get(index);
}
::protocol::Transaction_Contract* Transaction_raw::mutable_contract(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Transaction.raw.contract)
  return contract_.Mutable(index);
}
::protocol::Transaction_Contract* Transaction_raw::add_contract() {
  // @@protoc_insertion_point(field_add:protocol.Transaction.raw.contract)
  return contract_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Transaction_Contract >*
Transaction_raw::mutable_contract() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Transaction.raw.contract)
  return &contract_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Transaction_Contract >&
Transaction_raw::contract() const {
  // @@protoc_insertion_point(field_list:protocol.Transaction.raw.contract)
  return contract_;
}

// bytes scripts = 12;
void Transaction_raw::clear_scripts() {
  scripts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Transaction_raw::scripts() const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.raw.scripts)
  return scripts_.GetNoArena();
}
void Transaction_raw::set_scripts(const ::std::string& value) {
  
  scripts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Transaction.raw.scripts)
}
#if LANG_CXX11
void Transaction_raw::set_scripts(::std::string&& value) {
  
  scripts_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Transaction.raw.scripts)
}
#endif
void Transaction_raw::set_scripts(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scripts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Transaction.raw.scripts)
}
void Transaction_raw::set_scripts(const void* value, size_t size) {
  
  scripts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Transaction.raw.scripts)
}
::std::string* Transaction_raw::mutable_scripts() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Transaction.raw.scripts)
  return scripts_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Transaction_raw::release_scripts() {
  // @@protoc_insertion_point(field_release:protocol.Transaction.raw.scripts)
  
  return scripts_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Transaction_raw::set_allocated_scripts(::std::string* scripts) {
  if (scripts != NULL) {
    
  } else {
    
  }
  scripts_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scripts);
  // @@protoc_insertion_point(field_set_allocated:protocol.Transaction.raw.scripts)
}

// int64 timestamp = 14;
void Transaction_raw::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Transaction_raw::timestamp() const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.raw.timestamp)
  return timestamp_;
}
void Transaction_raw::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:protocol.Transaction.raw.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transaction::kRawDataFieldNumber;
const int Transaction::kSignatureFieldNumber;
const int Transaction::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transaction::Transaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Transaction)
}
Transaction::Transaction(const Transaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      signature_(from.signature_),
      ret_(from.ret_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_raw_data()) {
    raw_data_ = new ::protocol::Transaction_raw(*from.raw_data_);
  } else {
    raw_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.Transaction)
}

void Transaction::SharedCtor() {
  raw_data_ = NULL;
  _cached_size_ = 0;
}

Transaction::~Transaction() {
  // @@protoc_insertion_point(destructor:protocol.Transaction)
  SharedDtor();
}

void Transaction::SharedDtor() {
  if (this != internal_default_instance()) delete raw_data_;
}

void Transaction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Transaction::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transaction& Transaction::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Transaction* Transaction::New(::google::protobuf::Arena* arena) const {
  Transaction* n = new Transaction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.Clear();
  ret_.Clear();
  if (GetArenaNoVirtual() == NULL && raw_data_ != NULL) {
    delete raw_data_;
  }
  raw_data_ = NULL;
  _internal_metadata_.Clear();
}

bool Transaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Transaction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.Transaction.raw raw_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_raw_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.Transaction.Result ret = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Transaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Transaction)
  return false;
#undef DO_
}

void Transaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Transaction.raw raw_data = 1;
  if (this->has_raw_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->raw_data_, output);
  }

  // repeated bytes signature = 2;
  for (int i = 0, n = this->signature_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->signature(i), output);
  }

  // repeated .protocol.Transaction.Result ret = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ret_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->ret(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Transaction)
}

::google::protobuf::uint8* Transaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Transaction.raw raw_data = 1;
  if (this->has_raw_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->raw_data_, deterministic, target);
  }

  // repeated bytes signature = 2;
  for (int i = 0, n = this->signature_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->signature(i), target);
  }

  // repeated .protocol.Transaction.Result ret = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ret_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->ret(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Transaction)
  return target;
}

size_t Transaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Transaction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes signature = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->signature_size());
  for (int i = 0, n = this->signature_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->signature(i));
  }

  // repeated .protocol.Transaction.Result ret = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->ret_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ret(static_cast<int>(i)));
    }
  }

  // .protocol.Transaction.raw raw_data = 1;
  if (this->has_raw_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->raw_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Transaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  const Transaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Transaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Transaction)
    MergeFrom(*source);
  }
}

void Transaction::MergeFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  signature_.MergeFrom(from.signature_);
  ret_.MergeFrom(from.ret_);
  if (from.has_raw_data()) {
    mutable_raw_data()->::protocol::Transaction_raw::MergeFrom(from.raw_data());
  }
}

void Transaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transaction::CopyFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transaction::IsInitialized() const {
  return true;
}

void Transaction::Swap(Transaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transaction::InternalSwap(Transaction* other) {
  using std::swap;
  signature_.InternalSwap(&other->signature_);
  ret_.InternalSwap(&other->ret_);
  swap(raw_data_, other->raw_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Transaction::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Transaction

// .protocol.Transaction.raw raw_data = 1;
bool Transaction::has_raw_data() const {
  return this != internal_default_instance() && raw_data_ != NULL;
}
void Transaction::clear_raw_data() {
  if (GetArenaNoVirtual() == NULL && raw_data_ != NULL) delete raw_data_;
  raw_data_ = NULL;
}
const ::protocol::Transaction_raw& Transaction::raw_data() const {
  const ::protocol::Transaction_raw* p = raw_data_;
  // @@protoc_insertion_point(field_get:protocol.Transaction.raw_data)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::Transaction_raw*>(
      &::protocol::_Transaction_raw_default_instance_);
}
::protocol::Transaction_raw* Transaction::mutable_raw_data() {
  
  if (raw_data_ == NULL) {
    raw_data_ = new ::protocol::Transaction_raw;
  }
  // @@protoc_insertion_point(field_mutable:protocol.Transaction.raw_data)
  return raw_data_;
}
::protocol::Transaction_raw* Transaction::release_raw_data() {
  // @@protoc_insertion_point(field_release:protocol.Transaction.raw_data)
  
  ::protocol::Transaction_raw* temp = raw_data_;
  raw_data_ = NULL;
  return temp;
}
void Transaction::set_allocated_raw_data(::protocol::Transaction_raw* raw_data) {
  delete raw_data_;
  raw_data_ = raw_data;
  if (raw_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.Transaction.raw_data)
}

// repeated bytes signature = 2;
int Transaction::signature_size() const {
  return signature_.size();
}
void Transaction::clear_signature() {
  signature_.Clear();
}
const ::std::string& Transaction::signature(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.signature)
  return signature_.Get(index);
}
::std::string* Transaction::mutable_signature(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Transaction.signature)
  return signature_.Mutable(index);
}
void Transaction::set_signature(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.Transaction.signature)
  signature_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Transaction::set_signature(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:protocol.Transaction.signature)
  signature_.Mutable(index)->assign(std::move(value));
}
#endif
void Transaction::set_signature(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  signature_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.Transaction.signature)
}
void Transaction::set_signature(int index, const void* value, size_t size) {
  signature_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.Transaction.signature)
}
::std::string* Transaction::add_signature() {
  // @@protoc_insertion_point(field_add_mutable:protocol.Transaction.signature)
  return signature_.Add();
}
void Transaction::add_signature(const ::std::string& value) {
  signature_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.Transaction.signature)
}
#if LANG_CXX11
void Transaction::add_signature(::std::string&& value) {
  signature_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.Transaction.signature)
}
#endif
void Transaction::add_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  signature_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.Transaction.signature)
}
void Transaction::add_signature(const void* value, size_t size) {
  signature_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.Transaction.signature)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Transaction::signature() const {
  // @@protoc_insertion_point(field_list:protocol.Transaction.signature)
  return signature_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Transaction::mutable_signature() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Transaction.signature)
  return &signature_;
}

// repeated .protocol.Transaction.Result ret = 5;
int Transaction::ret_size() const {
  return ret_.size();
}
void Transaction::clear_ret() {
  ret_.Clear();
}
const ::protocol::Transaction_Result& Transaction::ret(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Transaction.ret)
  return ret_.Get(index);
}
::protocol::Transaction_Result* Transaction::mutable_ret(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Transaction.ret)
  return ret_.Mutable(index);
}
::protocol::Transaction_Result* Transaction::add_ret() {
  // @@protoc_insertion_point(field_add:protocol.Transaction.ret)
  return ret_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Transaction_Result >*
Transaction::mutable_ret() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Transaction.ret)
  return &ret_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Transaction_Result >&
Transaction::ret() const {
  // @@protoc_insertion_point(field_list:protocol.Transaction.ret)
  return ret_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transactions::kTransactionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transactions::Transactions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Transactions)
}
Transactions::Transactions(const Transactions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transactions_(from.transactions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.Transactions)
}

void Transactions::SharedCtor() {
  _cached_size_ = 0;
}

Transactions::~Transactions() {
  // @@protoc_insertion_point(destructor:protocol.Transactions)
  SharedDtor();
}

void Transactions::SharedDtor() {
}

void Transactions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Transactions::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transactions& Transactions::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Transactions* Transactions::New(::google::protobuf::Arena* arena) const {
  Transactions* n = new Transactions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Transactions::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Transactions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactions_.Clear();
  _internal_metadata_.Clear();
}

bool Transactions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Transactions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.Transaction transactions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_transactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Transactions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Transactions)
  return false;
#undef DO_
}

void Transactions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Transactions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Transaction transactions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transactions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->transactions(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Transactions)
}

::google::protobuf::uint8* Transactions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Transactions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Transaction transactions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transactions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->transactions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Transactions)
  return target;
}

size_t Transactions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Transactions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.Transaction transactions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->transactions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transactions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Transactions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Transactions)
  GOOGLE_DCHECK_NE(&from, this);
  const Transactions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transactions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Transactions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Transactions)
    MergeFrom(*source);
  }
}

void Transactions::MergeFrom(const Transactions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Transactions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transactions_.MergeFrom(from.transactions_);
}

void Transactions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Transactions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transactions::CopyFrom(const Transactions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Transactions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transactions::IsInitialized() const {
  return true;
}

void Transactions::Swap(Transactions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transactions::InternalSwap(Transactions* other) {
  using std::swap;
  transactions_.InternalSwap(&other->transactions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Transactions::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Transactions

// repeated .protocol.Transaction transactions = 1;
int Transactions::transactions_size() const {
  return transactions_.size();
}
void Transactions::clear_transactions() {
  transactions_.Clear();
}
const ::protocol::Transaction& Transactions::transactions(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Transactions.transactions)
  return transactions_.Get(index);
}
::protocol::Transaction* Transactions::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Transactions.transactions)
  return transactions_.Mutable(index);
}
::protocol::Transaction* Transactions::add_transactions() {
  // @@protoc_insertion_point(field_add:protocol.Transactions.transactions)
  return transactions_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Transaction >*
Transactions::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Transactions.transactions)
  return &transactions_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Transaction >&
Transactions::transactions() const {
  // @@protoc_insertion_point(field_list:protocol.Transactions.transactions)
  return transactions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockHeader_raw::kTimestampFieldNumber;
const int BlockHeader_raw::kTxTrieRootFieldNumber;
const int BlockHeader_raw::kParentHashFieldNumber;
const int BlockHeader_raw::kNumberFieldNumber;
const int BlockHeader_raw::kWitnessIdFieldNumber;
const int BlockHeader_raw::kWitnessAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockHeader_raw::BlockHeader_raw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BlockHeader.raw)
}
BlockHeader_raw::BlockHeader_raw(const BlockHeader_raw& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txtrieroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.txtrieroot().size() > 0) {
    txtrieroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txtrieroot_);
  }
  parenthash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parenthash().size() > 0) {
    parenthash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parenthash_);
  }
  witness_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.witness_address().size() > 0) {
    witness_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.witness_address_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&witness_id_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(witness_id_));
  // @@protoc_insertion_point(copy_constructor:protocol.BlockHeader.raw)
}

void BlockHeader_raw::SharedCtor() {
  txtrieroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parenthash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  witness_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&witness_id_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(witness_id_));
  _cached_size_ = 0;
}

BlockHeader_raw::~BlockHeader_raw() {
  // @@protoc_insertion_point(destructor:protocol.BlockHeader.raw)
  SharedDtor();
}

void BlockHeader_raw::SharedDtor() {
  txtrieroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parenthash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  witness_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlockHeader_raw::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockHeader_raw::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockHeader_raw& BlockHeader_raw::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockHeader_raw* BlockHeader_raw::New(::google::protobuf::Arena* arena) const {
  BlockHeader_raw* n = new BlockHeader_raw;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockHeader_raw::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BlockHeader.raw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txtrieroot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parenthash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  witness_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&witness_id_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(witness_id_));
  _internal_metadata_.Clear();
}

bool BlockHeader_raw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BlockHeader.raw)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes txTrieRoot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txtrieroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes parentHash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_parenthash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 number = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 witness_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &witness_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes witness_address = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_witness_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BlockHeader.raw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BlockHeader.raw)
  return false;
#undef DO_
}

void BlockHeader_raw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BlockHeader.raw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // bytes txTrieRoot = 2;
  if (this->txtrieroot().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->txtrieroot(), output);
  }

  // bytes parentHash = 3;
  if (this->parenthash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->parenthash(), output);
  }

  // int64 number = 7;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->number(), output);
  }

  // int64 witness_id = 8;
  if (this->witness_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->witness_id(), output);
  }

  // bytes witness_address = 9;
  if (this->witness_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->witness_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BlockHeader.raw)
}

::google::protobuf::uint8* BlockHeader_raw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BlockHeader.raw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // bytes txTrieRoot = 2;
  if (this->txtrieroot().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->txtrieroot(), target);
  }

  // bytes parentHash = 3;
  if (this->parenthash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->parenthash(), target);
  }

  // int64 number = 7;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->number(), target);
  }

  // int64 witness_id = 8;
  if (this->witness_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->witness_id(), target);
  }

  // bytes witness_address = 9;
  if (this->witness_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->witness_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BlockHeader.raw)
  return target;
}

size_t BlockHeader_raw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BlockHeader.raw)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes txTrieRoot = 2;
  if (this->txtrieroot().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->txtrieroot());
  }

  // bytes parentHash = 3;
  if (this->parenthash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->parenthash());
  }

  // bytes witness_address = 9;
  if (this->witness_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->witness_address());
  }

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // int64 number = 7;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->number());
  }

  // int64 witness_id = 8;
  if (this->witness_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->witness_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockHeader_raw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BlockHeader.raw)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockHeader_raw* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockHeader_raw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BlockHeader.raw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BlockHeader.raw)
    MergeFrom(*source);
  }
}

void BlockHeader_raw::MergeFrom(const BlockHeader_raw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BlockHeader.raw)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.txtrieroot().size() > 0) {

    txtrieroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txtrieroot_);
  }
  if (from.parenthash().size() > 0) {

    parenthash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parenthash_);
  }
  if (from.witness_address().size() > 0) {

    witness_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.witness_address_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.witness_id() != 0) {
    set_witness_id(from.witness_id());
  }
}

void BlockHeader_raw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BlockHeader.raw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockHeader_raw::CopyFrom(const BlockHeader_raw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BlockHeader.raw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockHeader_raw::IsInitialized() const {
  return true;
}

void BlockHeader_raw::Swap(BlockHeader_raw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockHeader_raw::InternalSwap(BlockHeader_raw* other) {
  using std::swap;
  txtrieroot_.Swap(&other->txtrieroot_);
  parenthash_.Swap(&other->parenthash_);
  witness_address_.Swap(&other->witness_address_);
  swap(timestamp_, other->timestamp_);
  swap(number_, other->number_);
  swap(witness_id_, other->witness_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockHeader_raw::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockHeader_raw

// int64 timestamp = 1;
void BlockHeader_raw::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BlockHeader_raw::timestamp() const {
  // @@protoc_insertion_point(field_get:protocol.BlockHeader.raw.timestamp)
  return timestamp_;
}
void BlockHeader_raw::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:protocol.BlockHeader.raw.timestamp)
}

// bytes txTrieRoot = 2;
void BlockHeader_raw::clear_txtrieroot() {
  txtrieroot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockHeader_raw::txtrieroot() const {
  // @@protoc_insertion_point(field_get:protocol.BlockHeader.raw.txTrieRoot)
  return txtrieroot_.GetNoArena();
}
void BlockHeader_raw::set_txtrieroot(const ::std::string& value) {
  
  txtrieroot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.BlockHeader.raw.txTrieRoot)
}
#if LANG_CXX11
void BlockHeader_raw::set_txtrieroot(::std::string&& value) {
  
  txtrieroot_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.BlockHeader.raw.txTrieRoot)
}
#endif
void BlockHeader_raw::set_txtrieroot(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  txtrieroot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.BlockHeader.raw.txTrieRoot)
}
void BlockHeader_raw::set_txtrieroot(const void* value, size_t size) {
  
  txtrieroot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.BlockHeader.raw.txTrieRoot)
}
::std::string* BlockHeader_raw::mutable_txtrieroot() {
  
  // @@protoc_insertion_point(field_mutable:protocol.BlockHeader.raw.txTrieRoot)
  return txtrieroot_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockHeader_raw::release_txtrieroot() {
  // @@protoc_insertion_point(field_release:protocol.BlockHeader.raw.txTrieRoot)
  
  return txtrieroot_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockHeader_raw::set_allocated_txtrieroot(::std::string* txtrieroot) {
  if (txtrieroot != NULL) {
    
  } else {
    
  }
  txtrieroot_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txtrieroot);
  // @@protoc_insertion_point(field_set_allocated:protocol.BlockHeader.raw.txTrieRoot)
}

// bytes parentHash = 3;
void BlockHeader_raw::clear_parenthash() {
  parenthash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockHeader_raw::parenthash() const {
  // @@protoc_insertion_point(field_get:protocol.BlockHeader.raw.parentHash)
  return parenthash_.GetNoArena();
}
void BlockHeader_raw::set_parenthash(const ::std::string& value) {
  
  parenthash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.BlockHeader.raw.parentHash)
}
#if LANG_CXX11
void BlockHeader_raw::set_parenthash(::std::string&& value) {
  
  parenthash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.BlockHeader.raw.parentHash)
}
#endif
void BlockHeader_raw::set_parenthash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parenthash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.BlockHeader.raw.parentHash)
}
void BlockHeader_raw::set_parenthash(const void* value, size_t size) {
  
  parenthash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.BlockHeader.raw.parentHash)
}
::std::string* BlockHeader_raw::mutable_parenthash() {
  
  // @@protoc_insertion_point(field_mutable:protocol.BlockHeader.raw.parentHash)
  return parenthash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockHeader_raw::release_parenthash() {
  // @@protoc_insertion_point(field_release:protocol.BlockHeader.raw.parentHash)
  
  return parenthash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockHeader_raw::set_allocated_parenthash(::std::string* parenthash) {
  if (parenthash != NULL) {
    
  } else {
    
  }
  parenthash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parenthash);
  // @@protoc_insertion_point(field_set_allocated:protocol.BlockHeader.raw.parentHash)
}

// int64 number = 7;
void BlockHeader_raw::clear_number() {
  number_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BlockHeader_raw::number() const {
  // @@protoc_insertion_point(field_get:protocol.BlockHeader.raw.number)
  return number_;
}
void BlockHeader_raw::set_number(::google::protobuf::int64 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:protocol.BlockHeader.raw.number)
}

// int64 witness_id = 8;
void BlockHeader_raw::clear_witness_id() {
  witness_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BlockHeader_raw::witness_id() const {
  // @@protoc_insertion_point(field_get:protocol.BlockHeader.raw.witness_id)
  return witness_id_;
}
void BlockHeader_raw::set_witness_id(::google::protobuf::int64 value) {
  
  witness_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.BlockHeader.raw.witness_id)
}

// bytes witness_address = 9;
void BlockHeader_raw::clear_witness_address() {
  witness_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockHeader_raw::witness_address() const {
  // @@protoc_insertion_point(field_get:protocol.BlockHeader.raw.witness_address)
  return witness_address_.GetNoArena();
}
void BlockHeader_raw::set_witness_address(const ::std::string& value) {
  
  witness_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.BlockHeader.raw.witness_address)
}
#if LANG_CXX11
void BlockHeader_raw::set_witness_address(::std::string&& value) {
  
  witness_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.BlockHeader.raw.witness_address)
}
#endif
void BlockHeader_raw::set_witness_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  witness_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.BlockHeader.raw.witness_address)
}
void BlockHeader_raw::set_witness_address(const void* value, size_t size) {
  
  witness_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.BlockHeader.raw.witness_address)
}
::std::string* BlockHeader_raw::mutable_witness_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.BlockHeader.raw.witness_address)
  return witness_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockHeader_raw::release_witness_address() {
  // @@protoc_insertion_point(field_release:protocol.BlockHeader.raw.witness_address)
  
  return witness_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockHeader_raw::set_allocated_witness_address(::std::string* witness_address) {
  if (witness_address != NULL) {
    
  } else {
    
  }
  witness_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), witness_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.BlockHeader.raw.witness_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockHeader::kRawDataFieldNumber;
const int BlockHeader::kWitnessSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockHeader::BlockHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BlockHeader)
}
BlockHeader::BlockHeader(const BlockHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  witness_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.witness_signature().size() > 0) {
    witness_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.witness_signature_);
  }
  if (from.has_raw_data()) {
    raw_data_ = new ::protocol::BlockHeader_raw(*from.raw_data_);
  } else {
    raw_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.BlockHeader)
}

void BlockHeader::SharedCtor() {
  witness_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_data_ = NULL;
  _cached_size_ = 0;
}

BlockHeader::~BlockHeader() {
  // @@protoc_insertion_point(destructor:protocol.BlockHeader)
  SharedDtor();
}

void BlockHeader::SharedDtor() {
  witness_signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete raw_data_;
}

void BlockHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockHeader::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockHeader& BlockHeader::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockHeader* BlockHeader::New(::google::protobuf::Arena* arena) const {
  BlockHeader* n = new BlockHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BlockHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  witness_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && raw_data_ != NULL) {
    delete raw_data_;
  }
  raw_data_ = NULL;
  _internal_metadata_.Clear();
}

bool BlockHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BlockHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.BlockHeader.raw raw_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_raw_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes witness_signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_witness_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BlockHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BlockHeader)
  return false;
#undef DO_
}

void BlockHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BlockHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.BlockHeader.raw raw_data = 1;
  if (this->has_raw_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->raw_data_, output);
  }

  // bytes witness_signature = 2;
  if (this->witness_signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->witness_signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BlockHeader)
}

::google::protobuf::uint8* BlockHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BlockHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.BlockHeader.raw raw_data = 1;
  if (this->has_raw_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->raw_data_, deterministic, target);
  }

  // bytes witness_signature = 2;
  if (this->witness_signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->witness_signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BlockHeader)
  return target;
}

size_t BlockHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BlockHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes witness_signature = 2;
  if (this->witness_signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->witness_signature());
  }

  // .protocol.BlockHeader.raw raw_data = 1;
  if (this->has_raw_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->raw_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BlockHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BlockHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BlockHeader)
    MergeFrom(*source);
  }
}

void BlockHeader::MergeFrom(const BlockHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BlockHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.witness_signature().size() > 0) {

    witness_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.witness_signature_);
  }
  if (from.has_raw_data()) {
    mutable_raw_data()->::protocol::BlockHeader_raw::MergeFrom(from.raw_data());
  }
}

void BlockHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BlockHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockHeader::CopyFrom(const BlockHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BlockHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockHeader::IsInitialized() const {
  return true;
}

void BlockHeader::Swap(BlockHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockHeader::InternalSwap(BlockHeader* other) {
  using std::swap;
  witness_signature_.Swap(&other->witness_signature_);
  swap(raw_data_, other->raw_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockHeader::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockHeader

// .protocol.BlockHeader.raw raw_data = 1;
bool BlockHeader::has_raw_data() const {
  return this != internal_default_instance() && raw_data_ != NULL;
}
void BlockHeader::clear_raw_data() {
  if (GetArenaNoVirtual() == NULL && raw_data_ != NULL) delete raw_data_;
  raw_data_ = NULL;
}
const ::protocol::BlockHeader_raw& BlockHeader::raw_data() const {
  const ::protocol::BlockHeader_raw* p = raw_data_;
  // @@protoc_insertion_point(field_get:protocol.BlockHeader.raw_data)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::BlockHeader_raw*>(
      &::protocol::_BlockHeader_raw_default_instance_);
}
::protocol::BlockHeader_raw* BlockHeader::mutable_raw_data() {
  
  if (raw_data_ == NULL) {
    raw_data_ = new ::protocol::BlockHeader_raw;
  }
  // @@protoc_insertion_point(field_mutable:protocol.BlockHeader.raw_data)
  return raw_data_;
}
::protocol::BlockHeader_raw* BlockHeader::release_raw_data() {
  // @@protoc_insertion_point(field_release:protocol.BlockHeader.raw_data)
  
  ::protocol::BlockHeader_raw* temp = raw_data_;
  raw_data_ = NULL;
  return temp;
}
void BlockHeader::set_allocated_raw_data(::protocol::BlockHeader_raw* raw_data) {
  delete raw_data_;
  raw_data_ = raw_data;
  if (raw_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.BlockHeader.raw_data)
}

// bytes witness_signature = 2;
void BlockHeader::clear_witness_signature() {
  witness_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockHeader::witness_signature() const {
  // @@protoc_insertion_point(field_get:protocol.BlockHeader.witness_signature)
  return witness_signature_.GetNoArena();
}
void BlockHeader::set_witness_signature(const ::std::string& value) {
  
  witness_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.BlockHeader.witness_signature)
}
#if LANG_CXX11
void BlockHeader::set_witness_signature(::std::string&& value) {
  
  witness_signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.BlockHeader.witness_signature)
}
#endif
void BlockHeader::set_witness_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  witness_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.BlockHeader.witness_signature)
}
void BlockHeader::set_witness_signature(const void* value, size_t size) {
  
  witness_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.BlockHeader.witness_signature)
}
::std::string* BlockHeader::mutable_witness_signature() {
  
  // @@protoc_insertion_point(field_mutable:protocol.BlockHeader.witness_signature)
  return witness_signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockHeader::release_witness_signature() {
  // @@protoc_insertion_point(field_release:protocol.BlockHeader.witness_signature)
  
  return witness_signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockHeader::set_allocated_witness_signature(::std::string* witness_signature) {
  if (witness_signature != NULL) {
    
  } else {
    
  }
  witness_signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), witness_signature);
  // @@protoc_insertion_point(field_set_allocated:protocol.BlockHeader.witness_signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kTransactionsFieldNumber;
const int Block::kBlockHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Block)
}
Block::Block(const Block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transactions_(from.transactions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_block_header()) {
    block_header_ = new ::protocol::BlockHeader(*from.block_header_);
  } else {
    block_header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.Block)
}

void Block::SharedCtor() {
  block_header_ = NULL;
  _cached_size_ = 0;
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:protocol.Block)
  SharedDtor();
}

void Block::SharedDtor() {
  if (this != internal_default_instance()) delete block_header_;
}

void Block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Block& Block::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Block* Block::New(::google::protobuf::Arena* arena) const {
  Block* n = new Block;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactions_.Clear();
  if (GetArenaNoVirtual() == NULL && block_header_ != NULL) {
    delete block_header_;
  }
  block_header_ = NULL;
  _internal_metadata_.Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Block)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.Transaction transactions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_transactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.BlockHeader block_header = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_block_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Transaction transactions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transactions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->transactions(static_cast<int>(i)), output);
  }

  // .protocol.BlockHeader block_header = 2;
  if (this->has_block_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->block_header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Block)
}

::google::protobuf::uint8* Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Transaction transactions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transactions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->transactions(static_cast<int>(i)), deterministic, target);
  }

  // .protocol.BlockHeader block_header = 2;
  if (this->has_block_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->block_header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Block)
  return target;
}

size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Block)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.Transaction transactions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->transactions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transactions(static_cast<int>(i)));
    }
  }

  // .protocol.BlockHeader block_header = 2;
  if (this->has_block_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->block_header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Block)
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transactions_.MergeFrom(from.transactions_);
  if (from.has_block_header()) {
    mutable_block_header()->::protocol::BlockHeader::MergeFrom(from.block_header());
  }
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  using std::swap;
  transactions_.InternalSwap(&other->transactions_);
  swap(block_header_, other->block_header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Block

// repeated .protocol.Transaction transactions = 1;
int Block::transactions_size() const {
  return transactions_.size();
}
void Block::clear_transactions() {
  transactions_.Clear();
}
const ::protocol::Transaction& Block::transactions(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Block.transactions)
  return transactions_.Get(index);
}
::protocol::Transaction* Block::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Block.transactions)
  return transactions_.Mutable(index);
}
::protocol::Transaction* Block::add_transactions() {
  // @@protoc_insertion_point(field_add:protocol.Block.transactions)
  return transactions_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Transaction >*
Block::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Block.transactions)
  return &transactions_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Transaction >&
Block::transactions() const {
  // @@protoc_insertion_point(field_list:protocol.Block.transactions)
  return transactions_;
}

// .protocol.BlockHeader block_header = 2;
bool Block::has_block_header() const {
  return this != internal_default_instance() && block_header_ != NULL;
}
void Block::clear_block_header() {
  if (GetArenaNoVirtual() == NULL && block_header_ != NULL) delete block_header_;
  block_header_ = NULL;
}
const ::protocol::BlockHeader& Block::block_header() const {
  const ::protocol::BlockHeader* p = block_header_;
  // @@protoc_insertion_point(field_get:protocol.Block.block_header)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::BlockHeader*>(
      &::protocol::_BlockHeader_default_instance_);
}
::protocol::BlockHeader* Block::mutable_block_header() {
  
  if (block_header_ == NULL) {
    block_header_ = new ::protocol::BlockHeader;
  }
  // @@protoc_insertion_point(field_mutable:protocol.Block.block_header)
  return block_header_;
}
::protocol::BlockHeader* Block::release_block_header() {
  // @@protoc_insertion_point(field_release:protocol.Block.block_header)
  
  ::protocol::BlockHeader* temp = block_header_;
  block_header_ = NULL;
  return temp;
}
void Block::set_allocated_block_header(::protocol::BlockHeader* block_header) {
  delete block_header_;
  block_header_ = block_header;
  if (block_header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.Block.block_header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChainInventory_BlockId::kHashFieldNumber;
const int ChainInventory_BlockId::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChainInventory_BlockId::ChainInventory_BlockId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ChainInventory.BlockId)
}
ChainInventory_BlockId::ChainInventory_BlockId(const ChainInventory_BlockId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  number_ = from.number_;
  // @@protoc_insertion_point(copy_constructor:protocol.ChainInventory.BlockId)
}

void ChainInventory_BlockId::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ChainInventory_BlockId::~ChainInventory_BlockId() {
  // @@protoc_insertion_point(destructor:protocol.ChainInventory.BlockId)
  SharedDtor();
}

void ChainInventory_BlockId::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChainInventory_BlockId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChainInventory_BlockId::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChainInventory_BlockId& ChainInventory_BlockId::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChainInventory_BlockId* ChainInventory_BlockId::New(::google::protobuf::Arena* arena) const {
  ChainInventory_BlockId* n = new ChainInventory_BlockId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChainInventory_BlockId::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ChainInventory.BlockId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ChainInventory_BlockId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ChainInventory.BlockId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ChainInventory.BlockId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ChainInventory.BlockId)
  return false;
#undef DO_
}

void ChainInventory_BlockId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ChainInventory.BlockId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->hash(), output);
  }

  // int64 number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ChainInventory.BlockId)
}

::google::protobuf::uint8* ChainInventory_BlockId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ChainInventory.BlockId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->hash(), target);
  }

  // int64 number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ChainInventory.BlockId)
  return target;
}

size_t ChainInventory_BlockId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ChainInventory.BlockId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // int64 number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChainInventory_BlockId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ChainInventory.BlockId)
  GOOGLE_DCHECK_NE(&from, this);
  const ChainInventory_BlockId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChainInventory_BlockId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ChainInventory.BlockId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ChainInventory.BlockId)
    MergeFrom(*source);
  }
}

void ChainInventory_BlockId::MergeFrom(const ChainInventory_BlockId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ChainInventory.BlockId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void ChainInventory_BlockId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ChainInventory.BlockId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChainInventory_BlockId::CopyFrom(const ChainInventory_BlockId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ChainInventory.BlockId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChainInventory_BlockId::IsInitialized() const {
  return true;
}

void ChainInventory_BlockId::Swap(ChainInventory_BlockId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChainInventory_BlockId::InternalSwap(ChainInventory_BlockId* other) {
  using std::swap;
  hash_.Swap(&other->hash_);
  swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChainInventory_BlockId::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChainInventory_BlockId

// bytes hash = 1;
void ChainInventory_BlockId::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChainInventory_BlockId::hash() const {
  // @@protoc_insertion_point(field_get:protocol.ChainInventory.BlockId.hash)
  return hash_.GetNoArena();
}
void ChainInventory_BlockId::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.ChainInventory.BlockId.hash)
}
#if LANG_CXX11
void ChainInventory_BlockId::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.ChainInventory.BlockId.hash)
}
#endif
void ChainInventory_BlockId::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.ChainInventory.BlockId.hash)
}
void ChainInventory_BlockId::set_hash(const void* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.ChainInventory.BlockId.hash)
}
::std::string* ChainInventory_BlockId::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:protocol.ChainInventory.BlockId.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChainInventory_BlockId::release_hash() {
  // @@protoc_insertion_point(field_release:protocol.ChainInventory.BlockId.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChainInventory_BlockId::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:protocol.ChainInventory.BlockId.hash)
}

// int64 number = 2;
void ChainInventory_BlockId::clear_number() {
  number_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ChainInventory_BlockId::number() const {
  // @@protoc_insertion_point(field_get:protocol.ChainInventory.BlockId.number)
  return number_;
}
void ChainInventory_BlockId::set_number(::google::protobuf::int64 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:protocol.ChainInventory.BlockId.number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChainInventory::kIdsFieldNumber;
const int ChainInventory::kRemainNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChainInventory::ChainInventory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ChainInventory)
}
ChainInventory::ChainInventory(const ChainInventory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ids_(from.ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remain_num_ = from.remain_num_;
  // @@protoc_insertion_point(copy_constructor:protocol.ChainInventory)
}

void ChainInventory::SharedCtor() {
  remain_num_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ChainInventory::~ChainInventory() {
  // @@protoc_insertion_point(destructor:protocol.ChainInventory)
  SharedDtor();
}

void ChainInventory::SharedDtor() {
}

void ChainInventory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChainInventory::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChainInventory& ChainInventory::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChainInventory* ChainInventory::New(::google::protobuf::Arena* arena) const {
  ChainInventory* n = new ChainInventory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChainInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ChainInventory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ids_.Clear();
  remain_num_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ChainInventory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ChainInventory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.ChainInventory.BlockId ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 remain_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &remain_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ChainInventory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ChainInventory)
  return false;
#undef DO_
}

void ChainInventory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ChainInventory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.ChainInventory.BlockId ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ids(static_cast<int>(i)), output);
  }

  // int64 remain_num = 2;
  if (this->remain_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->remain_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ChainInventory)
}

::google::protobuf::uint8* ChainInventory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ChainInventory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.ChainInventory.BlockId ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ids(static_cast<int>(i)), deterministic, target);
  }

  // int64 remain_num = 2;
  if (this->remain_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->remain_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ChainInventory)
  return target;
}

size_t ChainInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ChainInventory)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.ChainInventory.BlockId ids = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ids(static_cast<int>(i)));
    }
  }

  // int64 remain_num = 2;
  if (this->remain_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->remain_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChainInventory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ChainInventory)
  GOOGLE_DCHECK_NE(&from, this);
  const ChainInventory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChainInventory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ChainInventory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ChainInventory)
    MergeFrom(*source);
  }
}

void ChainInventory::MergeFrom(const ChainInventory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ChainInventory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ids_.MergeFrom(from.ids_);
  if (from.remain_num() != 0) {
    set_remain_num(from.remain_num());
  }
}

void ChainInventory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ChainInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChainInventory::CopyFrom(const ChainInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ChainInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChainInventory::IsInitialized() const {
  return true;
}

void ChainInventory::Swap(ChainInventory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChainInventory::InternalSwap(ChainInventory* other) {
  using std::swap;
  ids_.InternalSwap(&other->ids_);
  swap(remain_num_, other->remain_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChainInventory::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChainInventory

// repeated .protocol.ChainInventory.BlockId ids = 1;
int ChainInventory::ids_size() const {
  return ids_.size();
}
void ChainInventory::clear_ids() {
  ids_.Clear();
}
const ::protocol::ChainInventory_BlockId& ChainInventory::ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.ChainInventory.ids)
  return ids_.Get(index);
}
::protocol::ChainInventory_BlockId* ChainInventory::mutable_ids(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.ChainInventory.ids)
  return ids_.Mutable(index);
}
::protocol::ChainInventory_BlockId* ChainInventory::add_ids() {
  // @@protoc_insertion_point(field_add:protocol.ChainInventory.ids)
  return ids_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::ChainInventory_BlockId >*
ChainInventory::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:protocol.ChainInventory.ids)
  return &ids_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::ChainInventory_BlockId >&
ChainInventory::ids() const {
  // @@protoc_insertion_point(field_list:protocol.ChainInventory.ids)
  return ids_;
}

// int64 remain_num = 2;
void ChainInventory::clear_remain_num() {
  remain_num_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ChainInventory::remain_num() const {
  // @@protoc_insertion_point(field_get:protocol.ChainInventory.remain_num)
  return remain_num_;
}
void ChainInventory::set_remain_num(::google::protobuf::int64 value) {
  
  remain_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.ChainInventory.remain_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockInventory_BlockId::kHashFieldNumber;
const int BlockInventory_BlockId::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockInventory_BlockId::BlockInventory_BlockId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BlockInventory.BlockId)
}
BlockInventory_BlockId::BlockInventory_BlockId(const BlockInventory_BlockId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  number_ = from.number_;
  // @@protoc_insertion_point(copy_constructor:protocol.BlockInventory.BlockId)
}

void BlockInventory_BlockId::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

BlockInventory_BlockId::~BlockInventory_BlockId() {
  // @@protoc_insertion_point(destructor:protocol.BlockInventory.BlockId)
  SharedDtor();
}

void BlockInventory_BlockId::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlockInventory_BlockId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockInventory_BlockId::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockInventory_BlockId& BlockInventory_BlockId::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockInventory_BlockId* BlockInventory_BlockId::New(::google::protobuf::Arena* arena) const {
  BlockInventory_BlockId* n = new BlockInventory_BlockId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockInventory_BlockId::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BlockInventory.BlockId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool BlockInventory_BlockId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BlockInventory.BlockId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BlockInventory.BlockId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BlockInventory.BlockId)
  return false;
#undef DO_
}

void BlockInventory_BlockId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BlockInventory.BlockId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->hash(), output);
  }

  // int64 number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BlockInventory.BlockId)
}

::google::protobuf::uint8* BlockInventory_BlockId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BlockInventory.BlockId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->hash(), target);
  }

  // int64 number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BlockInventory.BlockId)
  return target;
}

size_t BlockInventory_BlockId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BlockInventory.BlockId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // int64 number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockInventory_BlockId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BlockInventory.BlockId)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockInventory_BlockId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockInventory_BlockId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BlockInventory.BlockId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BlockInventory.BlockId)
    MergeFrom(*source);
  }
}

void BlockInventory_BlockId::MergeFrom(const BlockInventory_BlockId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BlockInventory.BlockId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void BlockInventory_BlockId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BlockInventory.BlockId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockInventory_BlockId::CopyFrom(const BlockInventory_BlockId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BlockInventory.BlockId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockInventory_BlockId::IsInitialized() const {
  return true;
}

void BlockInventory_BlockId::Swap(BlockInventory_BlockId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockInventory_BlockId::InternalSwap(BlockInventory_BlockId* other) {
  using std::swap;
  hash_.Swap(&other->hash_);
  swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockInventory_BlockId::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockInventory_BlockId

// bytes hash = 1;
void BlockInventory_BlockId::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockInventory_BlockId::hash() const {
  // @@protoc_insertion_point(field_get:protocol.BlockInventory.BlockId.hash)
  return hash_.GetNoArena();
}
void BlockInventory_BlockId::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.BlockInventory.BlockId.hash)
}
#if LANG_CXX11
void BlockInventory_BlockId::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.BlockInventory.BlockId.hash)
}
#endif
void BlockInventory_BlockId::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.BlockInventory.BlockId.hash)
}
void BlockInventory_BlockId::set_hash(const void* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.BlockInventory.BlockId.hash)
}
::std::string* BlockInventory_BlockId::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:protocol.BlockInventory.BlockId.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockInventory_BlockId::release_hash() {
  // @@protoc_insertion_point(field_release:protocol.BlockInventory.BlockId.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockInventory_BlockId::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:protocol.BlockInventory.BlockId.hash)
}

// int64 number = 2;
void BlockInventory_BlockId::clear_number() {
  number_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BlockInventory_BlockId::number() const {
  // @@protoc_insertion_point(field_get:protocol.BlockInventory.BlockId.number)
  return number_;
}
void BlockInventory_BlockId::set_number(::google::protobuf::int64 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:protocol.BlockInventory.BlockId.number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockInventory::kIdsFieldNumber;
const int BlockInventory::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockInventory::BlockInventory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BlockInventory)
}
BlockInventory::BlockInventory(const BlockInventory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ids_(from.ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:protocol.BlockInventory)
}

void BlockInventory::SharedCtor() {
  type_ = 0;
  _cached_size_ = 0;
}

BlockInventory::~BlockInventory() {
  // @@protoc_insertion_point(destructor:protocol.BlockInventory)
  SharedDtor();
}

void BlockInventory::SharedDtor() {
}

void BlockInventory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockInventory::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockInventory& BlockInventory::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockInventory* BlockInventory::New(::google::protobuf::Arena* arena) const {
  BlockInventory* n = new BlockInventory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BlockInventory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ids_.Clear();
  type_ = 0;
  _internal_metadata_.Clear();
}

bool BlockInventory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BlockInventory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.BlockInventory.BlockId ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.BlockInventory.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::protocol::BlockInventory_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BlockInventory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BlockInventory)
  return false;
#undef DO_
}

void BlockInventory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BlockInventory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.BlockInventory.BlockId ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ids(static_cast<int>(i)), output);
  }

  // .protocol.BlockInventory.Type type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BlockInventory)
}

::google::protobuf::uint8* BlockInventory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BlockInventory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.BlockInventory.BlockId ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ids(static_cast<int>(i)), deterministic, target);
  }

  // .protocol.BlockInventory.Type type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BlockInventory)
  return target;
}

size_t BlockInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BlockInventory)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.BlockInventory.BlockId ids = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ids(static_cast<int>(i)));
    }
  }

  // .protocol.BlockInventory.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockInventory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BlockInventory)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockInventory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockInventory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BlockInventory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BlockInventory)
    MergeFrom(*source);
  }
}

void BlockInventory::MergeFrom(const BlockInventory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BlockInventory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ids_.MergeFrom(from.ids_);
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void BlockInventory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BlockInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockInventory::CopyFrom(const BlockInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BlockInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockInventory::IsInitialized() const {
  return true;
}

void BlockInventory::Swap(BlockInventory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockInventory::InternalSwap(BlockInventory* other) {
  using std::swap;
  ids_.InternalSwap(&other->ids_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockInventory::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockInventory

// repeated .protocol.BlockInventory.BlockId ids = 1;
int BlockInventory::ids_size() const {
  return ids_.size();
}
void BlockInventory::clear_ids() {
  ids_.Clear();
}
const ::protocol::BlockInventory_BlockId& BlockInventory::ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.BlockInventory.ids)
  return ids_.Get(index);
}
::protocol::BlockInventory_BlockId* BlockInventory::mutable_ids(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.BlockInventory.ids)
  return ids_.Mutable(index);
}
::protocol::BlockInventory_BlockId* BlockInventory::add_ids() {
  // @@protoc_insertion_point(field_add:protocol.BlockInventory.ids)
  return ids_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::BlockInventory_BlockId >*
BlockInventory::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:protocol.BlockInventory.ids)
  return &ids_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::BlockInventory_BlockId >&
BlockInventory::ids() const {
  // @@protoc_insertion_point(field_list:protocol.BlockInventory.ids)
  return ids_;
}

// .protocol.BlockInventory.Type type = 2;
void BlockInventory::clear_type() {
  type_ = 0;
}
::protocol::BlockInventory_Type BlockInventory::type() const {
  // @@protoc_insertion_point(field_get:protocol.BlockInventory.type)
  return static_cast< ::protocol::BlockInventory_Type >(type_);
}
void BlockInventory::set_type(::protocol::BlockInventory_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.BlockInventory.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Inventory::kTypeFieldNumber;
const int Inventory::kIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Inventory::Inventory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Inventory)
}
Inventory::Inventory(const Inventory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ids_(from.ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:protocol.Inventory)
}

void Inventory::SharedCtor() {
  type_ = 0;
  _cached_size_ = 0;
}

Inventory::~Inventory() {
  // @@protoc_insertion_point(destructor:protocol.Inventory)
  SharedDtor();
}

void Inventory::SharedDtor() {
}

void Inventory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Inventory::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Inventory& Inventory::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Inventory* Inventory::New(::google::protobuf::Arena* arena) const {
  Inventory* n = new Inventory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Inventory::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Inventory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ids_.Clear();
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Inventory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Inventory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.Inventory.InventoryType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::protocol::Inventory_InventoryType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Inventory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Inventory)
  return false;
#undef DO_
}

void Inventory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Inventory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Inventory.InventoryType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated bytes ids = 2;
  for (int i = 0, n = this->ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Inventory)
}

::google::protobuf::uint8* Inventory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Inventory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Inventory.InventoryType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated bytes ids = 2;
  for (int i = 0, n = this->ids_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->ids(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Inventory)
  return target;
}

size_t Inventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Inventory)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes ids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ids_size());
  for (int i = 0, n = this->ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->ids(i));
  }

  // .protocol.Inventory.InventoryType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Inventory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Inventory)
  GOOGLE_DCHECK_NE(&from, this);
  const Inventory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Inventory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Inventory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Inventory)
    MergeFrom(*source);
  }
}

void Inventory::MergeFrom(const Inventory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Inventory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ids_.MergeFrom(from.ids_);
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Inventory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Inventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Inventory::CopyFrom(const Inventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Inventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Inventory::IsInitialized() const {
  return true;
}

void Inventory::Swap(Inventory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Inventory::InternalSwap(Inventory* other) {
  using std::swap;
  ids_.InternalSwap(&other->ids_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Inventory::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Inventory

// .protocol.Inventory.InventoryType type = 1;
void Inventory::clear_type() {
  type_ = 0;
}
::protocol::Inventory_InventoryType Inventory::type() const {
  // @@protoc_insertion_point(field_get:protocol.Inventory.type)
  return static_cast< ::protocol::Inventory_InventoryType >(type_);
}
void Inventory::set_type(::protocol::Inventory_InventoryType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.Inventory.type)
}

// repeated bytes ids = 2;
int Inventory::ids_size() const {
  return ids_.size();
}
void Inventory::clear_ids() {
  ids_.Clear();
}
const ::std::string& Inventory::ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Inventory.ids)
  return ids_.Get(index);
}
::std::string* Inventory::mutable_ids(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Inventory.ids)
  return ids_.Mutable(index);
}
void Inventory::set_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.Inventory.ids)
  ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Inventory::set_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:protocol.Inventory.ids)
  ids_.Mutable(index)->assign(std::move(value));
}
#endif
void Inventory::set_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.Inventory.ids)
}
void Inventory::set_ids(int index, const void* value, size_t size) {
  ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.Inventory.ids)
}
::std::string* Inventory::add_ids() {
  // @@protoc_insertion_point(field_add_mutable:protocol.Inventory.ids)
  return ids_.Add();
}
void Inventory::add_ids(const ::std::string& value) {
  ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.Inventory.ids)
}
#if LANG_CXX11
void Inventory::add_ids(::std::string&& value) {
  ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.Inventory.ids)
}
#endif
void Inventory::add_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.Inventory.ids)
}
void Inventory::add_ids(const void* value, size_t size) {
  ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.Inventory.ids)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Inventory::ids() const {
  // @@protoc_insertion_point(field_list:protocol.Inventory.ids)
  return ids_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Inventory::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Inventory.ids)
  return &ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Items::kTypeFieldNumber;
const int Items::kBlocksFieldNumber;
const int Items::kBlockHeadersFieldNumber;
const int Items::kTransactionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Items::Items()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Items)
}
Items::Items(const Items& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blocks_(from.blocks_),
      block_headers_(from.block_headers_),
      transactions_(from.transactions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:protocol.Items)
}

void Items::SharedCtor() {
  type_ = 0;
  _cached_size_ = 0;
}

Items::~Items() {
  // @@protoc_insertion_point(destructor:protocol.Items)
  SharedDtor();
}

void Items::SharedDtor() {
}

void Items::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Items::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Items& Items::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

Items* Items::New(::google::protobuf::Arena* arena) const {
  Items* n = new Items;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Items::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Items)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blocks_.Clear();
  block_headers_.Clear();
  transactions_.Clear();
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Items::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Items)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.Items.ItemType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::protocol::Items_ItemType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.Block blocks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.BlockHeader block_headers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_block_headers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.Transaction transactions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_transactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Items)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Items)
  return false;
#undef DO_
}

void Items::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Items)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Items.ItemType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated .protocol.Block blocks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->blocks(static_cast<int>(i)), output);
  }

  // repeated .protocol.BlockHeader block_headers = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_headers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->block_headers(static_cast<int>(i)), output);
  }

  // repeated .protocol.Transaction transactions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transactions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->transactions(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Items)
}

::google::protobuf::uint8* Items::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Items)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Items.ItemType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated .protocol.Block blocks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->blocks(static_cast<int>(i)), deterministic, target);
  }

  // repeated .protocol.BlockHeader block_headers = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_headers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->block_headers(static_cast<int>(i)), deterministic, target);
  }

  // repeated .protocol.Transaction transactions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transactions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->transactions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Items)
  return target;
}

size_t Items::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Items)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.Block blocks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blocks(static_cast<int>(i)));
    }
  }

  // repeated .protocol.BlockHeader block_headers = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->block_headers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->block_headers(static_cast<int>(i)));
    }
  }

  // repeated .protocol.Transaction transactions = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->transactions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transactions(static_cast<int>(i)));
    }
  }

  // .protocol.Items.ItemType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Items::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Items)
  GOOGLE_DCHECK_NE(&from, this);
  const Items* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Items>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Items)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Items)
    MergeFrom(*source);
  }
}

void Items::MergeFrom(const Items& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Items)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  blocks_.MergeFrom(from.blocks_);
  block_headers_.MergeFrom(from.block_headers_);
  transactions_.MergeFrom(from.transactions_);
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Items::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Items)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Items::CopyFrom(const Items& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Items)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Items::IsInitialized() const {
  return true;
}

void Items::Swap(Items* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Items::InternalSwap(Items* other) {
  using std::swap;
  blocks_.InternalSwap(&other->blocks_);
  block_headers_.InternalSwap(&other->block_headers_);
  transactions_.InternalSwap(&other->transactions_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Items::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Items

// .protocol.Items.ItemType type = 1;
void Items::clear_type() {
  type_ = 0;
}
::protocol::Items_ItemType Items::type() const {
  // @@protoc_insertion_point(field_get:protocol.Items.type)
  return static_cast< ::protocol::Items_ItemType >(type_);
}
void Items::set_type(::protocol::Items_ItemType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.Items.type)
}

// repeated .protocol.Block blocks = 2;
int Items::blocks_size() const {
  return blocks_.size();
}
void Items::clear_blocks() {
  blocks_.Clear();
}
const ::protocol::Block& Items::blocks(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Items.blocks)
  return blocks_.Get(index);
}
::protocol::Block* Items::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Items.blocks)
  return blocks_.Mutable(index);
}
::protocol::Block* Items::add_blocks() {
  // @@protoc_insertion_point(field_add:protocol.Items.blocks)
  return blocks_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Block >*
Items::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Items.blocks)
  return &blocks_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Block >&
Items::blocks() const {
  // @@protoc_insertion_point(field_list:protocol.Items.blocks)
  return blocks_;
}

// repeated .protocol.BlockHeader block_headers = 3;
int Items::block_headers_size() const {
  return block_headers_.size();
}
void Items::clear_block_headers() {
  block_headers_.Clear();
}
const ::protocol::BlockHeader& Items::block_headers(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Items.block_headers)
  return block_headers_.Get(index);
}
::protocol::BlockHeader* Items::mutable_block_headers(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Items.block_headers)
  return block_headers_.Mutable(index);
}
::protocol::BlockHeader* Items::add_block_headers() {
  // @@protoc_insertion_point(field_add:protocol.Items.block_headers)
  return block_headers_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::BlockHeader >*
Items::mutable_block_headers() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Items.block_headers)
  return &block_headers_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::BlockHeader >&
Items::block_headers() const {
  // @@protoc_insertion_point(field_list:protocol.Items.block_headers)
  return block_headers_;
}

// repeated .protocol.Transaction transactions = 4;
int Items::transactions_size() const {
  return transactions_.size();
}
void Items::clear_transactions() {
  transactions_.Clear();
}
const ::protocol::Transaction& Items::transactions(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Items.transactions)
  return transactions_.Get(index);
}
::protocol::Transaction* Items::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Items.transactions)
  return transactions_.Mutable(index);
}
::protocol::Transaction* Items::add_transactions() {
  // @@protoc_insertion_point(field_add:protocol.Items.transactions)
  return transactions_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::Transaction >*
Items::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Items.transactions)
  return &transactions_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::Transaction >&
Items::transactions() const {
  // @@protoc_insertion_point(field_list:protocol.Items.transactions)
  return transactions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynamicProperties::kLastSolidityBlockNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynamicProperties::DynamicProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.DynamicProperties)
}
DynamicProperties::DynamicProperties(const DynamicProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  last_solidity_block_num_ = from.last_solidity_block_num_;
  // @@protoc_insertion_point(copy_constructor:protocol.DynamicProperties)
}

void DynamicProperties::SharedCtor() {
  last_solidity_block_num_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

DynamicProperties::~DynamicProperties() {
  // @@protoc_insertion_point(destructor:protocol.DynamicProperties)
  SharedDtor();
}

void DynamicProperties::SharedDtor() {
}

void DynamicProperties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DynamicProperties::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DynamicProperties& DynamicProperties::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

DynamicProperties* DynamicProperties::New(::google::protobuf::Arena* arena) const {
  DynamicProperties* n = new DynamicProperties;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DynamicProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.DynamicProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  last_solidity_block_num_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool DynamicProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.DynamicProperties)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 last_solidity_block_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_solidity_block_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.DynamicProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.DynamicProperties)
  return false;
#undef DO_
}

void DynamicProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.DynamicProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 last_solidity_block_num = 1;
  if (this->last_solidity_block_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->last_solidity_block_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.DynamicProperties)
}

::google::protobuf::uint8* DynamicProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.DynamicProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 last_solidity_block_num = 1;
  if (this->last_solidity_block_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->last_solidity_block_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.DynamicProperties)
  return target;
}

size_t DynamicProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.DynamicProperties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 last_solidity_block_num = 1;
  if (this->last_solidity_block_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->last_solidity_block_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DynamicProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.DynamicProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const DynamicProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DynamicProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.DynamicProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.DynamicProperties)
    MergeFrom(*source);
  }
}

void DynamicProperties::MergeFrom(const DynamicProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.DynamicProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.last_solidity_block_num() != 0) {
    set_last_solidity_block_num(from.last_solidity_block_num());
  }
}

void DynamicProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.DynamicProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicProperties::CopyFrom(const DynamicProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.DynamicProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicProperties::IsInitialized() const {
  return true;
}

void DynamicProperties::Swap(DynamicProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DynamicProperties::InternalSwap(DynamicProperties* other) {
  using std::swap;
  swap(last_solidity_block_num_, other->last_solidity_block_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DynamicProperties::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DynamicProperties

// int64 last_solidity_block_num = 1;
void DynamicProperties::clear_last_solidity_block_num() {
  last_solidity_block_num_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 DynamicProperties::last_solidity_block_num() const {
  // @@protoc_insertion_point(field_get:protocol.DynamicProperties.last_solidity_block_num)
  return last_solidity_block_num_;
}
void DynamicProperties::set_last_solidity_block_num(::google::protobuf::int64 value) {
  
  last_solidity_block_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.DynamicProperties.last_solidity_block_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisconnectMessage::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisconnectMessage::DisconnectMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.DisconnectMessage)
}
DisconnectMessage::DisconnectMessage(const DisconnectMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:protocol.DisconnectMessage)
}

void DisconnectMessage::SharedCtor() {
  reason_ = 0;
  _cached_size_ = 0;
}

DisconnectMessage::~DisconnectMessage() {
  // @@protoc_insertion_point(destructor:protocol.DisconnectMessage)
  SharedDtor();
}

void DisconnectMessage::SharedDtor() {
}

void DisconnectMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisconnectMessage::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisconnectMessage& DisconnectMessage::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisconnectMessage* DisconnectMessage::New(::google::protobuf::Arena* arena) const {
  DisconnectMessage* n = new DisconnectMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisconnectMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.DisconnectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = 0;
  _internal_metadata_.Clear();
}

bool DisconnectMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.DisconnectMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.ReasonCode reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::protocol::ReasonCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.DisconnectMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.DisconnectMessage)
  return false;
#undef DO_
}

void DisconnectMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.DisconnectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.ReasonCode reason = 1;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.DisconnectMessage)
}

::google::protobuf::uint8* DisconnectMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.DisconnectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.ReasonCode reason = 1;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.DisconnectMessage)
  return target;
}

size_t DisconnectMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.DisconnectMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .protocol.ReasonCode reason = 1;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisconnectMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.DisconnectMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const DisconnectMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisconnectMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.DisconnectMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.DisconnectMessage)
    MergeFrom(*source);
  }
}

void DisconnectMessage::MergeFrom(const DisconnectMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.DisconnectMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void DisconnectMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.DisconnectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisconnectMessage::CopyFrom(const DisconnectMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.DisconnectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisconnectMessage::IsInitialized() const {
  return true;
}

void DisconnectMessage::Swap(DisconnectMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisconnectMessage::InternalSwap(DisconnectMessage* other) {
  using std::swap;
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisconnectMessage::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisconnectMessage

// .protocol.ReasonCode reason = 1;
void DisconnectMessage::clear_reason() {
  reason_ = 0;
}
::protocol::ReasonCode DisconnectMessage::reason() const {
  // @@protoc_insertion_point(field_get:protocol.DisconnectMessage.reason)
  return static_cast< ::protocol::ReasonCode >(reason_);
}
void DisconnectMessage::set_reason(::protocol::ReasonCode value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:protocol.DisconnectMessage.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloMessage_BlockId::kHashFieldNumber;
const int HelloMessage_BlockId::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloMessage_BlockId::HelloMessage_BlockId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.HelloMessage.BlockId)
}
HelloMessage_BlockId::HelloMessage_BlockId(const HelloMessage_BlockId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  number_ = from.number_;
  // @@protoc_insertion_point(copy_constructor:protocol.HelloMessage.BlockId)
}

void HelloMessage_BlockId::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

HelloMessage_BlockId::~HelloMessage_BlockId() {
  // @@protoc_insertion_point(destructor:protocol.HelloMessage.BlockId)
  SharedDtor();
}

void HelloMessage_BlockId::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HelloMessage_BlockId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloMessage_BlockId::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HelloMessage_BlockId& HelloMessage_BlockId::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

HelloMessage_BlockId* HelloMessage_BlockId::New(::google::protobuf::Arena* arena) const {
  HelloMessage_BlockId* n = new HelloMessage_BlockId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloMessage_BlockId::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.HelloMessage.BlockId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool HelloMessage_BlockId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.HelloMessage.BlockId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.HelloMessage.BlockId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.HelloMessage.BlockId)
  return false;
#undef DO_
}

void HelloMessage_BlockId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.HelloMessage.BlockId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->hash(), output);
  }

  // int64 number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.HelloMessage.BlockId)
}

::google::protobuf::uint8* HelloMessage_BlockId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.HelloMessage.BlockId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->hash(), target);
  }

  // int64 number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.HelloMessage.BlockId)
  return target;
}

size_t HelloMessage_BlockId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.HelloMessage.BlockId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // int64 number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloMessage_BlockId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.HelloMessage.BlockId)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloMessage_BlockId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloMessage_BlockId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.HelloMessage.BlockId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.HelloMessage.BlockId)
    MergeFrom(*source);
  }
}

void HelloMessage_BlockId::MergeFrom(const HelloMessage_BlockId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.HelloMessage.BlockId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void HelloMessage_BlockId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.HelloMessage.BlockId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloMessage_BlockId::CopyFrom(const HelloMessage_BlockId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.HelloMessage.BlockId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloMessage_BlockId::IsInitialized() const {
  return true;
}

void HelloMessage_BlockId::Swap(HelloMessage_BlockId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloMessage_BlockId::InternalSwap(HelloMessage_BlockId* other) {
  using std::swap;
  hash_.Swap(&other->hash_);
  swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HelloMessage_BlockId::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloMessage_BlockId

// bytes hash = 1;
void HelloMessage_BlockId::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HelloMessage_BlockId::hash() const {
  // @@protoc_insertion_point(field_get:protocol.HelloMessage.BlockId.hash)
  return hash_.GetNoArena();
}
void HelloMessage_BlockId::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.HelloMessage.BlockId.hash)
}
#if LANG_CXX11
void HelloMessage_BlockId::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.HelloMessage.BlockId.hash)
}
#endif
void HelloMessage_BlockId::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.HelloMessage.BlockId.hash)
}
void HelloMessage_BlockId::set_hash(const void* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.HelloMessage.BlockId.hash)
}
::std::string* HelloMessage_BlockId::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:protocol.HelloMessage.BlockId.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HelloMessage_BlockId::release_hash() {
  // @@protoc_insertion_point(field_release:protocol.HelloMessage.BlockId.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HelloMessage_BlockId::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:protocol.HelloMessage.BlockId.hash)
}

// int64 number = 2;
void HelloMessage_BlockId::clear_number() {
  number_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 HelloMessage_BlockId::number() const {
  // @@protoc_insertion_point(field_get:protocol.HelloMessage.BlockId.number)
  return number_;
}
void HelloMessage_BlockId::set_number(::google::protobuf::int64 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:protocol.HelloMessage.BlockId.number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloMessage::kFromFieldNumber;
const int HelloMessage::kVersionFieldNumber;
const int HelloMessage::kTimestampFieldNumber;
const int HelloMessage::kGenesisBlockIdFieldNumber;
const int HelloMessage::kSolidBlockIdFieldNumber;
const int HelloMessage::kHeadBlockIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloMessage::HelloMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fTron_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.HelloMessage)
}
HelloMessage::HelloMessage(const HelloMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_from()) {
    from_ = new ::protocol::Endpoint(*from.from_);
  } else {
    from_ = NULL;
  }
  if (from.has_genesisblockid()) {
    genesisblockid_ = new ::protocol::HelloMessage_BlockId(*from.genesisblockid_);
  } else {
    genesisblockid_ = NULL;
  }
  if (from.has_solidblockid()) {
    solidblockid_ = new ::protocol::HelloMessage_BlockId(*from.solidblockid_);
  } else {
    solidblockid_ = NULL;
  }
  if (from.has_headblockid()) {
    headblockid_ = new ::protocol::HelloMessage_BlockId(*from.headblockid_);
  } else {
    headblockid_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:protocol.HelloMessage)
}

void HelloMessage::SharedCtor() {
  ::memset(&from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&from_)) + sizeof(version_));
  _cached_size_ = 0;
}

HelloMessage::~HelloMessage() {
  // @@protoc_insertion_point(destructor:protocol.HelloMessage)
  SharedDtor();
}

void HelloMessage::SharedDtor() {
  if (this != internal_default_instance()) delete from_;
  if (this != internal_default_instance()) delete genesisblockid_;
  if (this != internal_default_instance()) delete solidblockid_;
  if (this != internal_default_instance()) delete headblockid_;
}

void HelloMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloMessage::descriptor() {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HelloMessage& HelloMessage::default_instance() {
  protobuf_core_2fTron_2eproto::InitDefaults();
  return *internal_default_instance();
}

HelloMessage* HelloMessage::New(::google::protobuf::Arena* arena) const {
  HelloMessage* n = new HelloMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.HelloMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
  if (GetArenaNoVirtual() == NULL && genesisblockid_ != NULL) {
    delete genesisblockid_;
  }
  genesisblockid_ = NULL;
  if (GetArenaNoVirtual() == NULL && solidblockid_ != NULL) {
    delete solidblockid_;
  }
  solidblockid_ = NULL;
  if (GetArenaNoVirtual() == NULL && headblockid_ != NULL) {
    delete headblockid_;
  }
  headblockid_ = NULL;
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool HelloMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.HelloMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.Endpoint from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.HelloMessage.BlockId genesisBlockId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_genesisblockid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.HelloMessage.BlockId solidBlockId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_solidblockid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.HelloMessage.BlockId headBlockId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headblockid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.HelloMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.HelloMessage)
  return false;
#undef DO_
}

void HelloMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.HelloMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Endpoint from = 1;
  if (this->has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->from_, output);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  // int64 timestamp = 3;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->timestamp(), output);
  }

  // .protocol.HelloMessage.BlockId genesisBlockId = 4;
  if (this->has_genesisblockid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->genesisblockid_, output);
  }

  // .protocol.HelloMessage.BlockId solidBlockId = 5;
  if (this->has_solidblockid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->solidblockid_, output);
  }

  // .protocol.HelloMessage.BlockId headBlockId = 6;
  if (this->has_headblockid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->headblockid_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.HelloMessage)
}

::google::protobuf::uint8* HelloMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.HelloMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.Endpoint from = 1;
  if (this->has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->from_, deterministic, target);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  // int64 timestamp = 3;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->timestamp(), target);
  }

  // .protocol.HelloMessage.BlockId genesisBlockId = 4;
  if (this->has_genesisblockid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->genesisblockid_, deterministic, target);
  }

  // .protocol.HelloMessage.BlockId solidBlockId = 5;
  if (this->has_solidblockid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->solidblockid_, deterministic, target);
  }

  // .protocol.HelloMessage.BlockId headBlockId = 6;
  if (this->has_headblockid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->headblockid_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.HelloMessage)
  return target;
}

size_t HelloMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.HelloMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .protocol.Endpoint from = 1;
  if (this->has_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->from_);
  }

  // .protocol.HelloMessage.BlockId genesisBlockId = 4;
  if (this->has_genesisblockid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->genesisblockid_);
  }

  // .protocol.HelloMessage.BlockId solidBlockId = 5;
  if (this->has_solidblockid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->solidblockid_);
  }

  // .protocol.HelloMessage.BlockId headBlockId = 6;
  if (this->has_headblockid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->headblockid_);
  }

  // int64 timestamp = 3;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // int32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.HelloMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.HelloMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.HelloMessage)
    MergeFrom(*source);
  }
}

void HelloMessage::MergeFrom(const HelloMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.HelloMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_from()) {
    mutable_from()->::protocol::Endpoint::MergeFrom(from.from());
  }
  if (from.has_genesisblockid()) {
    mutable_genesisblockid()->::protocol::HelloMessage_BlockId::MergeFrom(from.genesisblockid());
  }
  if (from.has_solidblockid()) {
    mutable_solidblockid()->::protocol::HelloMessage_BlockId::MergeFrom(from.solidblockid());
  }
  if (from.has_headblockid()) {
    mutable_headblockid()->::protocol::HelloMessage_BlockId::MergeFrom(from.headblockid());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void HelloMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.HelloMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloMessage::CopyFrom(const HelloMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.HelloMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloMessage::IsInitialized() const {
  return true;
}

void HelloMessage::Swap(HelloMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloMessage::InternalSwap(HelloMessage* other) {
  using std::swap;
  swap(from_, other->from_);
  swap(genesisblockid_, other->genesisblockid_);
  swap(solidblockid_, other->solidblockid_);
  swap(headblockid_, other->headblockid_);
  swap(timestamp_, other->timestamp_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HelloMessage::GetMetadata() const {
  protobuf_core_2fTron_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fTron_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloMessage

// .protocol.Endpoint from = 1;
bool HelloMessage::has_from() const {
  return this != internal_default_instance() && from_ != NULL;
}
void HelloMessage::clear_from() {
  if (GetArenaNoVirtual() == NULL && from_ != NULL) delete from_;
  from_ = NULL;
}
const ::protocol::Endpoint& HelloMessage::from() const {
  const ::protocol::Endpoint* p = from_;
  // @@protoc_insertion_point(field_get:protocol.HelloMessage.from)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::Endpoint*>(
      &::protocol::_Endpoint_default_instance_);
}
::protocol::Endpoint* HelloMessage::mutable_from() {
  
  if (from_ == NULL) {
    from_ = new ::protocol::Endpoint;
  }
  // @@protoc_insertion_point(field_mutable:protocol.HelloMessage.from)
  return from_;
}
::protocol::Endpoint* HelloMessage::release_from() {
  // @@protoc_insertion_point(field_release:protocol.HelloMessage.from)
  
  ::protocol::Endpoint* temp = from_;
  from_ = NULL;
  return temp;
}
void HelloMessage::set_allocated_from(::protocol::Endpoint* from) {
  delete from_;
  from_ = from;
  if (from) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.HelloMessage.from)
}

// int32 version = 2;
void HelloMessage::clear_version() {
  version_ = 0;
}
::google::protobuf::int32 HelloMessage::version() const {
  // @@protoc_insertion_point(field_get:protocol.HelloMessage.version)
  return version_;
}
void HelloMessage::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:protocol.HelloMessage.version)
}

// int64 timestamp = 3;
void HelloMessage::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 HelloMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:protocol.HelloMessage.timestamp)
  return timestamp_;
}
void HelloMessage::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:protocol.HelloMessage.timestamp)
}

// .protocol.HelloMessage.BlockId genesisBlockId = 4;
bool HelloMessage::has_genesisblockid() const {
  return this != internal_default_instance() && genesisblockid_ != NULL;
}
void HelloMessage::clear_genesisblockid() {
  if (GetArenaNoVirtual() == NULL && genesisblockid_ != NULL) delete genesisblockid_;
  genesisblockid_ = NULL;
}
const ::protocol::HelloMessage_BlockId& HelloMessage::genesisblockid() const {
  const ::protocol::HelloMessage_BlockId* p = genesisblockid_;
  // @@protoc_insertion_point(field_get:protocol.HelloMessage.genesisBlockId)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::HelloMessage_BlockId*>(
      &::protocol::_HelloMessage_BlockId_default_instance_);
}
::protocol::HelloMessage_BlockId* HelloMessage::mutable_genesisblockid() {
  
  if (genesisblockid_ == NULL) {
    genesisblockid_ = new ::protocol::HelloMessage_BlockId;
  }
  // @@protoc_insertion_point(field_mutable:protocol.HelloMessage.genesisBlockId)
  return genesisblockid_;
}
::protocol::HelloMessage_BlockId* HelloMessage::release_genesisblockid() {
  // @@protoc_insertion_point(field_release:protocol.HelloMessage.genesisBlockId)
  
  ::protocol::HelloMessage_BlockId* temp = genesisblockid_;
  genesisblockid_ = NULL;
  return temp;
}
void HelloMessage::set_allocated_genesisblockid(::protocol::HelloMessage_BlockId* genesisblockid) {
  delete genesisblockid_;
  genesisblockid_ = genesisblockid;
  if (genesisblockid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.HelloMessage.genesisBlockId)
}

// .protocol.HelloMessage.BlockId solidBlockId = 5;
bool HelloMessage::has_solidblockid() const {
  return this != internal_default_instance() && solidblockid_ != NULL;
}
void HelloMessage::clear_solidblockid() {
  if (GetArenaNoVirtual() == NULL && solidblockid_ != NULL) delete solidblockid_;
  solidblockid_ = NULL;
}
const ::protocol::HelloMessage_BlockId& HelloMessage::solidblockid() const {
  const ::protocol::HelloMessage_BlockId* p = solidblockid_;
  // @@protoc_insertion_point(field_get:protocol.HelloMessage.solidBlockId)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::HelloMessage_BlockId*>(
      &::protocol::_HelloMessage_BlockId_default_instance_);
}
::protocol::HelloMessage_BlockId* HelloMessage::mutable_solidblockid() {
  
  if (solidblockid_ == NULL) {
    solidblockid_ = new ::protocol::HelloMessage_BlockId;
  }
  // @@protoc_insertion_point(field_mutable:protocol.HelloMessage.solidBlockId)
  return solidblockid_;
}
::protocol::HelloMessage_BlockId* HelloMessage::release_solidblockid() {
  // @@protoc_insertion_point(field_release:protocol.HelloMessage.solidBlockId)
  
  ::protocol::HelloMessage_BlockId* temp = solidblockid_;
  solidblockid_ = NULL;
  return temp;
}
void HelloMessage::set_allocated_solidblockid(::protocol::HelloMessage_BlockId* solidblockid) {
  delete solidblockid_;
  solidblockid_ = solidblockid;
  if (solidblockid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.HelloMessage.solidBlockId)
}

// .protocol.HelloMessage.BlockId headBlockId = 6;
bool HelloMessage::has_headblockid() const {
  return this != internal_default_instance() && headblockid_ != NULL;
}
void HelloMessage::clear_headblockid() {
  if (GetArenaNoVirtual() == NULL && headblockid_ != NULL) delete headblockid_;
  headblockid_ = NULL;
}
const ::protocol::HelloMessage_BlockId& HelloMessage::headblockid() const {
  const ::protocol::HelloMessage_BlockId* p = headblockid_;
  // @@protoc_insertion_point(field_get:protocol.HelloMessage.headBlockId)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::HelloMessage_BlockId*>(
      &::protocol::_HelloMessage_BlockId_default_instance_);
}
::protocol::HelloMessage_BlockId* HelloMessage::mutable_headblockid() {
  
  if (headblockid_ == NULL) {
    headblockid_ = new ::protocol::HelloMessage_BlockId;
  }
  // @@protoc_insertion_point(field_mutable:protocol.HelloMessage.headBlockId)
  return headblockid_;
}
::protocol::HelloMessage_BlockId* HelloMessage::release_headblockid() {
  // @@protoc_insertion_point(field_release:protocol.HelloMessage.headBlockId)
  
  ::protocol::HelloMessage_BlockId* temp = headblockid_;
  headblockid_ = NULL;
  return temp;
}
void HelloMessage::set_allocated_headblockid(::protocol::HelloMessage_BlockId* headblockid) {
  delete headblockid_;
  headblockid_ = headblockid;
  if (headblockid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.HelloMessage.headBlockId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

// @@protoc_insertion_point(global_scope)
