// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/TronInventoryItems.proto

#ifndef PROTOBUF_core_2fTronInventoryItems_2eproto__INCLUDED
#define PROTOBUF_core_2fTronInventoryItems_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace protocol {
class InventoryItems;
class InventoryItemsDefaultTypeInternal;
extern InventoryItemsDefaultTypeInternal _InventoryItems_default_instance_;
}  // namespace protocol

namespace protocol {

namespace protobuf_core_2fTronInventoryItems_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_core_2fTronInventoryItems_2eproto

// ===================================================================

class InventoryItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.InventoryItems) */ {
 public:
  InventoryItems();
  virtual ~InventoryItems();

  InventoryItems(const InventoryItems& from);

  inline InventoryItems& operator=(const InventoryItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InventoryItems(InventoryItems&& from) noexcept
    : InventoryItems() {
    *this = ::std::move(from);
  }

  inline InventoryItems& operator=(InventoryItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InventoryItems& default_instance();

  static inline const InventoryItems* internal_default_instance() {
    return reinterpret_cast<const InventoryItems*>(
               &_InventoryItems_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(InventoryItems* other);
  friend void swap(InventoryItems& a, InventoryItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InventoryItems* New() const PROTOBUF_FINAL { return New(NULL); }

  InventoryItems* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InventoryItems& from);
  void MergeFrom(const InventoryItems& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InventoryItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  const ::std::string& items(int index) const;
  ::std::string* mutable_items(int index);
  void set_items(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_items(int index, ::std::string&& value);
  #endif
  void set_items(int index, const char* value);
  void set_items(int index, const void* value, size_t size);
  ::std::string* add_items();
  void add_items(const ::std::string& value);
  #if LANG_CXX11
  void add_items(::std::string&& value);
  #endif
  void add_items(const char* value);
  void add_items(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& items() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_items();

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.InventoryItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> items_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct protobuf_core_2fTronInventoryItems_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InventoryItems

// int32 type = 1;
inline void InventoryItems::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 InventoryItems::type() const {
  // @@protoc_insertion_point(field_get:protocol.InventoryItems.type)
  return type_;
}
inline void InventoryItems::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.InventoryItems.type)
}

// repeated bytes items = 2;
inline int InventoryItems::items_size() const {
  return items_.size();
}
inline void InventoryItems::clear_items() {
  items_.Clear();
}
inline const ::std::string& InventoryItems::items(int index) const {
  // @@protoc_insertion_point(field_get:protocol.InventoryItems.items)
  return items_.Get(index);
}
inline ::std::string* InventoryItems::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.InventoryItems.items)
  return items_.Mutable(index);
}
inline void InventoryItems::set_items(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.InventoryItems.items)
  items_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void InventoryItems::set_items(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:protocol.InventoryItems.items)
  items_.Mutable(index)->assign(std::move(value));
}
#endif
inline void InventoryItems::set_items(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  items_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.InventoryItems.items)
}
inline void InventoryItems::set_items(int index, const void* value, size_t size) {
  items_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.InventoryItems.items)
}
inline ::std::string* InventoryItems::add_items() {
  // @@protoc_insertion_point(field_add_mutable:protocol.InventoryItems.items)
  return items_.Add();
}
inline void InventoryItems::add_items(const ::std::string& value) {
  items_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.InventoryItems.items)
}
#if LANG_CXX11
inline void InventoryItems::add_items(::std::string&& value) {
  items_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.InventoryItems.items)
}
#endif
inline void InventoryItems::add_items(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  items_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.InventoryItems.items)
}
inline void InventoryItems::add_items(const void* value, size_t size) {
  items_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.InventoryItems.items)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
InventoryItems::items() const {
  // @@protoc_insertion_point(field_list:protocol.InventoryItems.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
InventoryItems::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:protocol.InventoryItems.items)
  return &items_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_core_2fTronInventoryItems_2eproto__INCLUDED
