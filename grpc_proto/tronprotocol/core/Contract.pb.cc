// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/Contract.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "core/Contract.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protocol {
class AccountCreateContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AccountCreateContract>
     _instance;
} _AccountCreateContract_default_instance_;
class AccountUpdateContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AccountUpdateContract>
     _instance;
} _AccountUpdateContract_default_instance_;
class TransferContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TransferContract>
     _instance;
} _TransferContract_default_instance_;
class TransferAssetContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TransferAssetContract>
     _instance;
} _TransferAssetContract_default_instance_;
class VoteAssetContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<VoteAssetContract>
     _instance;
} _VoteAssetContract_default_instance_;
class VoteWitnessContract_VoteDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<VoteWitnessContract_Vote>
     _instance;
} _VoteWitnessContract_Vote_default_instance_;
class VoteWitnessContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<VoteWitnessContract>
     _instance;
} _VoteWitnessContract_default_instance_;
class WitnessCreateContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WitnessCreateContract>
     _instance;
} _WitnessCreateContract_default_instance_;
class WitnessUpdateContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WitnessUpdateContract>
     _instance;
} _WitnessUpdateContract_default_instance_;
class AssetIssueContract_FrozenSupplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AssetIssueContract_FrozenSupply>
     _instance;
} _AssetIssueContract_FrozenSupply_default_instance_;
class AssetIssueContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AssetIssueContract>
     _instance;
} _AssetIssueContract_default_instance_;
class ParticipateAssetIssueContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParticipateAssetIssueContract>
     _instance;
} _ParticipateAssetIssueContract_default_instance_;
class DeployContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeployContract>
     _instance;
} _DeployContract_default_instance_;
class FreezeBalanceContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FreezeBalanceContract>
     _instance;
} _FreezeBalanceContract_default_instance_;
class UnfreezeBalanceContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnfreezeBalanceContract>
     _instance;
} _UnfreezeBalanceContract_default_instance_;
class UnfreezeAssetContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnfreezeAssetContract>
     _instance;
} _UnfreezeAssetContract_default_instance_;
class WithdrawBalanceContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WithdrawBalanceContract>
     _instance;
} _WithdrawBalanceContract_default_instance_;
class UpdateAssetContractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateAssetContract>
     _instance;
} _UpdateAssetContract_default_instance_;

namespace protobuf_core_2fContract_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[18];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountCreateContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountCreateContract, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountCreateContract, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountCreateContract, owner_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountUpdateContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountUpdateContract, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountUpdateContract, owner_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferContract, to_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferContract, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferAssetContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferAssetContract, asset_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferAssetContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferAssetContract, to_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferAssetContract, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteAssetContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteAssetContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteAssetContract, vote_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteAssetContract, support_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteAssetContract, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteWitnessContract_Vote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteWitnessContract_Vote, vote_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteWitnessContract_Vote, vote_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteWitnessContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteWitnessContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteWitnessContract, votes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteWitnessContract, support_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WitnessCreateContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WitnessCreateContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WitnessCreateContract, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WitnessUpdateContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WitnessUpdateContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WitnessUpdateContract, update_url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract_FrozenSupply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract_FrozenSupply, frozen_amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract_FrozenSupply, frozen_days_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, abbr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, total_supply_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, frozen_supply_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, trx_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, vote_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, free_asset_net_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, public_free_asset_net_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, public_free_asset_net_usage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetIssueContract, public_latest_free_net_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParticipateAssetIssueContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParticipateAssetIssueContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParticipateAssetIssueContract, to_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParticipateAssetIssueContract, asset_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParticipateAssetIssueContract, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeployContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeployContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeployContract, script_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreezeBalanceContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreezeBalanceContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreezeBalanceContract, frozen_balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreezeBalanceContract, frozen_duration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnfreezeBalanceContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnfreezeBalanceContract, owner_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnfreezeAssetContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnfreezeAssetContract, owner_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawBalanceContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawBalanceContract, owner_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAssetContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAssetContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAssetContract, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAssetContract, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAssetContract, new_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAssetContract, new_public_limit_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(AccountCreateContract)},
  { 8, -1, sizeof(AccountUpdateContract)},
  { 15, -1, sizeof(TransferContract)},
  { 23, -1, sizeof(TransferAssetContract)},
  { 32, -1, sizeof(VoteAssetContract)},
  { 41, -1, sizeof(VoteWitnessContract_Vote)},
  { 48, -1, sizeof(VoteWitnessContract)},
  { 56, -1, sizeof(WitnessCreateContract)},
  { 63, -1, sizeof(WitnessUpdateContract)},
  { 70, -1, sizeof(AssetIssueContract_FrozenSupply)},
  { 77, -1, sizeof(AssetIssueContract)},
  { 98, -1, sizeof(ParticipateAssetIssueContract)},
  { 107, -1, sizeof(DeployContract)},
  { 114, -1, sizeof(FreezeBalanceContract)},
  { 122, -1, sizeof(UnfreezeBalanceContract)},
  { 128, -1, sizeof(UnfreezeAssetContract)},
  { 134, -1, sizeof(WithdrawBalanceContract)},
  { 140, -1, sizeof(UpdateAssetContract)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountCreateContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountUpdateContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TransferContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TransferAssetContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VoteAssetContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VoteWitnessContract_Vote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VoteWitnessContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WitnessCreateContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WitnessUpdateContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AssetIssueContract_FrozenSupply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AssetIssueContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParticipateAssetIssueContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeployContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FreezeBalanceContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnfreezeBalanceContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnfreezeAssetContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WithdrawBalanceContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateAssetContract_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "core/Contract.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protocol::protobuf_core_2fTron_2eproto::InitDefaults();
  _AccountCreateContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AccountCreateContract_default_instance_);_AccountUpdateContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AccountUpdateContract_default_instance_);_TransferContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TransferContract_default_instance_);_TransferAssetContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TransferAssetContract_default_instance_);_VoteAssetContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VoteAssetContract_default_instance_);_VoteWitnessContract_Vote_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VoteWitnessContract_Vote_default_instance_);_VoteWitnessContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VoteWitnessContract_default_instance_);_WitnessCreateContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WitnessCreateContract_default_instance_);_WitnessUpdateContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WitnessUpdateContract_default_instance_);_AssetIssueContract_FrozenSupply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AssetIssueContract_FrozenSupply_default_instance_);_AssetIssueContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AssetIssueContract_default_instance_);_ParticipateAssetIssueContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParticipateAssetIssueContract_default_instance_);_DeployContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeployContract_default_instance_);_FreezeBalanceContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FreezeBalanceContract_default_instance_);_UnfreezeBalanceContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnfreezeBalanceContract_default_instance_);_UnfreezeAssetContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnfreezeAssetContract_default_instance_);_WithdrawBalanceContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WithdrawBalanceContract_default_instance_);_UpdateAssetContract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateAssetContract_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023core/Contract.proto\022\010protocol\032\017core/Tr"
      "on.proto\"i\n\025AccountCreateContract\022#\n\004typ"
      "e\030\001 \001(\0162\025.protocol.AccountType\022\024\n\014accoun"
      "t_name\030\002 \001(\014\022\025\n\rowner_address\030\003 \001(\014\"D\n\025A"
      "ccountUpdateContract\022\024\n\014account_name\030\001 \001"
      "(\014\022\025\n\rowner_address\030\002 \001(\014\"M\n\020TransferCon"
      "tract\022\025\n\rowner_address\030\001 \001(\014\022\022\n\nto_addre"
      "ss\030\002 \001(\014\022\016\n\006amount\030\003 \001(\003\"f\n\025TransferAsse"
      "tContract\022\022\n\nasset_name\030\001 \001(\014\022\025\n\rowner_a"
      "ddress\030\002 \001(\014\022\022\n\nto_address\030\003 \001(\014\022\016\n\006amou"
      "nt\030\004 \001(\003\"`\n\021VoteAssetContract\022\025\n\rowner_a"
      "ddress\030\001 \001(\014\022\024\n\014vote_address\030\002 \003(\014\022\017\n\007su"
      "pport\030\003 \001(\010\022\r\n\005count\030\005 \001(\005\"\242\001\n\023VoteWitne"
      "ssContract\022\025\n\rowner_address\030\001 \001(\014\0221\n\005vot"
      "es\030\002 \003(\0132\".protocol.VoteWitnessContract."
      "Vote\022\017\n\007support\030\003 \001(\010\0320\n\004Vote\022\024\n\014vote_ad"
      "dress\030\001 \001(\014\022\022\n\nvote_count\030\002 \001(\003\";\n\025Witne"
      "ssCreateContract\022\025\n\rowner_address\030\001 \001(\014\022"
      "\013\n\003url\030\002 \001(\014\"B\n\025WitnessUpdateContract\022\025\n"
      "\rowner_address\030\001 \001(\014\022\022\n\nupdate_url\030\014 \001(\014"
      "\"\342\003\n\022AssetIssueContract\022\025\n\rowner_address"
      "\030\001 \001(\014\022\014\n\004name\030\002 \001(\014\022\014\n\004abbr\030\003 \001(\014\022\024\n\014to"
      "tal_supply\030\004 \001(\003\022@\n\rfrozen_supply\030\005 \003(\0132"
      ").protocol.AssetIssueContract.FrozenSupp"
      "ly\022\017\n\007trx_num\030\006 \001(\005\022\013\n\003num\030\010 \001(\005\022\022\n\nstar"
      "t_time\030\t \001(\003\022\020\n\010end_time\030\n \001(\003\022\022\n\nvote_s"
      "core\030\020 \001(\005\022\023\n\013description\030\024 \001(\014\022\013\n\003url\030\025"
      " \001(\014\022\034\n\024free_asset_net_limit\030\026 \001(\003\022#\n\033pu"
      "blic_free_asset_net_limit\030\027 \001(\003\022#\n\033publi"
      "c_free_asset_net_usage\030\030 \001(\003\022#\n\033public_l"
      "atest_free_net_time\030\031 \001(\003\032:\n\014FrozenSuppl"
      "y\022\025\n\rfrozen_amount\030\001 \001(\003\022\023\n\013frozen_days\030"
      "\002 \001(\003\"n\n\035ParticipateAssetIssueContract\022\025"
      "\n\rowner_address\030\001 \001(\014\022\022\n\nto_address\030\002 \001("
      "\014\022\022\n\nasset_name\030\003 \001(\014\022\016\n\006amount\030\004 \001(\003\"7\n"
      "\016DeployContract\022\025\n\rowner_address\030\001 \001(\014\022\016"
      "\n\006script\030\002 \001(\014\"_\n\025FreezeBalanceContract\022"
      "\025\n\rowner_address\030\001 \001(\014\022\026\n\016frozen_balance"
      "\030\002 \001(\003\022\027\n\017frozen_duration\030\003 \001(\003\"0\n\027Unfre"
      "ezeBalanceContract\022\025\n\rowner_address\030\001 \001("
      "\014\".\n\025UnfreezeAssetContract\022\025\n\rowner_addr"
      "ess\030\001 \001(\014\"0\n\027WithdrawBalanceContract\022\025\n\r"
      "owner_address\030\001 \001(\014\"{\n\023UpdateAssetContra"
      "ct\022\025\n\rowner_address\030\001 \001(\014\022\023\n\013description"
      "\030\002 \001(\014\022\013\n\003url\030\003 \001(\014\022\021\n\tnew_limit\030\004 \001(\003\022\030"
      "\n\020new_public_limit\030\005 \001(\003BF\n\017org.tron.pro"
      "tosB\010ContractZ)github.com/tronprotocol/g"
      "rpc-gateway/coreb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1904);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "core/Contract.proto", &protobuf_RegisterTypes);
  ::protocol::protobuf_core_2fTron_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_core_2fContract_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountCreateContract::kTypeFieldNumber;
const int AccountCreateContract::kAccountNameFieldNumber;
const int AccountCreateContract::kOwnerAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountCreateContract::AccountCreateContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.AccountCreateContract)
}
AccountCreateContract::AccountCreateContract(const AccountCreateContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_name().size() > 0) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:protocol.AccountCreateContract)
}

void AccountCreateContract::SharedCtor() {
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

AccountCreateContract::~AccountCreateContract() {
  // @@protoc_insertion_point(destructor:protocol.AccountCreateContract)
  SharedDtor();
}

void AccountCreateContract::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountCreateContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountCreateContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountCreateContract& AccountCreateContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountCreateContract* AccountCreateContract::New(::google::protobuf::Arena* arena) const {
  AccountCreateContract* n = new AccountCreateContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountCreateContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.AccountCreateContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool AccountCreateContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.AccountCreateContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.AccountType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::protocol::AccountType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes account_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes owner_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.AccountCreateContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.AccountCreateContract)
  return false;
#undef DO_
}

void AccountCreateContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.AccountCreateContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.AccountType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // bytes account_name = 2;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->account_name(), output);
  }

  // bytes owner_address = 3;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->owner_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.AccountCreateContract)
}

::google::protobuf::uint8* AccountCreateContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.AccountCreateContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.AccountType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // bytes account_name = 2;
  if (this->account_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->account_name(), target);
  }

  // bytes owner_address = 3;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->owner_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.AccountCreateContract)
  return target;
}

size_t AccountCreateContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.AccountCreateContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes account_name = 2;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account_name());
  }

  // bytes owner_address = 3;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // .protocol.AccountType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountCreateContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.AccountCreateContract)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountCreateContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountCreateContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.AccountCreateContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.AccountCreateContract)
    MergeFrom(*source);
  }
}

void AccountCreateContract::MergeFrom(const AccountCreateContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.AccountCreateContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void AccountCreateContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.AccountCreateContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountCreateContract::CopyFrom(const AccountCreateContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.AccountCreateContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountCreateContract::IsInitialized() const {
  return true;
}

void AccountCreateContract::Swap(AccountCreateContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountCreateContract::InternalSwap(AccountCreateContract* other) {
  using std::swap;
  account_name_.Swap(&other->account_name_);
  owner_address_.Swap(&other->owner_address_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountCreateContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountCreateContract

// .protocol.AccountType type = 1;
void AccountCreateContract::clear_type() {
  type_ = 0;
}
::protocol::AccountType AccountCreateContract::type() const {
  // @@protoc_insertion_point(field_get:protocol.AccountCreateContract.type)
  return static_cast< ::protocol::AccountType >(type_);
}
void AccountCreateContract::set_type(::protocol::AccountType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.AccountCreateContract.type)
}

// bytes account_name = 2;
void AccountCreateContract::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountCreateContract::account_name() const {
  // @@protoc_insertion_point(field_get:protocol.AccountCreateContract.account_name)
  return account_name_.GetNoArena();
}
void AccountCreateContract::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.AccountCreateContract.account_name)
}
#if LANG_CXX11
void AccountCreateContract::set_account_name(::std::string&& value) {
  
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.AccountCreateContract.account_name)
}
#endif
void AccountCreateContract::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.AccountCreateContract.account_name)
}
void AccountCreateContract::set_account_name(const void* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.AccountCreateContract.account_name)
}
::std::string* AccountCreateContract::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:protocol.AccountCreateContract.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountCreateContract::release_account_name() {
  // @@protoc_insertion_point(field_release:protocol.AccountCreateContract.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountCreateContract::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.AccountCreateContract.account_name)
}

// bytes owner_address = 3;
void AccountCreateContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountCreateContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.AccountCreateContract.owner_address)
  return owner_address_.GetNoArena();
}
void AccountCreateContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.AccountCreateContract.owner_address)
}
#if LANG_CXX11
void AccountCreateContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.AccountCreateContract.owner_address)
}
#endif
void AccountCreateContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.AccountCreateContract.owner_address)
}
void AccountCreateContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.AccountCreateContract.owner_address)
}
::std::string* AccountCreateContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.AccountCreateContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountCreateContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.AccountCreateContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountCreateContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.AccountCreateContract.owner_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountUpdateContract::kAccountNameFieldNumber;
const int AccountUpdateContract::kOwnerAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountUpdateContract::AccountUpdateContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.AccountUpdateContract)
}
AccountUpdateContract::AccountUpdateContract(const AccountUpdateContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_name().size() > 0) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.AccountUpdateContract)
}

void AccountUpdateContract::SharedCtor() {
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AccountUpdateContract::~AccountUpdateContract() {
  // @@protoc_insertion_point(destructor:protocol.AccountUpdateContract)
  SharedDtor();
}

void AccountUpdateContract::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountUpdateContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountUpdateContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountUpdateContract& AccountUpdateContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountUpdateContract* AccountUpdateContract::New(::google::protobuf::Arena* arena) const {
  AccountUpdateContract* n = new AccountUpdateContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountUpdateContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.AccountUpdateContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AccountUpdateContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.AccountUpdateContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes account_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes owner_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.AccountUpdateContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.AccountUpdateContract)
  return false;
#undef DO_
}

void AccountUpdateContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.AccountUpdateContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account_name(), output);
  }

  // bytes owner_address = 2;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->owner_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.AccountUpdateContract)
}

::google::protobuf::uint8* AccountUpdateContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.AccountUpdateContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes account_name = 1;
  if (this->account_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account_name(), target);
  }

  // bytes owner_address = 2;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->owner_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.AccountUpdateContract)
  return target;
}

size_t AccountUpdateContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.AccountUpdateContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account_name());
  }

  // bytes owner_address = 2;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountUpdateContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.AccountUpdateContract)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountUpdateContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountUpdateContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.AccountUpdateContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.AccountUpdateContract)
    MergeFrom(*source);
  }
}

void AccountUpdateContract::MergeFrom(const AccountUpdateContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.AccountUpdateContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
}

void AccountUpdateContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.AccountUpdateContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountUpdateContract::CopyFrom(const AccountUpdateContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.AccountUpdateContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountUpdateContract::IsInitialized() const {
  return true;
}

void AccountUpdateContract::Swap(AccountUpdateContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountUpdateContract::InternalSwap(AccountUpdateContract* other) {
  using std::swap;
  account_name_.Swap(&other->account_name_);
  owner_address_.Swap(&other->owner_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountUpdateContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountUpdateContract

// bytes account_name = 1;
void AccountUpdateContract::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountUpdateContract::account_name() const {
  // @@protoc_insertion_point(field_get:protocol.AccountUpdateContract.account_name)
  return account_name_.GetNoArena();
}
void AccountUpdateContract::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.AccountUpdateContract.account_name)
}
#if LANG_CXX11
void AccountUpdateContract::set_account_name(::std::string&& value) {
  
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.AccountUpdateContract.account_name)
}
#endif
void AccountUpdateContract::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.AccountUpdateContract.account_name)
}
void AccountUpdateContract::set_account_name(const void* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.AccountUpdateContract.account_name)
}
::std::string* AccountUpdateContract::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:protocol.AccountUpdateContract.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountUpdateContract::release_account_name() {
  // @@protoc_insertion_point(field_release:protocol.AccountUpdateContract.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountUpdateContract::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.AccountUpdateContract.account_name)
}

// bytes owner_address = 2;
void AccountUpdateContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountUpdateContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.AccountUpdateContract.owner_address)
  return owner_address_.GetNoArena();
}
void AccountUpdateContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.AccountUpdateContract.owner_address)
}
#if LANG_CXX11
void AccountUpdateContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.AccountUpdateContract.owner_address)
}
#endif
void AccountUpdateContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.AccountUpdateContract.owner_address)
}
void AccountUpdateContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.AccountUpdateContract.owner_address)
}
::std::string* AccountUpdateContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.AccountUpdateContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountUpdateContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.AccountUpdateContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountUpdateContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.AccountUpdateContract.owner_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferContract::kOwnerAddressFieldNumber;
const int TransferContract::kToAddressFieldNumber;
const int TransferContract::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferContract::TransferContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.TransferContract)
}
TransferContract::TransferContract(const TransferContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  to_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_address().size() > 0) {
    to_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_address_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:protocol.TransferContract)
}

void TransferContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TransferContract::~TransferContract() {
  // @@protoc_insertion_point(destructor:protocol.TransferContract)
  SharedDtor();
}

void TransferContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferContract& TransferContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

TransferContract* TransferContract::New(::google::protobuf::Arena* arena) const {
  TransferContract* n = new TransferContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransferContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.TransferContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TransferContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.TransferContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes to_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.TransferContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.TransferContract)
  return false;
#undef DO_
}

void TransferContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.TransferContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes to_address = 2;
  if (this->to_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->to_address(), output);
  }

  // int64 amount = 3;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.TransferContract)
}

::google::protobuf::uint8* TransferContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.TransferContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes to_address = 2;
  if (this->to_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->to_address(), target);
  }

  // int64 amount = 3;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.TransferContract)
  return target;
}

size_t TransferContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.TransferContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes to_address = 2;
  if (this->to_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->to_address());
  }

  // int64 amount = 3;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.TransferContract)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.TransferContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.TransferContract)
    MergeFrom(*source);
  }
}

void TransferContract::MergeFrom(const TransferContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.TransferContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.to_address().size() > 0) {

    to_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_address_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void TransferContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.TransferContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferContract::CopyFrom(const TransferContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.TransferContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferContract::IsInitialized() const {
  return true;
}

void TransferContract::Swap(TransferContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferContract::InternalSwap(TransferContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_);
  to_address_.Swap(&other->to_address_);
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransferContract

// bytes owner_address = 1;
void TransferContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TransferContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.TransferContract.owner_address)
  return owner_address_.GetNoArena();
}
void TransferContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.TransferContract.owner_address)
}
#if LANG_CXX11
void TransferContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.TransferContract.owner_address)
}
#endif
void TransferContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.TransferContract.owner_address)
}
void TransferContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.TransferContract.owner_address)
}
::std::string* TransferContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.TransferContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TransferContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.TransferContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.TransferContract.owner_address)
}

// bytes to_address = 2;
void TransferContract::clear_to_address() {
  to_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TransferContract::to_address() const {
  // @@protoc_insertion_point(field_get:protocol.TransferContract.to_address)
  return to_address_.GetNoArena();
}
void TransferContract::set_to_address(const ::std::string& value) {
  
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.TransferContract.to_address)
}
#if LANG_CXX11
void TransferContract::set_to_address(::std::string&& value) {
  
  to_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.TransferContract.to_address)
}
#endif
void TransferContract::set_to_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.TransferContract.to_address)
}
void TransferContract::set_to_address(const void* value, size_t size) {
  
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.TransferContract.to_address)
}
::std::string* TransferContract::mutable_to_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.TransferContract.to_address)
  return to_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TransferContract::release_to_address() {
  // @@protoc_insertion_point(field_release:protocol.TransferContract.to_address)
  
  return to_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferContract::set_allocated_to_address(::std::string* to_address) {
  if (to_address != NULL) {
    
  } else {
    
  }
  to_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.TransferContract.to_address)
}

// int64 amount = 3;
void TransferContract::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferContract::amount() const {
  // @@protoc_insertion_point(field_get:protocol.TransferContract.amount)
  return amount_;
}
void TransferContract::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:protocol.TransferContract.amount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferAssetContract::kAssetNameFieldNumber;
const int TransferAssetContract::kOwnerAddressFieldNumber;
const int TransferAssetContract::kToAddressFieldNumber;
const int TransferAssetContract::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferAssetContract::TransferAssetContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.TransferAssetContract)
}
TransferAssetContract::TransferAssetContract(const TransferAssetContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  asset_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.asset_name().size() > 0) {
    asset_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_name_);
  }
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  to_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_address().size() > 0) {
    to_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_address_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:protocol.TransferAssetContract)
}

void TransferAssetContract::SharedCtor() {
  asset_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TransferAssetContract::~TransferAssetContract() {
  // @@protoc_insertion_point(destructor:protocol.TransferAssetContract)
  SharedDtor();
}

void TransferAssetContract::SharedDtor() {
  asset_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferAssetContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferAssetContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferAssetContract& TransferAssetContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

TransferAssetContract* TransferAssetContract::New(::google::protobuf::Arena* arena) const {
  TransferAssetContract* n = new TransferAssetContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransferAssetContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.TransferAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  asset_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TransferAssetContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.TransferAssetContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes asset_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_asset_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes owner_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes to_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.TransferAssetContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.TransferAssetContract)
  return false;
#undef DO_
}

void TransferAssetContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.TransferAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes asset_name = 1;
  if (this->asset_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->asset_name(), output);
  }

  // bytes owner_address = 2;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->owner_address(), output);
  }

  // bytes to_address = 3;
  if (this->to_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->to_address(), output);
  }

  // int64 amount = 4;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.TransferAssetContract)
}

::google::protobuf::uint8* TransferAssetContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.TransferAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes asset_name = 1;
  if (this->asset_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->asset_name(), target);
  }

  // bytes owner_address = 2;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->owner_address(), target);
  }

  // bytes to_address = 3;
  if (this->to_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->to_address(), target);
  }

  // int64 amount = 4;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.TransferAssetContract)
  return target;
}

size_t TransferAssetContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.TransferAssetContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes asset_name = 1;
  if (this->asset_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->asset_name());
  }

  // bytes owner_address = 2;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes to_address = 3;
  if (this->to_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->to_address());
  }

  // int64 amount = 4;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferAssetContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.TransferAssetContract)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferAssetContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferAssetContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.TransferAssetContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.TransferAssetContract)
    MergeFrom(*source);
  }
}

void TransferAssetContract::MergeFrom(const TransferAssetContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.TransferAssetContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.asset_name().size() > 0) {

    asset_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_name_);
  }
  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.to_address().size() > 0) {

    to_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_address_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void TransferAssetContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.TransferAssetContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferAssetContract::CopyFrom(const TransferAssetContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.TransferAssetContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferAssetContract::IsInitialized() const {
  return true;
}

void TransferAssetContract::Swap(TransferAssetContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferAssetContract::InternalSwap(TransferAssetContract* other) {
  using std::swap;
  asset_name_.Swap(&other->asset_name_);
  owner_address_.Swap(&other->owner_address_);
  to_address_.Swap(&other->to_address_);
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferAssetContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransferAssetContract

// bytes asset_name = 1;
void TransferAssetContract::clear_asset_name() {
  asset_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TransferAssetContract::asset_name() const {
  // @@protoc_insertion_point(field_get:protocol.TransferAssetContract.asset_name)
  return asset_name_.GetNoArena();
}
void TransferAssetContract::set_asset_name(const ::std::string& value) {
  
  asset_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.TransferAssetContract.asset_name)
}
#if LANG_CXX11
void TransferAssetContract::set_asset_name(::std::string&& value) {
  
  asset_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.TransferAssetContract.asset_name)
}
#endif
void TransferAssetContract::set_asset_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  asset_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.TransferAssetContract.asset_name)
}
void TransferAssetContract::set_asset_name(const void* value, size_t size) {
  
  asset_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.TransferAssetContract.asset_name)
}
::std::string* TransferAssetContract::mutable_asset_name() {
  
  // @@protoc_insertion_point(field_mutable:protocol.TransferAssetContract.asset_name)
  return asset_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TransferAssetContract::release_asset_name() {
  // @@protoc_insertion_point(field_release:protocol.TransferAssetContract.asset_name)
  
  return asset_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferAssetContract::set_allocated_asset_name(::std::string* asset_name) {
  if (asset_name != NULL) {
    
  } else {
    
  }
  asset_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asset_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.TransferAssetContract.asset_name)
}

// bytes owner_address = 2;
void TransferAssetContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TransferAssetContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.TransferAssetContract.owner_address)
  return owner_address_.GetNoArena();
}
void TransferAssetContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.TransferAssetContract.owner_address)
}
#if LANG_CXX11
void TransferAssetContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.TransferAssetContract.owner_address)
}
#endif
void TransferAssetContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.TransferAssetContract.owner_address)
}
void TransferAssetContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.TransferAssetContract.owner_address)
}
::std::string* TransferAssetContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.TransferAssetContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TransferAssetContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.TransferAssetContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferAssetContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.TransferAssetContract.owner_address)
}

// bytes to_address = 3;
void TransferAssetContract::clear_to_address() {
  to_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TransferAssetContract::to_address() const {
  // @@protoc_insertion_point(field_get:protocol.TransferAssetContract.to_address)
  return to_address_.GetNoArena();
}
void TransferAssetContract::set_to_address(const ::std::string& value) {
  
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.TransferAssetContract.to_address)
}
#if LANG_CXX11
void TransferAssetContract::set_to_address(::std::string&& value) {
  
  to_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.TransferAssetContract.to_address)
}
#endif
void TransferAssetContract::set_to_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.TransferAssetContract.to_address)
}
void TransferAssetContract::set_to_address(const void* value, size_t size) {
  
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.TransferAssetContract.to_address)
}
::std::string* TransferAssetContract::mutable_to_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.TransferAssetContract.to_address)
  return to_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TransferAssetContract::release_to_address() {
  // @@protoc_insertion_point(field_release:protocol.TransferAssetContract.to_address)
  
  return to_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferAssetContract::set_allocated_to_address(::std::string* to_address) {
  if (to_address != NULL) {
    
  } else {
    
  }
  to_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.TransferAssetContract.to_address)
}

// int64 amount = 4;
void TransferAssetContract::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferAssetContract::amount() const {
  // @@protoc_insertion_point(field_get:protocol.TransferAssetContract.amount)
  return amount_;
}
void TransferAssetContract::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:protocol.TransferAssetContract.amount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoteAssetContract::kOwnerAddressFieldNumber;
const int VoteAssetContract::kVoteAddressFieldNumber;
const int VoteAssetContract::kSupportFieldNumber;
const int VoteAssetContract::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoteAssetContract::VoteAssetContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.VoteAssetContract)
}
VoteAssetContract::VoteAssetContract(const VoteAssetContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vote_address_(from.vote_address_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  ::memcpy(&support_, &from.support_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&support_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:protocol.VoteAssetContract)
}

void VoteAssetContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&support_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&support_)) + sizeof(count_));
  _cached_size_ = 0;
}

VoteAssetContract::~VoteAssetContract() {
  // @@protoc_insertion_point(destructor:protocol.VoteAssetContract)
  SharedDtor();
}

void VoteAssetContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VoteAssetContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoteAssetContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoteAssetContract& VoteAssetContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

VoteAssetContract* VoteAssetContract::New(::google::protobuf::Arena* arena) const {
  VoteAssetContract* n = new VoteAssetContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoteAssetContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.VoteAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vote_address_.Clear();
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&support_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&support_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool VoteAssetContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.VoteAssetContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes vote_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_vote_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool support = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &support_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.VoteAssetContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.VoteAssetContract)
  return false;
#undef DO_
}

void VoteAssetContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.VoteAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // repeated bytes vote_address = 2;
  for (int i = 0, n = this->vote_address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->vote_address(i), output);
  }

  // bool support = 3;
  if (this->support() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->support(), output);
  }

  // int32 count = 5;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.VoteAssetContract)
}

::google::protobuf::uint8* VoteAssetContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.VoteAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // repeated bytes vote_address = 2;
  for (int i = 0, n = this->vote_address_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->vote_address(i), target);
  }

  // bool support = 3;
  if (this->support() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->support(), target);
  }

  // int32 count = 5;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.VoteAssetContract)
  return target;
}

size_t VoteAssetContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.VoteAssetContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes vote_address = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->vote_address_size());
  for (int i = 0, n = this->vote_address_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->vote_address(i));
  }

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bool support = 3;
  if (this->support() != 0) {
    total_size += 1 + 1;
  }

  // int32 count = 5;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoteAssetContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.VoteAssetContract)
  GOOGLE_DCHECK_NE(&from, this);
  const VoteAssetContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoteAssetContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.VoteAssetContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.VoteAssetContract)
    MergeFrom(*source);
  }
}

void VoteAssetContract::MergeFrom(const VoteAssetContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.VoteAssetContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vote_address_.MergeFrom(from.vote_address_);
  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.support() != 0) {
    set_support(from.support());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void VoteAssetContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.VoteAssetContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoteAssetContract::CopyFrom(const VoteAssetContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.VoteAssetContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoteAssetContract::IsInitialized() const {
  return true;
}

void VoteAssetContract::Swap(VoteAssetContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoteAssetContract::InternalSwap(VoteAssetContract* other) {
  using std::swap;
  vote_address_.InternalSwap(&other->vote_address_);
  owner_address_.Swap(&other->owner_address_);
  swap(support_, other->support_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoteAssetContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VoteAssetContract

// bytes owner_address = 1;
void VoteAssetContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VoteAssetContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.VoteAssetContract.owner_address)
  return owner_address_.GetNoArena();
}
void VoteAssetContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.VoteAssetContract.owner_address)
}
#if LANG_CXX11
void VoteAssetContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.VoteAssetContract.owner_address)
}
#endif
void VoteAssetContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.VoteAssetContract.owner_address)
}
void VoteAssetContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.VoteAssetContract.owner_address)
}
::std::string* VoteAssetContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.VoteAssetContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VoteAssetContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.VoteAssetContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VoteAssetContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.VoteAssetContract.owner_address)
}

// repeated bytes vote_address = 2;
int VoteAssetContract::vote_address_size() const {
  return vote_address_.size();
}
void VoteAssetContract::clear_vote_address() {
  vote_address_.Clear();
}
const ::std::string& VoteAssetContract::vote_address(int index) const {
  // @@protoc_insertion_point(field_get:protocol.VoteAssetContract.vote_address)
  return vote_address_.Get(index);
}
::std::string* VoteAssetContract::mutable_vote_address(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.VoteAssetContract.vote_address)
  return vote_address_.Mutable(index);
}
void VoteAssetContract::set_vote_address(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.VoteAssetContract.vote_address)
  vote_address_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void VoteAssetContract::set_vote_address(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:protocol.VoteAssetContract.vote_address)
  vote_address_.Mutable(index)->assign(std::move(value));
}
#endif
void VoteAssetContract::set_vote_address(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  vote_address_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.VoteAssetContract.vote_address)
}
void VoteAssetContract::set_vote_address(int index, const void* value, size_t size) {
  vote_address_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.VoteAssetContract.vote_address)
}
::std::string* VoteAssetContract::add_vote_address() {
  // @@protoc_insertion_point(field_add_mutable:protocol.VoteAssetContract.vote_address)
  return vote_address_.Add();
}
void VoteAssetContract::add_vote_address(const ::std::string& value) {
  vote_address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.VoteAssetContract.vote_address)
}
#if LANG_CXX11
void VoteAssetContract::add_vote_address(::std::string&& value) {
  vote_address_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.VoteAssetContract.vote_address)
}
#endif
void VoteAssetContract::add_vote_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  vote_address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.VoteAssetContract.vote_address)
}
void VoteAssetContract::add_vote_address(const void* value, size_t size) {
  vote_address_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.VoteAssetContract.vote_address)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
VoteAssetContract::vote_address() const {
  // @@protoc_insertion_point(field_list:protocol.VoteAssetContract.vote_address)
  return vote_address_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
VoteAssetContract::mutable_vote_address() {
  // @@protoc_insertion_point(field_mutable_list:protocol.VoteAssetContract.vote_address)
  return &vote_address_;
}

// bool support = 3;
void VoteAssetContract::clear_support() {
  support_ = false;
}
bool VoteAssetContract::support() const {
  // @@protoc_insertion_point(field_get:protocol.VoteAssetContract.support)
  return support_;
}
void VoteAssetContract::set_support(bool value) {
  
  support_ = value;
  // @@protoc_insertion_point(field_set:protocol.VoteAssetContract.support)
}

// int32 count = 5;
void VoteAssetContract::clear_count() {
  count_ = 0;
}
::google::protobuf::int32 VoteAssetContract::count() const {
  // @@protoc_insertion_point(field_get:protocol.VoteAssetContract.count)
  return count_;
}
void VoteAssetContract::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:protocol.VoteAssetContract.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoteWitnessContract_Vote::kVoteAddressFieldNumber;
const int VoteWitnessContract_Vote::kVoteCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoteWitnessContract_Vote::VoteWitnessContract_Vote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.VoteWitnessContract.Vote)
}
VoteWitnessContract_Vote::VoteWitnessContract_Vote(const VoteWitnessContract_Vote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vote_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vote_address().size() > 0) {
    vote_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vote_address_);
  }
  vote_count_ = from.vote_count_;
  // @@protoc_insertion_point(copy_constructor:protocol.VoteWitnessContract.Vote)
}

void VoteWitnessContract_Vote::SharedCtor() {
  vote_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vote_count_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

VoteWitnessContract_Vote::~VoteWitnessContract_Vote() {
  // @@protoc_insertion_point(destructor:protocol.VoteWitnessContract.Vote)
  SharedDtor();
}

void VoteWitnessContract_Vote::SharedDtor() {
  vote_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VoteWitnessContract_Vote::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoteWitnessContract_Vote::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoteWitnessContract_Vote& VoteWitnessContract_Vote::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

VoteWitnessContract_Vote* VoteWitnessContract_Vote::New(::google::protobuf::Arena* arena) const {
  VoteWitnessContract_Vote* n = new VoteWitnessContract_Vote;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoteWitnessContract_Vote::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.VoteWitnessContract.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vote_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vote_count_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool VoteWitnessContract_Vote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.VoteWitnessContract.Vote)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes vote_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vote_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 vote_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vote_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.VoteWitnessContract.Vote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.VoteWitnessContract.Vote)
  return false;
#undef DO_
}

void VoteWitnessContract_Vote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.VoteWitnessContract.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vote_address = 1;
  if (this->vote_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->vote_address(), output);
  }

  // int64 vote_count = 2;
  if (this->vote_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->vote_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.VoteWitnessContract.Vote)
}

::google::protobuf::uint8* VoteWitnessContract_Vote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.VoteWitnessContract.Vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vote_address = 1;
  if (this->vote_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->vote_address(), target);
  }

  // int64 vote_count = 2;
  if (this->vote_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->vote_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.VoteWitnessContract.Vote)
  return target;
}

size_t VoteWitnessContract_Vote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.VoteWitnessContract.Vote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes vote_address = 1;
  if (this->vote_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->vote_address());
  }

  // int64 vote_count = 2;
  if (this->vote_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->vote_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoteWitnessContract_Vote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.VoteWitnessContract.Vote)
  GOOGLE_DCHECK_NE(&from, this);
  const VoteWitnessContract_Vote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoteWitnessContract_Vote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.VoteWitnessContract.Vote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.VoteWitnessContract.Vote)
    MergeFrom(*source);
  }
}

void VoteWitnessContract_Vote::MergeFrom(const VoteWitnessContract_Vote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.VoteWitnessContract.Vote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vote_address().size() > 0) {

    vote_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vote_address_);
  }
  if (from.vote_count() != 0) {
    set_vote_count(from.vote_count());
  }
}

void VoteWitnessContract_Vote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.VoteWitnessContract.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoteWitnessContract_Vote::CopyFrom(const VoteWitnessContract_Vote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.VoteWitnessContract.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoteWitnessContract_Vote::IsInitialized() const {
  return true;
}

void VoteWitnessContract_Vote::Swap(VoteWitnessContract_Vote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoteWitnessContract_Vote::InternalSwap(VoteWitnessContract_Vote* other) {
  using std::swap;
  vote_address_.Swap(&other->vote_address_);
  swap(vote_count_, other->vote_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoteWitnessContract_Vote::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VoteWitnessContract_Vote

// bytes vote_address = 1;
void VoteWitnessContract_Vote::clear_vote_address() {
  vote_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VoteWitnessContract_Vote::vote_address() const {
  // @@protoc_insertion_point(field_get:protocol.VoteWitnessContract.Vote.vote_address)
  return vote_address_.GetNoArena();
}
void VoteWitnessContract_Vote::set_vote_address(const ::std::string& value) {
  
  vote_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.VoteWitnessContract.Vote.vote_address)
}
#if LANG_CXX11
void VoteWitnessContract_Vote::set_vote_address(::std::string&& value) {
  
  vote_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.VoteWitnessContract.Vote.vote_address)
}
#endif
void VoteWitnessContract_Vote::set_vote_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vote_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.VoteWitnessContract.Vote.vote_address)
}
void VoteWitnessContract_Vote::set_vote_address(const void* value, size_t size) {
  
  vote_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.VoteWitnessContract.Vote.vote_address)
}
::std::string* VoteWitnessContract_Vote::mutable_vote_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.VoteWitnessContract.Vote.vote_address)
  return vote_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VoteWitnessContract_Vote::release_vote_address() {
  // @@protoc_insertion_point(field_release:protocol.VoteWitnessContract.Vote.vote_address)
  
  return vote_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VoteWitnessContract_Vote::set_allocated_vote_address(::std::string* vote_address) {
  if (vote_address != NULL) {
    
  } else {
    
  }
  vote_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vote_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.VoteWitnessContract.Vote.vote_address)
}

// int64 vote_count = 2;
void VoteWitnessContract_Vote::clear_vote_count() {
  vote_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 VoteWitnessContract_Vote::vote_count() const {
  // @@protoc_insertion_point(field_get:protocol.VoteWitnessContract.Vote.vote_count)
  return vote_count_;
}
void VoteWitnessContract_Vote::set_vote_count(::google::protobuf::int64 value) {
  
  vote_count_ = value;
  // @@protoc_insertion_point(field_set:protocol.VoteWitnessContract.Vote.vote_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoteWitnessContract::kOwnerAddressFieldNumber;
const int VoteWitnessContract::kVotesFieldNumber;
const int VoteWitnessContract::kSupportFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoteWitnessContract::VoteWitnessContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.VoteWitnessContract)
}
VoteWitnessContract::VoteWitnessContract(const VoteWitnessContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      votes_(from.votes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  support_ = from.support_;
  // @@protoc_insertion_point(copy_constructor:protocol.VoteWitnessContract)
}

void VoteWitnessContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  support_ = false;
  _cached_size_ = 0;
}

VoteWitnessContract::~VoteWitnessContract() {
  // @@protoc_insertion_point(destructor:protocol.VoteWitnessContract)
  SharedDtor();
}

void VoteWitnessContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VoteWitnessContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoteWitnessContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoteWitnessContract& VoteWitnessContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

VoteWitnessContract* VoteWitnessContract::New(::google::protobuf::Arena* arena) const {
  VoteWitnessContract* n = new VoteWitnessContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoteWitnessContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.VoteWitnessContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  votes_.Clear();
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  support_ = false;
  _internal_metadata_.Clear();
}

bool VoteWitnessContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.VoteWitnessContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.VoteWitnessContract.Vote votes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_votes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool support = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &support_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.VoteWitnessContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.VoteWitnessContract)
  return false;
#undef DO_
}

void VoteWitnessContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.VoteWitnessContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // repeated .protocol.VoteWitnessContract.Vote votes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->votes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->votes(static_cast<int>(i)), output);
  }

  // bool support = 3;
  if (this->support() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->support(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.VoteWitnessContract)
}

::google::protobuf::uint8* VoteWitnessContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.VoteWitnessContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // repeated .protocol.VoteWitnessContract.Vote votes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->votes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->votes(static_cast<int>(i)), deterministic, target);
  }

  // bool support = 3;
  if (this->support() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->support(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.VoteWitnessContract)
  return target;
}

size_t VoteWitnessContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.VoteWitnessContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.VoteWitnessContract.Vote votes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->votes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->votes(static_cast<int>(i)));
    }
  }

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bool support = 3;
  if (this->support() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoteWitnessContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.VoteWitnessContract)
  GOOGLE_DCHECK_NE(&from, this);
  const VoteWitnessContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoteWitnessContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.VoteWitnessContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.VoteWitnessContract)
    MergeFrom(*source);
  }
}

void VoteWitnessContract::MergeFrom(const VoteWitnessContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.VoteWitnessContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  votes_.MergeFrom(from.votes_);
  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.support() != 0) {
    set_support(from.support());
  }
}

void VoteWitnessContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.VoteWitnessContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoteWitnessContract::CopyFrom(const VoteWitnessContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.VoteWitnessContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoteWitnessContract::IsInitialized() const {
  return true;
}

void VoteWitnessContract::Swap(VoteWitnessContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoteWitnessContract::InternalSwap(VoteWitnessContract* other) {
  using std::swap;
  votes_.InternalSwap(&other->votes_);
  owner_address_.Swap(&other->owner_address_);
  swap(support_, other->support_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoteWitnessContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VoteWitnessContract

// bytes owner_address = 1;
void VoteWitnessContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VoteWitnessContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.VoteWitnessContract.owner_address)
  return owner_address_.GetNoArena();
}
void VoteWitnessContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.VoteWitnessContract.owner_address)
}
#if LANG_CXX11
void VoteWitnessContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.VoteWitnessContract.owner_address)
}
#endif
void VoteWitnessContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.VoteWitnessContract.owner_address)
}
void VoteWitnessContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.VoteWitnessContract.owner_address)
}
::std::string* VoteWitnessContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.VoteWitnessContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VoteWitnessContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.VoteWitnessContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VoteWitnessContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.VoteWitnessContract.owner_address)
}

// repeated .protocol.VoteWitnessContract.Vote votes = 2;
int VoteWitnessContract::votes_size() const {
  return votes_.size();
}
void VoteWitnessContract::clear_votes() {
  votes_.Clear();
}
const ::protocol::VoteWitnessContract_Vote& VoteWitnessContract::votes(int index) const {
  // @@protoc_insertion_point(field_get:protocol.VoteWitnessContract.votes)
  return votes_.Get(index);
}
::protocol::VoteWitnessContract_Vote* VoteWitnessContract::mutable_votes(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.VoteWitnessContract.votes)
  return votes_.Mutable(index);
}
::protocol::VoteWitnessContract_Vote* VoteWitnessContract::add_votes() {
  // @@protoc_insertion_point(field_add:protocol.VoteWitnessContract.votes)
  return votes_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::VoteWitnessContract_Vote >*
VoteWitnessContract::mutable_votes() {
  // @@protoc_insertion_point(field_mutable_list:protocol.VoteWitnessContract.votes)
  return &votes_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::VoteWitnessContract_Vote >&
VoteWitnessContract::votes() const {
  // @@protoc_insertion_point(field_list:protocol.VoteWitnessContract.votes)
  return votes_;
}

// bool support = 3;
void VoteWitnessContract::clear_support() {
  support_ = false;
}
bool VoteWitnessContract::support() const {
  // @@protoc_insertion_point(field_get:protocol.VoteWitnessContract.support)
  return support_;
}
void VoteWitnessContract::set_support(bool value) {
  
  support_ = value;
  // @@protoc_insertion_point(field_set:protocol.VoteWitnessContract.support)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WitnessCreateContract::kOwnerAddressFieldNumber;
const int WitnessCreateContract::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WitnessCreateContract::WitnessCreateContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.WitnessCreateContract)
}
WitnessCreateContract::WitnessCreateContract(const WitnessCreateContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.WitnessCreateContract)
}

void WitnessCreateContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

WitnessCreateContract::~WitnessCreateContract() {
  // @@protoc_insertion_point(destructor:protocol.WitnessCreateContract)
  SharedDtor();
}

void WitnessCreateContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WitnessCreateContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WitnessCreateContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WitnessCreateContract& WitnessCreateContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

WitnessCreateContract* WitnessCreateContract::New(::google::protobuf::Arena* arena) const {
  WitnessCreateContract* n = new WitnessCreateContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WitnessCreateContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.WitnessCreateContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool WitnessCreateContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.WitnessCreateContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.WitnessCreateContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.WitnessCreateContract)
  return false;
#undef DO_
}

void WitnessCreateContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.WitnessCreateContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.WitnessCreateContract)
}

::google::protobuf::uint8* WitnessCreateContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.WitnessCreateContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes url = 2;
  if (this->url().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.WitnessCreateContract)
  return target;
}

size_t WitnessCreateContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.WitnessCreateContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WitnessCreateContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.WitnessCreateContract)
  GOOGLE_DCHECK_NE(&from, this);
  const WitnessCreateContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WitnessCreateContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.WitnessCreateContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.WitnessCreateContract)
    MergeFrom(*source);
  }
}

void WitnessCreateContract::MergeFrom(const WitnessCreateContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.WitnessCreateContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void WitnessCreateContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.WitnessCreateContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WitnessCreateContract::CopyFrom(const WitnessCreateContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.WitnessCreateContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WitnessCreateContract::IsInitialized() const {
  return true;
}

void WitnessCreateContract::Swap(WitnessCreateContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WitnessCreateContract::InternalSwap(WitnessCreateContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_);
  url_.Swap(&other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WitnessCreateContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WitnessCreateContract

// bytes owner_address = 1;
void WitnessCreateContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WitnessCreateContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.WitnessCreateContract.owner_address)
  return owner_address_.GetNoArena();
}
void WitnessCreateContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.WitnessCreateContract.owner_address)
}
#if LANG_CXX11
void WitnessCreateContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.WitnessCreateContract.owner_address)
}
#endif
void WitnessCreateContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.WitnessCreateContract.owner_address)
}
void WitnessCreateContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.WitnessCreateContract.owner_address)
}
::std::string* WitnessCreateContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.WitnessCreateContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WitnessCreateContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.WitnessCreateContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WitnessCreateContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.WitnessCreateContract.owner_address)
}

// bytes url = 2;
void WitnessCreateContract::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WitnessCreateContract::url() const {
  // @@protoc_insertion_point(field_get:protocol.WitnessCreateContract.url)
  return url_.GetNoArena();
}
void WitnessCreateContract::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.WitnessCreateContract.url)
}
#if LANG_CXX11
void WitnessCreateContract::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.WitnessCreateContract.url)
}
#endif
void WitnessCreateContract::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.WitnessCreateContract.url)
}
void WitnessCreateContract::set_url(const void* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.WitnessCreateContract.url)
}
::std::string* WitnessCreateContract::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:protocol.WitnessCreateContract.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WitnessCreateContract::release_url() {
  // @@protoc_insertion_point(field_release:protocol.WitnessCreateContract.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WitnessCreateContract::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:protocol.WitnessCreateContract.url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WitnessUpdateContract::kOwnerAddressFieldNumber;
const int WitnessUpdateContract::kUpdateUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WitnessUpdateContract::WitnessUpdateContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.WitnessUpdateContract)
}
WitnessUpdateContract::WitnessUpdateContract(const WitnessUpdateContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  update_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.update_url().size() > 0) {
    update_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.update_url_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.WitnessUpdateContract)
}

void WitnessUpdateContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

WitnessUpdateContract::~WitnessUpdateContract() {
  // @@protoc_insertion_point(destructor:protocol.WitnessUpdateContract)
  SharedDtor();
}

void WitnessUpdateContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WitnessUpdateContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WitnessUpdateContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WitnessUpdateContract& WitnessUpdateContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

WitnessUpdateContract* WitnessUpdateContract::New(::google::protobuf::Arena* arena) const {
  WitnessUpdateContract* n = new WitnessUpdateContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WitnessUpdateContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.WitnessUpdateContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool WitnessUpdateContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.WitnessUpdateContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes update_url = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_update_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.WitnessUpdateContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.WitnessUpdateContract)
  return false;
#undef DO_
}

void WitnessUpdateContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.WitnessUpdateContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes update_url = 12;
  if (this->update_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->update_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.WitnessUpdateContract)
}

::google::protobuf::uint8* WitnessUpdateContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.WitnessUpdateContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes update_url = 12;
  if (this->update_url().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->update_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.WitnessUpdateContract)
  return target;
}

size_t WitnessUpdateContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.WitnessUpdateContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes update_url = 12;
  if (this->update_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->update_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WitnessUpdateContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.WitnessUpdateContract)
  GOOGLE_DCHECK_NE(&from, this);
  const WitnessUpdateContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WitnessUpdateContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.WitnessUpdateContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.WitnessUpdateContract)
    MergeFrom(*source);
  }
}

void WitnessUpdateContract::MergeFrom(const WitnessUpdateContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.WitnessUpdateContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.update_url().size() > 0) {

    update_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.update_url_);
  }
}

void WitnessUpdateContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.WitnessUpdateContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WitnessUpdateContract::CopyFrom(const WitnessUpdateContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.WitnessUpdateContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WitnessUpdateContract::IsInitialized() const {
  return true;
}

void WitnessUpdateContract::Swap(WitnessUpdateContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WitnessUpdateContract::InternalSwap(WitnessUpdateContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_);
  update_url_.Swap(&other->update_url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WitnessUpdateContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WitnessUpdateContract

// bytes owner_address = 1;
void WitnessUpdateContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WitnessUpdateContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.WitnessUpdateContract.owner_address)
  return owner_address_.GetNoArena();
}
void WitnessUpdateContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.WitnessUpdateContract.owner_address)
}
#if LANG_CXX11
void WitnessUpdateContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.WitnessUpdateContract.owner_address)
}
#endif
void WitnessUpdateContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.WitnessUpdateContract.owner_address)
}
void WitnessUpdateContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.WitnessUpdateContract.owner_address)
}
::std::string* WitnessUpdateContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.WitnessUpdateContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WitnessUpdateContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.WitnessUpdateContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WitnessUpdateContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.WitnessUpdateContract.owner_address)
}

// bytes update_url = 12;
void WitnessUpdateContract::clear_update_url() {
  update_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WitnessUpdateContract::update_url() const {
  // @@protoc_insertion_point(field_get:protocol.WitnessUpdateContract.update_url)
  return update_url_.GetNoArena();
}
void WitnessUpdateContract::set_update_url(const ::std::string& value) {
  
  update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.WitnessUpdateContract.update_url)
}
#if LANG_CXX11
void WitnessUpdateContract::set_update_url(::std::string&& value) {
  
  update_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.WitnessUpdateContract.update_url)
}
#endif
void WitnessUpdateContract::set_update_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.WitnessUpdateContract.update_url)
}
void WitnessUpdateContract::set_update_url(const void* value, size_t size) {
  
  update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.WitnessUpdateContract.update_url)
}
::std::string* WitnessUpdateContract::mutable_update_url() {
  
  // @@protoc_insertion_point(field_mutable:protocol.WitnessUpdateContract.update_url)
  return update_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WitnessUpdateContract::release_update_url() {
  // @@protoc_insertion_point(field_release:protocol.WitnessUpdateContract.update_url)
  
  return update_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WitnessUpdateContract::set_allocated_update_url(::std::string* update_url) {
  if (update_url != NULL) {
    
  } else {
    
  }
  update_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), update_url);
  // @@protoc_insertion_point(field_set_allocated:protocol.WitnessUpdateContract.update_url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetIssueContract_FrozenSupply::kFrozenAmountFieldNumber;
const int AssetIssueContract_FrozenSupply::kFrozenDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetIssueContract_FrozenSupply::AssetIssueContract_FrozenSupply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.AssetIssueContract.FrozenSupply)
}
AssetIssueContract_FrozenSupply::AssetIssueContract_FrozenSupply(const AssetIssueContract_FrozenSupply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&frozen_amount_, &from.frozen_amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&frozen_days_) -
    reinterpret_cast<char*>(&frozen_amount_)) + sizeof(frozen_days_));
  // @@protoc_insertion_point(copy_constructor:protocol.AssetIssueContract.FrozenSupply)
}

void AssetIssueContract_FrozenSupply::SharedCtor() {
  ::memset(&frozen_amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frozen_days_) -
      reinterpret_cast<char*>(&frozen_amount_)) + sizeof(frozen_days_));
  _cached_size_ = 0;
}

AssetIssueContract_FrozenSupply::~AssetIssueContract_FrozenSupply() {
  // @@protoc_insertion_point(destructor:protocol.AssetIssueContract.FrozenSupply)
  SharedDtor();
}

void AssetIssueContract_FrozenSupply::SharedDtor() {
}

void AssetIssueContract_FrozenSupply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssetIssueContract_FrozenSupply::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssetIssueContract_FrozenSupply& AssetIssueContract_FrozenSupply::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

AssetIssueContract_FrozenSupply* AssetIssueContract_FrozenSupply::New(::google::protobuf::Arena* arena) const {
  AssetIssueContract_FrozenSupply* n = new AssetIssueContract_FrozenSupply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssetIssueContract_FrozenSupply::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.AssetIssueContract.FrozenSupply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&frozen_amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frozen_days_) -
      reinterpret_cast<char*>(&frozen_amount_)) + sizeof(frozen_days_));
  _internal_metadata_.Clear();
}

bool AssetIssueContract_FrozenSupply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.AssetIssueContract.FrozenSupply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 frozen_amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frozen_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 frozen_days = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frozen_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.AssetIssueContract.FrozenSupply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.AssetIssueContract.FrozenSupply)
  return false;
#undef DO_
}

void AssetIssueContract_FrozenSupply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.AssetIssueContract.FrozenSupply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 frozen_amount = 1;
  if (this->frozen_amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->frozen_amount(), output);
  }

  // int64 frozen_days = 2;
  if (this->frozen_days() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->frozen_days(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.AssetIssueContract.FrozenSupply)
}

::google::protobuf::uint8* AssetIssueContract_FrozenSupply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.AssetIssueContract.FrozenSupply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 frozen_amount = 1;
  if (this->frozen_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->frozen_amount(), target);
  }

  // int64 frozen_days = 2;
  if (this->frozen_days() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->frozen_days(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.AssetIssueContract.FrozenSupply)
  return target;
}

size_t AssetIssueContract_FrozenSupply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.AssetIssueContract.FrozenSupply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 frozen_amount = 1;
  if (this->frozen_amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frozen_amount());
  }

  // int64 frozen_days = 2;
  if (this->frozen_days() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frozen_days());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssetIssueContract_FrozenSupply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.AssetIssueContract.FrozenSupply)
  GOOGLE_DCHECK_NE(&from, this);
  const AssetIssueContract_FrozenSupply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssetIssueContract_FrozenSupply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.AssetIssueContract.FrozenSupply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.AssetIssueContract.FrozenSupply)
    MergeFrom(*source);
  }
}

void AssetIssueContract_FrozenSupply::MergeFrom(const AssetIssueContract_FrozenSupply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.AssetIssueContract.FrozenSupply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frozen_amount() != 0) {
    set_frozen_amount(from.frozen_amount());
  }
  if (from.frozen_days() != 0) {
    set_frozen_days(from.frozen_days());
  }
}

void AssetIssueContract_FrozenSupply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.AssetIssueContract.FrozenSupply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetIssueContract_FrozenSupply::CopyFrom(const AssetIssueContract_FrozenSupply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.AssetIssueContract.FrozenSupply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetIssueContract_FrozenSupply::IsInitialized() const {
  return true;
}

void AssetIssueContract_FrozenSupply::Swap(AssetIssueContract_FrozenSupply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetIssueContract_FrozenSupply::InternalSwap(AssetIssueContract_FrozenSupply* other) {
  using std::swap;
  swap(frozen_amount_, other->frozen_amount_);
  swap(frozen_days_, other->frozen_days_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssetIssueContract_FrozenSupply::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AssetIssueContract_FrozenSupply

// int64 frozen_amount = 1;
void AssetIssueContract_FrozenSupply::clear_frozen_amount() {
  frozen_amount_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AssetIssueContract_FrozenSupply::frozen_amount() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.FrozenSupply.frozen_amount)
  return frozen_amount_;
}
void AssetIssueContract_FrozenSupply::set_frozen_amount(::google::protobuf::int64 value) {
  
  frozen_amount_ = value;
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.FrozenSupply.frozen_amount)
}

// int64 frozen_days = 2;
void AssetIssueContract_FrozenSupply::clear_frozen_days() {
  frozen_days_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AssetIssueContract_FrozenSupply::frozen_days() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.FrozenSupply.frozen_days)
  return frozen_days_;
}
void AssetIssueContract_FrozenSupply::set_frozen_days(::google::protobuf::int64 value) {
  
  frozen_days_ = value;
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.FrozenSupply.frozen_days)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetIssueContract::kOwnerAddressFieldNumber;
const int AssetIssueContract::kNameFieldNumber;
const int AssetIssueContract::kAbbrFieldNumber;
const int AssetIssueContract::kTotalSupplyFieldNumber;
const int AssetIssueContract::kFrozenSupplyFieldNumber;
const int AssetIssueContract::kTrxNumFieldNumber;
const int AssetIssueContract::kNumFieldNumber;
const int AssetIssueContract::kStartTimeFieldNumber;
const int AssetIssueContract::kEndTimeFieldNumber;
const int AssetIssueContract::kVoteScoreFieldNumber;
const int AssetIssueContract::kDescriptionFieldNumber;
const int AssetIssueContract::kUrlFieldNumber;
const int AssetIssueContract::kFreeAssetNetLimitFieldNumber;
const int AssetIssueContract::kPublicFreeAssetNetLimitFieldNumber;
const int AssetIssueContract::kPublicFreeAssetNetUsageFieldNumber;
const int AssetIssueContract::kPublicLatestFreeNetTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetIssueContract::AssetIssueContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.AssetIssueContract)
}
AssetIssueContract::AssetIssueContract(const AssetIssueContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      frozen_supply_(from.frozen_supply_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  abbr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.abbr().size() > 0) {
    abbr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.abbr_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&total_supply_, &from.total_supply_,
    static_cast<size_t>(reinterpret_cast<char*>(&public_latest_free_net_time_) -
    reinterpret_cast<char*>(&total_supply_)) + sizeof(public_latest_free_net_time_));
  // @@protoc_insertion_point(copy_constructor:protocol.AssetIssueContract)
}

void AssetIssueContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abbr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_supply_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&public_latest_free_net_time_) -
      reinterpret_cast<char*>(&total_supply_)) + sizeof(public_latest_free_net_time_));
  _cached_size_ = 0;
}

AssetIssueContract::~AssetIssueContract() {
  // @@protoc_insertion_point(destructor:protocol.AssetIssueContract)
  SharedDtor();
}

void AssetIssueContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abbr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AssetIssueContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssetIssueContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssetIssueContract& AssetIssueContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

AssetIssueContract* AssetIssueContract::New(::google::protobuf::Arena* arena) const {
  AssetIssueContract* n = new AssetIssueContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssetIssueContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.AssetIssueContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frozen_supply_.Clear();
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abbr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_supply_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&public_latest_free_net_time_) -
      reinterpret_cast<char*>(&total_supply_)) + sizeof(public_latest_free_net_time_));
  _internal_metadata_.Clear();
}

bool AssetIssueContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.AssetIssueContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes abbr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_abbr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_supply = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_supply_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.AssetIssueContract.FrozenSupply frozen_supply = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_frozen_supply()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 trx_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trx_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 start_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 end_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vote_score = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vote_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes description = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes url = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 free_asset_net_limit = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &free_asset_net_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 public_free_asset_net_limit = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &public_free_asset_net_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 public_free_asset_net_usage = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &public_free_asset_net_usage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 public_latest_free_net_time = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &public_latest_free_net_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.AssetIssueContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.AssetIssueContract)
  return false;
#undef DO_
}

void AssetIssueContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.AssetIssueContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // bytes abbr = 3;
  if (this->abbr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->abbr(), output);
  }

  // int64 total_supply = 4;
  if (this->total_supply() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->total_supply(), output);
  }

  // repeated .protocol.AssetIssueContract.FrozenSupply frozen_supply = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frozen_supply_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->frozen_supply(static_cast<int>(i)), output);
  }

  // int32 trx_num = 6;
  if (this->trx_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->trx_num(), output);
  }

  // int32 num = 8;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->num(), output);
  }

  // int64 start_time = 9;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->start_time(), output);
  }

  // int64 end_time = 10;
  if (this->end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->end_time(), output);
  }

  // int32 vote_score = 16;
  if (this->vote_score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->vote_score(), output);
  }

  // bytes description = 20;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->description(), output);
  }

  // bytes url = 21;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      21, this->url(), output);
  }

  // int64 free_asset_net_limit = 22;
  if (this->free_asset_net_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->free_asset_net_limit(), output);
  }

  // int64 public_free_asset_net_limit = 23;
  if (this->public_free_asset_net_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->public_free_asset_net_limit(), output);
  }

  // int64 public_free_asset_net_usage = 24;
  if (this->public_free_asset_net_usage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(24, this->public_free_asset_net_usage(), output);
  }

  // int64 public_latest_free_net_time = 25;
  if (this->public_latest_free_net_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(25, this->public_latest_free_net_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.AssetIssueContract)
}

::google::protobuf::uint8* AssetIssueContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.AssetIssueContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // bytes abbr = 3;
  if (this->abbr().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->abbr(), target);
  }

  // int64 total_supply = 4;
  if (this->total_supply() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->total_supply(), target);
  }

  // repeated .protocol.AssetIssueContract.FrozenSupply frozen_supply = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frozen_supply_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->frozen_supply(static_cast<int>(i)), deterministic, target);
  }

  // int32 trx_num = 6;
  if (this->trx_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->trx_num(), target);
  }

  // int32 num = 8;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->num(), target);
  }

  // int64 start_time = 9;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->start_time(), target);
  }

  // int64 end_time = 10;
  if (this->end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->end_time(), target);
  }

  // int32 vote_score = 16;
  if (this->vote_score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->vote_score(), target);
  }

  // bytes description = 20;
  if (this->description().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->description(), target);
  }

  // bytes url = 21;
  if (this->url().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        21, this->url(), target);
  }

  // int64 free_asset_net_limit = 22;
  if (this->free_asset_net_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->free_asset_net_limit(), target);
  }

  // int64 public_free_asset_net_limit = 23;
  if (this->public_free_asset_net_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(23, this->public_free_asset_net_limit(), target);
  }

  // int64 public_free_asset_net_usage = 24;
  if (this->public_free_asset_net_usage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(24, this->public_free_asset_net_usage(), target);
  }

  // int64 public_latest_free_net_time = 25;
  if (this->public_latest_free_net_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(25, this->public_latest_free_net_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.AssetIssueContract)
  return target;
}

size_t AssetIssueContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.AssetIssueContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .protocol.AssetIssueContract.FrozenSupply frozen_supply = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->frozen_supply_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frozen_supply(static_cast<int>(i)));
    }
  }

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes abbr = 3;
  if (this->abbr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->abbr());
  }

  // bytes description = 20;
  if (this->description().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->description());
  }

  // bytes url = 21;
  if (this->url().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->url());
  }

  // int64 total_supply = 4;
  if (this->total_supply() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_supply());
  }

  // int32 trx_num = 6;
  if (this->trx_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->trx_num());
  }

  // int32 num = 8;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  // int64 start_time = 9;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_time());
  }

  // int64 end_time = 10;
  if (this->end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->end_time());
  }

  // int32 vote_score = 16;
  if (this->vote_score() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vote_score());
  }

  // int64 free_asset_net_limit = 22;
  if (this->free_asset_net_limit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->free_asset_net_limit());
  }

  // int64 public_free_asset_net_limit = 23;
  if (this->public_free_asset_net_limit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->public_free_asset_net_limit());
  }

  // int64 public_free_asset_net_usage = 24;
  if (this->public_free_asset_net_usage() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->public_free_asset_net_usage());
  }

  // int64 public_latest_free_net_time = 25;
  if (this->public_latest_free_net_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->public_latest_free_net_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssetIssueContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.AssetIssueContract)
  GOOGLE_DCHECK_NE(&from, this);
  const AssetIssueContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssetIssueContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.AssetIssueContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.AssetIssueContract)
    MergeFrom(*source);
  }
}

void AssetIssueContract::MergeFrom(const AssetIssueContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.AssetIssueContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frozen_supply_.MergeFrom(from.frozen_supply_);
  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.abbr().size() > 0) {

    abbr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.abbr_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.total_supply() != 0) {
    set_total_supply(from.total_supply());
  }
  if (from.trx_num() != 0) {
    set_trx_num(from.trx_num());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
  if (from.end_time() != 0) {
    set_end_time(from.end_time());
  }
  if (from.vote_score() != 0) {
    set_vote_score(from.vote_score());
  }
  if (from.free_asset_net_limit() != 0) {
    set_free_asset_net_limit(from.free_asset_net_limit());
  }
  if (from.public_free_asset_net_limit() != 0) {
    set_public_free_asset_net_limit(from.public_free_asset_net_limit());
  }
  if (from.public_free_asset_net_usage() != 0) {
    set_public_free_asset_net_usage(from.public_free_asset_net_usage());
  }
  if (from.public_latest_free_net_time() != 0) {
    set_public_latest_free_net_time(from.public_latest_free_net_time());
  }
}

void AssetIssueContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.AssetIssueContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetIssueContract::CopyFrom(const AssetIssueContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.AssetIssueContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetIssueContract::IsInitialized() const {
  return true;
}

void AssetIssueContract::Swap(AssetIssueContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetIssueContract::InternalSwap(AssetIssueContract* other) {
  using std::swap;
  frozen_supply_.InternalSwap(&other->frozen_supply_);
  owner_address_.Swap(&other->owner_address_);
  name_.Swap(&other->name_);
  abbr_.Swap(&other->abbr_);
  description_.Swap(&other->description_);
  url_.Swap(&other->url_);
  swap(total_supply_, other->total_supply_);
  swap(trx_num_, other->trx_num_);
  swap(num_, other->num_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(vote_score_, other->vote_score_);
  swap(free_asset_net_limit_, other->free_asset_net_limit_);
  swap(public_free_asset_net_limit_, other->public_free_asset_net_limit_);
  swap(public_free_asset_net_usage_, other->public_free_asset_net_usage_);
  swap(public_latest_free_net_time_, other->public_latest_free_net_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssetIssueContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AssetIssueContract

// bytes owner_address = 1;
void AssetIssueContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AssetIssueContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.owner_address)
  return owner_address_.GetNoArena();
}
void AssetIssueContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.owner_address)
}
#if LANG_CXX11
void AssetIssueContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.AssetIssueContract.owner_address)
}
#endif
void AssetIssueContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.AssetIssueContract.owner_address)
}
void AssetIssueContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.AssetIssueContract.owner_address)
}
::std::string* AssetIssueContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.AssetIssueContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AssetIssueContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.AssetIssueContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AssetIssueContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.AssetIssueContract.owner_address)
}

// bytes name = 2;
void AssetIssueContract::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AssetIssueContract::name() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.name)
  return name_.GetNoArena();
}
void AssetIssueContract::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.name)
}
#if LANG_CXX11
void AssetIssueContract::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.AssetIssueContract.name)
}
#endif
void AssetIssueContract::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.AssetIssueContract.name)
}
void AssetIssueContract::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.AssetIssueContract.name)
}
::std::string* AssetIssueContract::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:protocol.AssetIssueContract.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AssetIssueContract::release_name() {
  // @@protoc_insertion_point(field_release:protocol.AssetIssueContract.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AssetIssueContract::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.AssetIssueContract.name)
}

// bytes abbr = 3;
void AssetIssueContract::clear_abbr() {
  abbr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AssetIssueContract::abbr() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.abbr)
  return abbr_.GetNoArena();
}
void AssetIssueContract::set_abbr(const ::std::string& value) {
  
  abbr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.abbr)
}
#if LANG_CXX11
void AssetIssueContract::set_abbr(::std::string&& value) {
  
  abbr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.AssetIssueContract.abbr)
}
#endif
void AssetIssueContract::set_abbr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  abbr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.AssetIssueContract.abbr)
}
void AssetIssueContract::set_abbr(const void* value, size_t size) {
  
  abbr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.AssetIssueContract.abbr)
}
::std::string* AssetIssueContract::mutable_abbr() {
  
  // @@protoc_insertion_point(field_mutable:protocol.AssetIssueContract.abbr)
  return abbr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AssetIssueContract::release_abbr() {
  // @@protoc_insertion_point(field_release:protocol.AssetIssueContract.abbr)
  
  return abbr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AssetIssueContract::set_allocated_abbr(::std::string* abbr) {
  if (abbr != NULL) {
    
  } else {
    
  }
  abbr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), abbr);
  // @@protoc_insertion_point(field_set_allocated:protocol.AssetIssueContract.abbr)
}

// int64 total_supply = 4;
void AssetIssueContract::clear_total_supply() {
  total_supply_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AssetIssueContract::total_supply() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.total_supply)
  return total_supply_;
}
void AssetIssueContract::set_total_supply(::google::protobuf::int64 value) {
  
  total_supply_ = value;
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.total_supply)
}

// repeated .protocol.AssetIssueContract.FrozenSupply frozen_supply = 5;
int AssetIssueContract::frozen_supply_size() const {
  return frozen_supply_.size();
}
void AssetIssueContract::clear_frozen_supply() {
  frozen_supply_.Clear();
}
const ::protocol::AssetIssueContract_FrozenSupply& AssetIssueContract::frozen_supply(int index) const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.frozen_supply)
  return frozen_supply_.Get(index);
}
::protocol::AssetIssueContract_FrozenSupply* AssetIssueContract::mutable_frozen_supply(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.AssetIssueContract.frozen_supply)
  return frozen_supply_.Mutable(index);
}
::protocol::AssetIssueContract_FrozenSupply* AssetIssueContract::add_frozen_supply() {
  // @@protoc_insertion_point(field_add:protocol.AssetIssueContract.frozen_supply)
  return frozen_supply_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::AssetIssueContract_FrozenSupply >*
AssetIssueContract::mutable_frozen_supply() {
  // @@protoc_insertion_point(field_mutable_list:protocol.AssetIssueContract.frozen_supply)
  return &frozen_supply_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::AssetIssueContract_FrozenSupply >&
AssetIssueContract::frozen_supply() const {
  // @@protoc_insertion_point(field_list:protocol.AssetIssueContract.frozen_supply)
  return frozen_supply_;
}

// int32 trx_num = 6;
void AssetIssueContract::clear_trx_num() {
  trx_num_ = 0;
}
::google::protobuf::int32 AssetIssueContract::trx_num() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.trx_num)
  return trx_num_;
}
void AssetIssueContract::set_trx_num(::google::protobuf::int32 value) {
  
  trx_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.trx_num)
}

// int32 num = 8;
void AssetIssueContract::clear_num() {
  num_ = 0;
}
::google::protobuf::int32 AssetIssueContract::num() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.num)
  return num_;
}
void AssetIssueContract::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.num)
}

// int64 start_time = 9;
void AssetIssueContract::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AssetIssueContract::start_time() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.start_time)
  return start_time_;
}
void AssetIssueContract::set_start_time(::google::protobuf::int64 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.start_time)
}

// int64 end_time = 10;
void AssetIssueContract::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AssetIssueContract::end_time() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.end_time)
  return end_time_;
}
void AssetIssueContract::set_end_time(::google::protobuf::int64 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.end_time)
}

// int32 vote_score = 16;
void AssetIssueContract::clear_vote_score() {
  vote_score_ = 0;
}
::google::protobuf::int32 AssetIssueContract::vote_score() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.vote_score)
  return vote_score_;
}
void AssetIssueContract::set_vote_score(::google::protobuf::int32 value) {
  
  vote_score_ = value;
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.vote_score)
}

// bytes description = 20;
void AssetIssueContract::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AssetIssueContract::description() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.description)
  return description_.GetNoArena();
}
void AssetIssueContract::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.description)
}
#if LANG_CXX11
void AssetIssueContract::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.AssetIssueContract.description)
}
#endif
void AssetIssueContract::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.AssetIssueContract.description)
}
void AssetIssueContract::set_description(const void* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.AssetIssueContract.description)
}
::std::string* AssetIssueContract::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:protocol.AssetIssueContract.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AssetIssueContract::release_description() {
  // @@protoc_insertion_point(field_release:protocol.AssetIssueContract.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AssetIssueContract::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:protocol.AssetIssueContract.description)
}

// bytes url = 21;
void AssetIssueContract::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AssetIssueContract::url() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.url)
  return url_.GetNoArena();
}
void AssetIssueContract::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.url)
}
#if LANG_CXX11
void AssetIssueContract::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.AssetIssueContract.url)
}
#endif
void AssetIssueContract::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.AssetIssueContract.url)
}
void AssetIssueContract::set_url(const void* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.AssetIssueContract.url)
}
::std::string* AssetIssueContract::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:protocol.AssetIssueContract.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AssetIssueContract::release_url() {
  // @@protoc_insertion_point(field_release:protocol.AssetIssueContract.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AssetIssueContract::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:protocol.AssetIssueContract.url)
}

// int64 free_asset_net_limit = 22;
void AssetIssueContract::clear_free_asset_net_limit() {
  free_asset_net_limit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AssetIssueContract::free_asset_net_limit() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.free_asset_net_limit)
  return free_asset_net_limit_;
}
void AssetIssueContract::set_free_asset_net_limit(::google::protobuf::int64 value) {
  
  free_asset_net_limit_ = value;
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.free_asset_net_limit)
}

// int64 public_free_asset_net_limit = 23;
void AssetIssueContract::clear_public_free_asset_net_limit() {
  public_free_asset_net_limit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AssetIssueContract::public_free_asset_net_limit() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.public_free_asset_net_limit)
  return public_free_asset_net_limit_;
}
void AssetIssueContract::set_public_free_asset_net_limit(::google::protobuf::int64 value) {
  
  public_free_asset_net_limit_ = value;
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.public_free_asset_net_limit)
}

// int64 public_free_asset_net_usage = 24;
void AssetIssueContract::clear_public_free_asset_net_usage() {
  public_free_asset_net_usage_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AssetIssueContract::public_free_asset_net_usage() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.public_free_asset_net_usage)
  return public_free_asset_net_usage_;
}
void AssetIssueContract::set_public_free_asset_net_usage(::google::protobuf::int64 value) {
  
  public_free_asset_net_usage_ = value;
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.public_free_asset_net_usage)
}

// int64 public_latest_free_net_time = 25;
void AssetIssueContract::clear_public_latest_free_net_time() {
  public_latest_free_net_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AssetIssueContract::public_latest_free_net_time() const {
  // @@protoc_insertion_point(field_get:protocol.AssetIssueContract.public_latest_free_net_time)
  return public_latest_free_net_time_;
}
void AssetIssueContract::set_public_latest_free_net_time(::google::protobuf::int64 value) {
  
  public_latest_free_net_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.AssetIssueContract.public_latest_free_net_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParticipateAssetIssueContract::kOwnerAddressFieldNumber;
const int ParticipateAssetIssueContract::kToAddressFieldNumber;
const int ParticipateAssetIssueContract::kAssetNameFieldNumber;
const int ParticipateAssetIssueContract::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParticipateAssetIssueContract::ParticipateAssetIssueContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ParticipateAssetIssueContract)
}
ParticipateAssetIssueContract::ParticipateAssetIssueContract(const ParticipateAssetIssueContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  to_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_address().size() > 0) {
    to_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_address_);
  }
  asset_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.asset_name().size() > 0) {
    asset_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_name_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:protocol.ParticipateAssetIssueContract)
}

void ParticipateAssetIssueContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ParticipateAssetIssueContract::~ParticipateAssetIssueContract() {
  // @@protoc_insertion_point(destructor:protocol.ParticipateAssetIssueContract)
  SharedDtor();
}

void ParticipateAssetIssueContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParticipateAssetIssueContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParticipateAssetIssueContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParticipateAssetIssueContract& ParticipateAssetIssueContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParticipateAssetIssueContract* ParticipateAssetIssueContract::New(::google::protobuf::Arena* arena) const {
  ParticipateAssetIssueContract* n = new ParticipateAssetIssueContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParticipateAssetIssueContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ParticipateAssetIssueContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ParticipateAssetIssueContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ParticipateAssetIssueContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes to_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes asset_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_asset_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ParticipateAssetIssueContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ParticipateAssetIssueContract)
  return false;
#undef DO_
}

void ParticipateAssetIssueContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ParticipateAssetIssueContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes to_address = 2;
  if (this->to_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->to_address(), output);
  }

  // bytes asset_name = 3;
  if (this->asset_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->asset_name(), output);
  }

  // int64 amount = 4;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ParticipateAssetIssueContract)
}

::google::protobuf::uint8* ParticipateAssetIssueContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ParticipateAssetIssueContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes to_address = 2;
  if (this->to_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->to_address(), target);
  }

  // bytes asset_name = 3;
  if (this->asset_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->asset_name(), target);
  }

  // int64 amount = 4;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ParticipateAssetIssueContract)
  return target;
}

size_t ParticipateAssetIssueContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ParticipateAssetIssueContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes to_address = 2;
  if (this->to_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->to_address());
  }

  // bytes asset_name = 3;
  if (this->asset_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->asset_name());
  }

  // int64 amount = 4;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParticipateAssetIssueContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ParticipateAssetIssueContract)
  GOOGLE_DCHECK_NE(&from, this);
  const ParticipateAssetIssueContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParticipateAssetIssueContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ParticipateAssetIssueContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ParticipateAssetIssueContract)
    MergeFrom(*source);
  }
}

void ParticipateAssetIssueContract::MergeFrom(const ParticipateAssetIssueContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ParticipateAssetIssueContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.to_address().size() > 0) {

    to_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_address_);
  }
  if (from.asset_name().size() > 0) {

    asset_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_name_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void ParticipateAssetIssueContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ParticipateAssetIssueContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParticipateAssetIssueContract::CopyFrom(const ParticipateAssetIssueContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ParticipateAssetIssueContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParticipateAssetIssueContract::IsInitialized() const {
  return true;
}

void ParticipateAssetIssueContract::Swap(ParticipateAssetIssueContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParticipateAssetIssueContract::InternalSwap(ParticipateAssetIssueContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_);
  to_address_.Swap(&other->to_address_);
  asset_name_.Swap(&other->asset_name_);
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParticipateAssetIssueContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParticipateAssetIssueContract

// bytes owner_address = 1;
void ParticipateAssetIssueContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParticipateAssetIssueContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.ParticipateAssetIssueContract.owner_address)
  return owner_address_.GetNoArena();
}
void ParticipateAssetIssueContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.ParticipateAssetIssueContract.owner_address)
}
#if LANG_CXX11
void ParticipateAssetIssueContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.ParticipateAssetIssueContract.owner_address)
}
#endif
void ParticipateAssetIssueContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.ParticipateAssetIssueContract.owner_address)
}
void ParticipateAssetIssueContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.ParticipateAssetIssueContract.owner_address)
}
::std::string* ParticipateAssetIssueContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.ParticipateAssetIssueContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParticipateAssetIssueContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.ParticipateAssetIssueContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParticipateAssetIssueContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.ParticipateAssetIssueContract.owner_address)
}

// bytes to_address = 2;
void ParticipateAssetIssueContract::clear_to_address() {
  to_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParticipateAssetIssueContract::to_address() const {
  // @@protoc_insertion_point(field_get:protocol.ParticipateAssetIssueContract.to_address)
  return to_address_.GetNoArena();
}
void ParticipateAssetIssueContract::set_to_address(const ::std::string& value) {
  
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.ParticipateAssetIssueContract.to_address)
}
#if LANG_CXX11
void ParticipateAssetIssueContract::set_to_address(::std::string&& value) {
  
  to_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.ParticipateAssetIssueContract.to_address)
}
#endif
void ParticipateAssetIssueContract::set_to_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.ParticipateAssetIssueContract.to_address)
}
void ParticipateAssetIssueContract::set_to_address(const void* value, size_t size) {
  
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.ParticipateAssetIssueContract.to_address)
}
::std::string* ParticipateAssetIssueContract::mutable_to_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.ParticipateAssetIssueContract.to_address)
  return to_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParticipateAssetIssueContract::release_to_address() {
  // @@protoc_insertion_point(field_release:protocol.ParticipateAssetIssueContract.to_address)
  
  return to_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParticipateAssetIssueContract::set_allocated_to_address(::std::string* to_address) {
  if (to_address != NULL) {
    
  } else {
    
  }
  to_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.ParticipateAssetIssueContract.to_address)
}

// bytes asset_name = 3;
void ParticipateAssetIssueContract::clear_asset_name() {
  asset_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParticipateAssetIssueContract::asset_name() const {
  // @@protoc_insertion_point(field_get:protocol.ParticipateAssetIssueContract.asset_name)
  return asset_name_.GetNoArena();
}
void ParticipateAssetIssueContract::set_asset_name(const ::std::string& value) {
  
  asset_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.ParticipateAssetIssueContract.asset_name)
}
#if LANG_CXX11
void ParticipateAssetIssueContract::set_asset_name(::std::string&& value) {
  
  asset_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.ParticipateAssetIssueContract.asset_name)
}
#endif
void ParticipateAssetIssueContract::set_asset_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  asset_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.ParticipateAssetIssueContract.asset_name)
}
void ParticipateAssetIssueContract::set_asset_name(const void* value, size_t size) {
  
  asset_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.ParticipateAssetIssueContract.asset_name)
}
::std::string* ParticipateAssetIssueContract::mutable_asset_name() {
  
  // @@protoc_insertion_point(field_mutable:protocol.ParticipateAssetIssueContract.asset_name)
  return asset_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParticipateAssetIssueContract::release_asset_name() {
  // @@protoc_insertion_point(field_release:protocol.ParticipateAssetIssueContract.asset_name)
  
  return asset_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParticipateAssetIssueContract::set_allocated_asset_name(::std::string* asset_name) {
  if (asset_name != NULL) {
    
  } else {
    
  }
  asset_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asset_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.ParticipateAssetIssueContract.asset_name)
}

// int64 amount = 4;
void ParticipateAssetIssueContract::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ParticipateAssetIssueContract::amount() const {
  // @@protoc_insertion_point(field_get:protocol.ParticipateAssetIssueContract.amount)
  return amount_;
}
void ParticipateAssetIssueContract::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:protocol.ParticipateAssetIssueContract.amount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeployContract::kOwnerAddressFieldNumber;
const int DeployContract::kScriptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeployContract::DeployContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.DeployContract)
}
DeployContract::DeployContract(const DeployContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.script().size() > 0) {
    script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.DeployContract)
}

void DeployContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeployContract::~DeployContract() {
  // @@protoc_insertion_point(destructor:protocol.DeployContract)
  SharedDtor();
}

void DeployContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeployContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeployContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeployContract& DeployContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeployContract* DeployContract::New(::google::protobuf::Arena* arena) const {
  DeployContract* n = new DeployContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeployContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.DeployContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeployContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.DeployContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes script = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_script()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.DeployContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.DeployContract)
  return false;
#undef DO_
}

void DeployContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.DeployContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes script = 2;
  if (this->script().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->script(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.DeployContract)
}

::google::protobuf::uint8* DeployContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.DeployContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes script = 2;
  if (this->script().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->script(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.DeployContract)
  return target;
}

size_t DeployContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.DeployContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes script = 2;
  if (this->script().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->script());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeployContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.DeployContract)
  GOOGLE_DCHECK_NE(&from, this);
  const DeployContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeployContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.DeployContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.DeployContract)
    MergeFrom(*source);
  }
}

void DeployContract::MergeFrom(const DeployContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.DeployContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.script().size() > 0) {

    script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
  }
}

void DeployContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.DeployContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeployContract::CopyFrom(const DeployContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.DeployContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployContract::IsInitialized() const {
  return true;
}

void DeployContract::Swap(DeployContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeployContract::InternalSwap(DeployContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_);
  script_.Swap(&other->script_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeployContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeployContract

// bytes owner_address = 1;
void DeployContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeployContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.DeployContract.owner_address)
  return owner_address_.GetNoArena();
}
void DeployContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.DeployContract.owner_address)
}
#if LANG_CXX11
void DeployContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.DeployContract.owner_address)
}
#endif
void DeployContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.DeployContract.owner_address)
}
void DeployContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.DeployContract.owner_address)
}
::std::string* DeployContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.DeployContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeployContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.DeployContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeployContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.DeployContract.owner_address)
}

// bytes script = 2;
void DeployContract::clear_script() {
  script_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeployContract::script() const {
  // @@protoc_insertion_point(field_get:protocol.DeployContract.script)
  return script_.GetNoArena();
}
void DeployContract::set_script(const ::std::string& value) {
  
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.DeployContract.script)
}
#if LANG_CXX11
void DeployContract::set_script(::std::string&& value) {
  
  script_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.DeployContract.script)
}
#endif
void DeployContract::set_script(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.DeployContract.script)
}
void DeployContract::set_script(const void* value, size_t size) {
  
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.DeployContract.script)
}
::std::string* DeployContract::mutable_script() {
  
  // @@protoc_insertion_point(field_mutable:protocol.DeployContract.script)
  return script_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeployContract::release_script() {
  // @@protoc_insertion_point(field_release:protocol.DeployContract.script)
  
  return script_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeployContract::set_allocated_script(::std::string* script) {
  if (script != NULL) {
    
  } else {
    
  }
  script_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script);
  // @@protoc_insertion_point(field_set_allocated:protocol.DeployContract.script)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FreezeBalanceContract::kOwnerAddressFieldNumber;
const int FreezeBalanceContract::kFrozenBalanceFieldNumber;
const int FreezeBalanceContract::kFrozenDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FreezeBalanceContract::FreezeBalanceContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.FreezeBalanceContract)
}
FreezeBalanceContract::FreezeBalanceContract(const FreezeBalanceContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  ::memcpy(&frozen_balance_, &from.frozen_balance_,
    static_cast<size_t>(reinterpret_cast<char*>(&frozen_duration_) -
    reinterpret_cast<char*>(&frozen_balance_)) + sizeof(frozen_duration_));
  // @@protoc_insertion_point(copy_constructor:protocol.FreezeBalanceContract)
}

void FreezeBalanceContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frozen_balance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frozen_duration_) -
      reinterpret_cast<char*>(&frozen_balance_)) + sizeof(frozen_duration_));
  _cached_size_ = 0;
}

FreezeBalanceContract::~FreezeBalanceContract() {
  // @@protoc_insertion_point(destructor:protocol.FreezeBalanceContract)
  SharedDtor();
}

void FreezeBalanceContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FreezeBalanceContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FreezeBalanceContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FreezeBalanceContract& FreezeBalanceContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

FreezeBalanceContract* FreezeBalanceContract::New(::google::protobuf::Arena* arena) const {
  FreezeBalanceContract* n = new FreezeBalanceContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FreezeBalanceContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.FreezeBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frozen_balance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frozen_duration_) -
      reinterpret_cast<char*>(&frozen_balance_)) + sizeof(frozen_duration_));
  _internal_metadata_.Clear();
}

bool FreezeBalanceContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.FreezeBalanceContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 frozen_balance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frozen_balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 frozen_duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frozen_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.FreezeBalanceContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.FreezeBalanceContract)
  return false;
#undef DO_
}

void FreezeBalanceContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.FreezeBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // int64 frozen_balance = 2;
  if (this->frozen_balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->frozen_balance(), output);
  }

  // int64 frozen_duration = 3;
  if (this->frozen_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->frozen_duration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.FreezeBalanceContract)
}

::google::protobuf::uint8* FreezeBalanceContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.FreezeBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // int64 frozen_balance = 2;
  if (this->frozen_balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->frozen_balance(), target);
  }

  // int64 frozen_duration = 3;
  if (this->frozen_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->frozen_duration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.FreezeBalanceContract)
  return target;
}

size_t FreezeBalanceContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.FreezeBalanceContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // int64 frozen_balance = 2;
  if (this->frozen_balance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frozen_balance());
  }

  // int64 frozen_duration = 3;
  if (this->frozen_duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frozen_duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FreezeBalanceContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.FreezeBalanceContract)
  GOOGLE_DCHECK_NE(&from, this);
  const FreezeBalanceContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FreezeBalanceContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.FreezeBalanceContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.FreezeBalanceContract)
    MergeFrom(*source);
  }
}

void FreezeBalanceContract::MergeFrom(const FreezeBalanceContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.FreezeBalanceContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.frozen_balance() != 0) {
    set_frozen_balance(from.frozen_balance());
  }
  if (from.frozen_duration() != 0) {
    set_frozen_duration(from.frozen_duration());
  }
}

void FreezeBalanceContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.FreezeBalanceContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreezeBalanceContract::CopyFrom(const FreezeBalanceContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.FreezeBalanceContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreezeBalanceContract::IsInitialized() const {
  return true;
}

void FreezeBalanceContract::Swap(FreezeBalanceContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FreezeBalanceContract::InternalSwap(FreezeBalanceContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_);
  swap(frozen_balance_, other->frozen_balance_);
  swap(frozen_duration_, other->frozen_duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FreezeBalanceContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FreezeBalanceContract

// bytes owner_address = 1;
void FreezeBalanceContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FreezeBalanceContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.FreezeBalanceContract.owner_address)
  return owner_address_.GetNoArena();
}
void FreezeBalanceContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.FreezeBalanceContract.owner_address)
}
#if LANG_CXX11
void FreezeBalanceContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.FreezeBalanceContract.owner_address)
}
#endif
void FreezeBalanceContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.FreezeBalanceContract.owner_address)
}
void FreezeBalanceContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.FreezeBalanceContract.owner_address)
}
::std::string* FreezeBalanceContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.FreezeBalanceContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FreezeBalanceContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.FreezeBalanceContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FreezeBalanceContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.FreezeBalanceContract.owner_address)
}

// int64 frozen_balance = 2;
void FreezeBalanceContract::clear_frozen_balance() {
  frozen_balance_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 FreezeBalanceContract::frozen_balance() const {
  // @@protoc_insertion_point(field_get:protocol.FreezeBalanceContract.frozen_balance)
  return frozen_balance_;
}
void FreezeBalanceContract::set_frozen_balance(::google::protobuf::int64 value) {
  
  frozen_balance_ = value;
  // @@protoc_insertion_point(field_set:protocol.FreezeBalanceContract.frozen_balance)
}

// int64 frozen_duration = 3;
void FreezeBalanceContract::clear_frozen_duration() {
  frozen_duration_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 FreezeBalanceContract::frozen_duration() const {
  // @@protoc_insertion_point(field_get:protocol.FreezeBalanceContract.frozen_duration)
  return frozen_duration_;
}
void FreezeBalanceContract::set_frozen_duration(::google::protobuf::int64 value) {
  
  frozen_duration_ = value;
  // @@protoc_insertion_point(field_set:protocol.FreezeBalanceContract.frozen_duration)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnfreezeBalanceContract::kOwnerAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnfreezeBalanceContract::UnfreezeBalanceContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.UnfreezeBalanceContract)
}
UnfreezeBalanceContract::UnfreezeBalanceContract(const UnfreezeBalanceContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.UnfreezeBalanceContract)
}

void UnfreezeBalanceContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UnfreezeBalanceContract::~UnfreezeBalanceContract() {
  // @@protoc_insertion_point(destructor:protocol.UnfreezeBalanceContract)
  SharedDtor();
}

void UnfreezeBalanceContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnfreezeBalanceContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnfreezeBalanceContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnfreezeBalanceContract& UnfreezeBalanceContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnfreezeBalanceContract* UnfreezeBalanceContract::New(::google::protobuf::Arena* arena) const {
  UnfreezeBalanceContract* n = new UnfreezeBalanceContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnfreezeBalanceContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.UnfreezeBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UnfreezeBalanceContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.UnfreezeBalanceContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.UnfreezeBalanceContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.UnfreezeBalanceContract)
  return false;
#undef DO_
}

void UnfreezeBalanceContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.UnfreezeBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.UnfreezeBalanceContract)
}

::google::protobuf::uint8* UnfreezeBalanceContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.UnfreezeBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.UnfreezeBalanceContract)
  return target;
}

size_t UnfreezeBalanceContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.UnfreezeBalanceContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnfreezeBalanceContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.UnfreezeBalanceContract)
  GOOGLE_DCHECK_NE(&from, this);
  const UnfreezeBalanceContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnfreezeBalanceContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.UnfreezeBalanceContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.UnfreezeBalanceContract)
    MergeFrom(*source);
  }
}

void UnfreezeBalanceContract::MergeFrom(const UnfreezeBalanceContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.UnfreezeBalanceContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
}

void UnfreezeBalanceContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.UnfreezeBalanceContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnfreezeBalanceContract::CopyFrom(const UnfreezeBalanceContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.UnfreezeBalanceContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnfreezeBalanceContract::IsInitialized() const {
  return true;
}

void UnfreezeBalanceContract::Swap(UnfreezeBalanceContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnfreezeBalanceContract::InternalSwap(UnfreezeBalanceContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnfreezeBalanceContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnfreezeBalanceContract

// bytes owner_address = 1;
void UnfreezeBalanceContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnfreezeBalanceContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.UnfreezeBalanceContract.owner_address)
  return owner_address_.GetNoArena();
}
void UnfreezeBalanceContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.UnfreezeBalanceContract.owner_address)
}
#if LANG_CXX11
void UnfreezeBalanceContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.UnfreezeBalanceContract.owner_address)
}
#endif
void UnfreezeBalanceContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.UnfreezeBalanceContract.owner_address)
}
void UnfreezeBalanceContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.UnfreezeBalanceContract.owner_address)
}
::std::string* UnfreezeBalanceContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.UnfreezeBalanceContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnfreezeBalanceContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.UnfreezeBalanceContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnfreezeBalanceContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.UnfreezeBalanceContract.owner_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnfreezeAssetContract::kOwnerAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnfreezeAssetContract::UnfreezeAssetContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.UnfreezeAssetContract)
}
UnfreezeAssetContract::UnfreezeAssetContract(const UnfreezeAssetContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.UnfreezeAssetContract)
}

void UnfreezeAssetContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UnfreezeAssetContract::~UnfreezeAssetContract() {
  // @@protoc_insertion_point(destructor:protocol.UnfreezeAssetContract)
  SharedDtor();
}

void UnfreezeAssetContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnfreezeAssetContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnfreezeAssetContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnfreezeAssetContract& UnfreezeAssetContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnfreezeAssetContract* UnfreezeAssetContract::New(::google::protobuf::Arena* arena) const {
  UnfreezeAssetContract* n = new UnfreezeAssetContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnfreezeAssetContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.UnfreezeAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UnfreezeAssetContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.UnfreezeAssetContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.UnfreezeAssetContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.UnfreezeAssetContract)
  return false;
#undef DO_
}

void UnfreezeAssetContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.UnfreezeAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.UnfreezeAssetContract)
}

::google::protobuf::uint8* UnfreezeAssetContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.UnfreezeAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.UnfreezeAssetContract)
  return target;
}

size_t UnfreezeAssetContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.UnfreezeAssetContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnfreezeAssetContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.UnfreezeAssetContract)
  GOOGLE_DCHECK_NE(&from, this);
  const UnfreezeAssetContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnfreezeAssetContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.UnfreezeAssetContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.UnfreezeAssetContract)
    MergeFrom(*source);
  }
}

void UnfreezeAssetContract::MergeFrom(const UnfreezeAssetContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.UnfreezeAssetContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
}

void UnfreezeAssetContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.UnfreezeAssetContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnfreezeAssetContract::CopyFrom(const UnfreezeAssetContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.UnfreezeAssetContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnfreezeAssetContract::IsInitialized() const {
  return true;
}

void UnfreezeAssetContract::Swap(UnfreezeAssetContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnfreezeAssetContract::InternalSwap(UnfreezeAssetContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnfreezeAssetContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnfreezeAssetContract

// bytes owner_address = 1;
void UnfreezeAssetContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnfreezeAssetContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.UnfreezeAssetContract.owner_address)
  return owner_address_.GetNoArena();
}
void UnfreezeAssetContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.UnfreezeAssetContract.owner_address)
}
#if LANG_CXX11
void UnfreezeAssetContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.UnfreezeAssetContract.owner_address)
}
#endif
void UnfreezeAssetContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.UnfreezeAssetContract.owner_address)
}
void UnfreezeAssetContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.UnfreezeAssetContract.owner_address)
}
::std::string* UnfreezeAssetContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.UnfreezeAssetContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnfreezeAssetContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.UnfreezeAssetContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnfreezeAssetContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.UnfreezeAssetContract.owner_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WithdrawBalanceContract::kOwnerAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WithdrawBalanceContract::WithdrawBalanceContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.WithdrawBalanceContract)
}
WithdrawBalanceContract::WithdrawBalanceContract(const WithdrawBalanceContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.WithdrawBalanceContract)
}

void WithdrawBalanceContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

WithdrawBalanceContract::~WithdrawBalanceContract() {
  // @@protoc_insertion_point(destructor:protocol.WithdrawBalanceContract)
  SharedDtor();
}

void WithdrawBalanceContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WithdrawBalanceContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WithdrawBalanceContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WithdrawBalanceContract& WithdrawBalanceContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

WithdrawBalanceContract* WithdrawBalanceContract::New(::google::protobuf::Arena* arena) const {
  WithdrawBalanceContract* n = new WithdrawBalanceContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WithdrawBalanceContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.WithdrawBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool WithdrawBalanceContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.WithdrawBalanceContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.WithdrawBalanceContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.WithdrawBalanceContract)
  return false;
#undef DO_
}

void WithdrawBalanceContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.WithdrawBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.WithdrawBalanceContract)
}

::google::protobuf::uint8* WithdrawBalanceContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.WithdrawBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.WithdrawBalanceContract)
  return target;
}

size_t WithdrawBalanceContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.WithdrawBalanceContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WithdrawBalanceContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.WithdrawBalanceContract)
  GOOGLE_DCHECK_NE(&from, this);
  const WithdrawBalanceContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WithdrawBalanceContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.WithdrawBalanceContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.WithdrawBalanceContract)
    MergeFrom(*source);
  }
}

void WithdrawBalanceContract::MergeFrom(const WithdrawBalanceContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.WithdrawBalanceContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
}

void WithdrawBalanceContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.WithdrawBalanceContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WithdrawBalanceContract::CopyFrom(const WithdrawBalanceContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.WithdrawBalanceContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WithdrawBalanceContract::IsInitialized() const {
  return true;
}

void WithdrawBalanceContract::Swap(WithdrawBalanceContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WithdrawBalanceContract::InternalSwap(WithdrawBalanceContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WithdrawBalanceContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WithdrawBalanceContract

// bytes owner_address = 1;
void WithdrawBalanceContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WithdrawBalanceContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.WithdrawBalanceContract.owner_address)
  return owner_address_.GetNoArena();
}
void WithdrawBalanceContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.WithdrawBalanceContract.owner_address)
}
#if LANG_CXX11
void WithdrawBalanceContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.WithdrawBalanceContract.owner_address)
}
#endif
void WithdrawBalanceContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.WithdrawBalanceContract.owner_address)
}
void WithdrawBalanceContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.WithdrawBalanceContract.owner_address)
}
::std::string* WithdrawBalanceContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.WithdrawBalanceContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WithdrawBalanceContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.WithdrawBalanceContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WithdrawBalanceContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.WithdrawBalanceContract.owner_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateAssetContract::kOwnerAddressFieldNumber;
const int UpdateAssetContract::kDescriptionFieldNumber;
const int UpdateAssetContract::kUrlFieldNumber;
const int UpdateAssetContract::kNewLimitFieldNumber;
const int UpdateAssetContract::kNewPublicLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateAssetContract::UpdateAssetContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_core_2fContract_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.UpdateAssetContract)
}
UpdateAssetContract::UpdateAssetContract(const UpdateAssetContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&new_limit_, &from.new_limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&new_public_limit_) -
    reinterpret_cast<char*>(&new_limit_)) + sizeof(new_public_limit_));
  // @@protoc_insertion_point(copy_constructor:protocol.UpdateAssetContract)
}

void UpdateAssetContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&new_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_public_limit_) -
      reinterpret_cast<char*>(&new_limit_)) + sizeof(new_public_limit_));
  _cached_size_ = 0;
}

UpdateAssetContract::~UpdateAssetContract() {
  // @@protoc_insertion_point(destructor:protocol.UpdateAssetContract)
  SharedDtor();
}

void UpdateAssetContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateAssetContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateAssetContract::descriptor() {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateAssetContract& UpdateAssetContract::default_instance() {
  protobuf_core_2fContract_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateAssetContract* UpdateAssetContract::New(::google::protobuf::Arena* arena) const {
  UpdateAssetContract* n = new UpdateAssetContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateAssetContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.UpdateAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&new_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_public_limit_) -
      reinterpret_cast<char*>(&new_limit_)) + sizeof(new_public_limit_));
  _internal_metadata_.Clear();
}

bool UpdateAssetContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.UpdateAssetContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 new_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &new_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 new_public_limit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &new_public_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.UpdateAssetContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.UpdateAssetContract)
  return false;
#undef DO_
}

void UpdateAssetContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.UpdateAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->description(), output);
  }

  // bytes url = 3;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->url(), output);
  }

  // int64 new_limit = 4;
  if (this->new_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->new_limit(), output);
  }

  // int64 new_public_limit = 5;
  if (this->new_public_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->new_public_limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.UpdateAssetContract)
}

::google::protobuf::uint8* UpdateAssetContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.UpdateAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes description = 2;
  if (this->description().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->description(), target);
  }

  // bytes url = 3;
  if (this->url().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->url(), target);
  }

  // int64 new_limit = 4;
  if (this->new_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->new_limit(), target);
  }

  // int64 new_public_limit = 5;
  if (this->new_public_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->new_public_limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.UpdateAssetContract)
  return target;
}

size_t UpdateAssetContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.UpdateAssetContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->description());
  }

  // bytes url = 3;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->url());
  }

  // int64 new_limit = 4;
  if (this->new_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->new_limit());
  }

  // int64 new_public_limit = 5;
  if (this->new_public_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->new_public_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateAssetContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.UpdateAssetContract)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateAssetContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateAssetContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.UpdateAssetContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.UpdateAssetContract)
    MergeFrom(*source);
  }
}

void UpdateAssetContract::MergeFrom(const UpdateAssetContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.UpdateAssetContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.new_limit() != 0) {
    set_new_limit(from.new_limit());
  }
  if (from.new_public_limit() != 0) {
    set_new_public_limit(from.new_public_limit());
  }
}

void UpdateAssetContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.UpdateAssetContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateAssetContract::CopyFrom(const UpdateAssetContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.UpdateAssetContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAssetContract::IsInitialized() const {
  return true;
}

void UpdateAssetContract::Swap(UpdateAssetContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateAssetContract::InternalSwap(UpdateAssetContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_);
  description_.Swap(&other->description_);
  url_.Swap(&other->url_);
  swap(new_limit_, other->new_limit_);
  swap(new_public_limit_, other->new_public_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateAssetContract::GetMetadata() const {
  protobuf_core_2fContract_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2fContract_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateAssetContract

// bytes owner_address = 1;
void UpdateAssetContract::clear_owner_address() {
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateAssetContract::owner_address() const {
  // @@protoc_insertion_point(field_get:protocol.UpdateAssetContract.owner_address)
  return owner_address_.GetNoArena();
}
void UpdateAssetContract::set_owner_address(const ::std::string& value) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.UpdateAssetContract.owner_address)
}
#if LANG_CXX11
void UpdateAssetContract::set_owner_address(::std::string&& value) {
  
  owner_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.UpdateAssetContract.owner_address)
}
#endif
void UpdateAssetContract::set_owner_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.UpdateAssetContract.owner_address)
}
void UpdateAssetContract::set_owner_address(const void* value, size_t size) {
  
  owner_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.UpdateAssetContract.owner_address)
}
::std::string* UpdateAssetContract::mutable_owner_address() {
  
  // @@protoc_insertion_point(field_mutable:protocol.UpdateAssetContract.owner_address)
  return owner_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAssetContract::release_owner_address() {
  // @@protoc_insertion_point(field_release:protocol.UpdateAssetContract.owner_address)
  
  return owner_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAssetContract::set_allocated_owner_address(::std::string* owner_address) {
  if (owner_address != NULL) {
    
  } else {
    
  }
  owner_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_address);
  // @@protoc_insertion_point(field_set_allocated:protocol.UpdateAssetContract.owner_address)
}

// bytes description = 2;
void UpdateAssetContract::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateAssetContract::description() const {
  // @@protoc_insertion_point(field_get:protocol.UpdateAssetContract.description)
  return description_.GetNoArena();
}
void UpdateAssetContract::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.UpdateAssetContract.description)
}
#if LANG_CXX11
void UpdateAssetContract::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.UpdateAssetContract.description)
}
#endif
void UpdateAssetContract::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.UpdateAssetContract.description)
}
void UpdateAssetContract::set_description(const void* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.UpdateAssetContract.description)
}
::std::string* UpdateAssetContract::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:protocol.UpdateAssetContract.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAssetContract::release_description() {
  // @@protoc_insertion_point(field_release:protocol.UpdateAssetContract.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAssetContract::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:protocol.UpdateAssetContract.description)
}

// bytes url = 3;
void UpdateAssetContract::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateAssetContract::url() const {
  // @@protoc_insertion_point(field_get:protocol.UpdateAssetContract.url)
  return url_.GetNoArena();
}
void UpdateAssetContract::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.UpdateAssetContract.url)
}
#if LANG_CXX11
void UpdateAssetContract::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.UpdateAssetContract.url)
}
#endif
void UpdateAssetContract::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.UpdateAssetContract.url)
}
void UpdateAssetContract::set_url(const void* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.UpdateAssetContract.url)
}
::std::string* UpdateAssetContract::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:protocol.UpdateAssetContract.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAssetContract::release_url() {
  // @@protoc_insertion_point(field_release:protocol.UpdateAssetContract.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAssetContract::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:protocol.UpdateAssetContract.url)
}

// int64 new_limit = 4;
void UpdateAssetContract::clear_new_limit() {
  new_limit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 UpdateAssetContract::new_limit() const {
  // @@protoc_insertion_point(field_get:protocol.UpdateAssetContract.new_limit)
  return new_limit_;
}
void UpdateAssetContract::set_new_limit(::google::protobuf::int64 value) {
  
  new_limit_ = value;
  // @@protoc_insertion_point(field_set:protocol.UpdateAssetContract.new_limit)
}

// int64 new_public_limit = 5;
void UpdateAssetContract::clear_new_public_limit() {
  new_public_limit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 UpdateAssetContract::new_public_limit() const {
  // @@protoc_insertion_point(field_get:protocol.UpdateAssetContract.new_public_limit)
  return new_public_limit_;
}
void UpdateAssetContract::set_new_public_limit(::google::protobuf::int64 value) {
  
  new_public_limit_ = value;
  // @@protoc_insertion_point(field_set:protocol.UpdateAssetContract.new_public_limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

// @@protoc_insertion_point(global_scope)
